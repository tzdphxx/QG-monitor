{"version":3,"sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/TestComponents.tsx","../../src/components/UserDashboard.tsx","../../src/components/ShoppingCart.tsx","../../src/components/ErrorTest.tsx","../../src/components/PerformanceTest.tsx","../../src/components/BehaviorTest.tsx","../../src/App.tsx","../../src/main.tsx"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createRoot","hydrateRoot","TestComponents","count","setCount","useState","asyncLoading","setAsyncLoading","simulateBusinessAction","actionType","console","log","prev","localStorage","setItem","JSON","stringify","timestamp","Date","now","className","id","children","onClick","Error","async","Promise","resolve","reject","setTimeout","error","disabled","response","fetch","method","headers","body","testData","ok","status","statusText","img","document","createElement","src","alt","style","display","appendChild","contains","removeChild","window","location","reload","Math","max","navigator","share","title","text","url","href","catch","err","UserDashboard","userData","setUserData","loading","setLoading","notifications","setNotifications","useEffect","name","email","loginTime","permissions","Fragment","toLocaleString","map","permission","index","notification","exportData","user","exportTime","toISOString","ShoppingCart","products","setProducts","price","quantity","category","couponCode","setCouponCode","isProcessing","setIsProcessing","updateQuantity","productId","newQuantity","removeProduct","product","filter","addProduct","newProduct","floor","random","getTotalPrice","reduce","total","length","toFixed","placeholder","value","onChange","target","trim","code","cartTotal","alert","orderData","ErrorComponent","shouldError","ErrorTest","renderError","setRenderError","lastError","setLastError","triggerJSError","undefinedVariable","nonExistentMethod","triggerPromiseError","triggerSyntaxError","eval","triggerAsyncError","triggerNetworkError","triggerResourceError","Image","script","head","triggerRenderError","manualReportError","stack","_a","monitor","captureError","errorLevel","component","userAction","triggerWhiteScreen","whiteScreenError","errorType","detectionType","triggerLongTask","marginBottom","Link","to","i","textAlign","lineHeight","fontSize","PerformanceTest","isRunning","setIsRunning","testResults","setTestResults","addResult","result","slice","runLongTask","duration","start","performance","actualDuration","trackMetric","expected","collectPageMetrics","navigation","getEntriesByType","paint","metrics","domainLookupEnd","domainLookupStart","connectEnd","connectStart","loadEventEnd","fetchStart","domContentLoadedEventEnd","entries","forEach","timing","navigationStart","entry","startTime","replace","fibonacci","input","largeArray","push","Array","fill","memoryUsed","container","element","textContent","position","left","top","requests","results","json","avgDuration","background","padding","borderRadius","fontFamily","maxHeight","overflowY","BehaviorTest","navigate","useNavigate","clickCount","setClickCount","formData","setFormData","username","message","scrollPosition","setScrollPosition","handleScroll","pageYOffset","addEventListener","removeEventListener","trackBusiness","productName","_b","trackEvent","userId","steps","step","orderId","amount","totalSteps","flexWrap","gap","elements","margin","buttonId","totalClicks","createClickableElements","onSubmit","preventDefault","formType","fields","keys","maxWidth","width","border","height","onKeyDown","inputValue","currentTarget","color","_","rating","feedback","page","action","delay","flowStep","flowId","onMouseEnter","onFocus","onContextMenu","marginTop","blockIndex","SimpleErrorBoundary","React","Component","constructor","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","App","Router","Routes","Route","path","HomePage","borderTop","userInfo","setUserInfo","age","lcpImageLoaded","setLcpImageLoaded","handleInputChange","field","boxShadow","objectFit","onLoad","loadTime","textShadow","opacity","fontWeight","cursor","transition","transform","onMouseLeave","button","gridTemplateColumns","htmlFor","textDecoration","paddingLeft","config","projectId","apiUrl","debug","sampleRate","maxBreadcrumbs","version","initSDK","Monitor","__vitePreload","import","defaultTags","environment","buildTime","enabledModules","behavior","init","readyState","getElementById","root"],"mappings":"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","sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// src/components/TestComponents.tsx - 修复版本\r\nimport React, { useState } from 'react';\r\n\r\nconst TestComponents: React.FC = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [asyncLoading, setAsyncLoading] = useState(false);\r\n\r\n  // JavaScript 错误测试\r\n  const triggerJSError = () => {\r\n    console.log('触发 JavaScript 错误');\r\n    // 修复：显式抛出错误而不是访问 null 对象\r\n    const obj: any = null;\r\n    if (obj === null) {\r\n      throw new Error('故意触发的 JavaScript 错误：访问 null 对象的属性');\r\n    }\r\n    obj.nonExistentProperty.someMethod();\r\n  };\r\n\r\n  // Promise 错误测试\r\n  const triggerPromiseError = async () => {\r\n    setAsyncLoading(true);\r\n    console.log('触发 Promise 错误');\r\n\r\n    try {\r\n      await new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          reject(new Error('模拟异步操作失败'));\r\n        }, 1000);\r\n      });\r\n    } catch (error) {\r\n      setAsyncLoading(false);\r\n      throw error; // 重新抛出错误，让 SDK 捕获\r\n    }\r\n  };\r\n\r\n  // HTTP 错误测试\r\n  const triggerHttpError = async () => {\r\n    console.log('触发 HTTP 错误');\r\n\r\n    try {\r\n      const response = await fetch('http://192.168.1.161:8080/api/nonexistent-endpoint', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Test-Header': 'error-test'\r\n        },\r\n        body: JSON.stringify({\r\n          testData: 'error simulation',\r\n          timestamp: Date.now()\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`HTTP 错误: ${response.status} ${response.statusText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('网络请求失败:', error);\r\n    }\r\n  };\r\n\r\n  // 资源加载错误测试\r\n  const triggerResourceError = () => {\r\n    console.log('触发资源加载错误');\r\n\r\n    const img = document.createElement('img');\r\n    img.id = 'test-broken-image';\r\n    img.src = 'http://localhost:3000/nonexistent-image.jpg';\r\n    img.alt = '测试破损图片';\r\n    img.style.display = 'none';\r\n    document.body.appendChild(img);\r\n\r\n    setTimeout(() => {\r\n      if (document.body.contains(img)) {\r\n        document.body.removeChild(img);\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  // 模拟业务操作\r\n  const simulateBusinessAction = (actionType: string) => {\r\n    console.log(`执行业务操作: ${actionType}`);\r\n\r\n    // 模拟一些业务逻辑\r\n    if (actionType === 'purchase') {\r\n      setCount(prev => prev + 1);\r\n    } else if (actionType === 'save') {\r\n      localStorage.setItem('testData', JSON.stringify({\r\n        count,\r\n        timestamp: Date.now()\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 模拟长时间任务\r\n  const triggerLongTask = () => {\r\n    console.log('触发长时间任务');\r\n\r\n    const startTime = Date.now();\r\n    while (Date.now() - startTime < 100) {\r\n      // 空循环，造成阻塞\r\n    }\r\n    console.log('长时间任务完成');\r\n  };\r\n\r\n  // 其余组件代码保持不变...\r\n  return (\r\n    <div className=\"test-components\" id=\"test-container\">\r\n      <h2 id=\"test-page-title\">错误监控测试页面</h2>\r\n\r\n      {/* 错误测试区域 */}\r\n      <section className=\"test-section\" id=\"error-test-section\">\r\n        <h3 id=\"error-test-title\">错误测试</h3>\r\n        <div className=\"test-buttons\" id=\"error-test-buttons\">\r\n          <button\r\n            id=\"trigger-js-error\"\r\n            className=\"test-button danger\"\r\n            onClick={triggerJSError}\r\n            data-test-type=\"js-error\"\r\n          >\r\n            触发 JS 错误\r\n          </button>\r\n\r\n          <button\r\n            id=\"trigger-promise-error\"\r\n            className=\"test-button danger\"\r\n            onClick={triggerPromiseError}\r\n            disabled={asyncLoading}\r\n            data-test-type=\"promise-error\"\r\n          >\r\n            {asyncLoading ? '处理中...' : '触发 Promise 错误'}\r\n          </button>\r\n\r\n          <button\r\n            id=\"trigger-http-error\"\r\n            className=\"test-button danger\"\r\n            onClick={triggerHttpError}\r\n            data-test-type=\"http-error\"\r\n          >\r\n            触发 HTTP 错误\r\n          </button>\r\n\r\n          <button\r\n            id=\"trigger-resource-error\"\r\n            className=\"test-button danger\"\r\n            onClick={triggerResourceError}\r\n            data-test-type=\"resource-error\"\r\n          >\r\n            触发资源错误\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 性能测试区域 */}\r\n      <section className=\"test-section\" id=\"performance-test-section\">\r\n        <h3 id=\"performance-test-title\">性能测试</h3>\r\n        <div className=\"test-buttons\" id=\"performance-test-buttons\">\r\n          <button\r\n            id=\"trigger-long-task\"\r\n            className=\"test-button warning\"\r\n            onClick={triggerLongTask}\r\n            data-test-type=\"performance\"\r\n          >\r\n            触发长时间任务\r\n          </button>\r\n\r\n          <button\r\n            id=\"reload-page\"\r\n            className=\"test-button\"\r\n            onClick={() => window.location.reload()}\r\n            data-test-type=\"navigation\"\r\n          >\r\n            重新加载页面\r\n          </button>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 用户行为测试区域 */}\r\n      <section className=\"test-section\" id=\"behavior-test-section\">\r\n        <h3 id=\"behavior-test-title\">用户行为测试</h3>\r\n        <div className=\"behavior-controls\" id=\"behavior-controls\">\r\n          <div className=\"counter-section\" id=\"counter-section\">\r\n            <span id=\"counter-label\">计数器: </span>\r\n            <span id=\"counter-value\">{count}</span>\r\n            <button\r\n              id=\"increment-counter\"\r\n              className=\"test-button\"\r\n              onClick={() => {\r\n                setCount(prev => prev + 1);\r\n                simulateBusinessAction('increment');\r\n              }}\r\n              data-test-type=\"user-action\"\r\n            >\r\n              增加\r\n            </button>\r\n            <button\r\n              id=\"decrement-counter\"\r\n              className=\"test-button\"\r\n              onClick={() => {\r\n                setCount(prev => Math.max(0, prev - 1));\r\n                simulateBusinessAction('decrement');\r\n              }}\r\n              data-test-type=\"user-action\"\r\n            >\r\n              减少\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"business-actions\" id=\"business-actions\">\r\n            <button\r\n              id=\"simulate-purchase\"\r\n              className=\"test-button success\"\r\n              onClick={() => simulateBusinessAction('purchase')}\r\n              data-test-type=\"business-action\"\r\n              data-business-type=\"purchase\"\r\n            >\r\n              模拟购买\r\n            </button>\r\n\r\n            <button\r\n              id=\"simulate-save\"\r\n              className=\"test-button\"\r\n              onClick={() => simulateBusinessAction('save')}\r\n              data-test-type=\"business-action\"\r\n              data-business-type=\"save\"\r\n            >\r\n              保存数据\r\n            </button>\r\n\r\n            <button\r\n              id=\"simulate-share\"\r\n              className=\"test-button\"\r\n              onClick={() => {\r\n                if (navigator.share) {\r\n                  navigator.share({\r\n                    title: 'Mini Sentry 测试',\r\n                    text: '正在测试监控功能',\r\n                    url: window.location.href\r\n                  }).catch(err => console.log('分享失败:', err));\r\n                } else {\r\n                  console.log('浏览器不支持 Web Share API');\r\n                }\r\n              }}\r\n              data-test-type=\"business-action\"\r\n              data-business-type=\"share\"\r\n            >\r\n              分享页面\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 其余部分保持原有代码... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestComponents;","import React, { useState, useEffect } from 'react';\r\n\r\ninterface UserData {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  loginTime: number;\r\n  permissions: string[];\r\n}\r\n\r\nconst UserDashboard: React.FC = () => {\r\n  const [userData, setUserData] = useState<UserData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [notifications, setNotifications] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    // 模拟加载用户数据\r\n    const loadUserData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // 模拟API延迟\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n        // 模拟用户数据\r\n        setUserData({\r\n          id: 'user_' + Date.now(),\r\n          name: '测试用户',\r\n          email: 'test@example.com',\r\n          loginTime: Date.now(),\r\n          permissions: ['read', 'write', 'admin']\r\n        });\r\n\r\n        setNotifications([\r\n          '欢迎使用监控平台',\r\n          '您有3条新消息',\r\n          '系统将在今晚进行维护'\r\n        ]);\r\n\r\n      } catch (error) {\r\n        console.error('加载用户数据失败:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUserData();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    console.log('用户退出');\r\n    setUserData(null);\r\n    setNotifications([]);\r\n  };\r\n\r\n  const handleDataExport = async () => {\r\n    try {\r\n      console.log('开始导出数据');\r\n\r\n      // 模拟数据导出\r\n      const exportData = {\r\n        user: userData,\r\n        exportTime: new Date().toISOString(),\r\n        type: 'user_dashboard_export'\r\n      };\r\n\r\n      // 模拟API调用\r\n      const response = await fetch('/api/export/user-data', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(exportData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('导出失败');\r\n      }\r\n\r\n      console.log('数据导出成功');\r\n    } catch (error) {\r\n      console.error('数据导出失败:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-loading\" id=\"dashboard-loading\">\r\n        <div id=\"loading-spinner\">正在加载用户数据...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-dashboard\" id=\"user-dashboard-container\">\r\n      <header className=\"dashboard-header\" id=\"dashboard-header\">\r\n        <h2 id=\"dashboard-title\">用户控制面板</h2>\r\n        <button\r\n          id=\"logout-button\"\r\n          className=\"logout-btn\"\r\n          onClick={handleLogout}\r\n          data-action=\"logout\"\r\n        >\r\n          退出登录\r\n        </button>\r\n      </header>\r\n\r\n      {userData && (\r\n        <>\r\n          <section className=\"user-info-section\" id=\"user-info-section\">\r\n            <h3 id=\"user-info-title\">用户信息</h3>\r\n            <div className=\"user-info-card\" id=\"user-info-card\">\r\n              <div className=\"info-item\" id=\"user-id-info\">\r\n                <label>用户ID:</label>\r\n                <span id=\"user-id-value\">{userData.id}</span>\r\n              </div>\r\n              <div className=\"info-item\" id=\"user-name-info\">\r\n                <label>姓名:</label>\r\n                <span id=\"user-name-value\">{userData.name}</span>\r\n              </div>\r\n              <div className=\"info-item\" id=\"user-email-info\">\r\n                <label>邮箱:</label>\r\n                <span id=\"user-email-value\">{userData.email}</span>\r\n              </div>\r\n              <div className=\"info-item\" id=\"user-login-time-info\">\r\n                <label>登录时间:</label>\r\n                <span id=\"user-login-time-value\">\r\n                  {new Date(userData.loginTime).toLocaleString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"permissions-section\" id=\"permissions-section\">\r\n            <h3 id=\"permissions-title\">权限列表</h3>\r\n            <div className=\"permissions-list\" id=\"permissions-list\">\r\n              {userData.permissions.map((permission, index) => (\r\n                <span\r\n                  key={permission}\r\n                  className=\"permission-tag\"\r\n                  id={`permission-${permission}`}\r\n                  data-permission={permission}\r\n                >\r\n                  {permission}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"notifications-section\" id=\"notifications-section\">\r\n            <h3 id=\"notifications-title\">通知消息</h3>\r\n            <div className=\"notifications-list\" id=\"notifications-list\">\r\n              {notifications.map((notification, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"notification-item\"\r\n                  id={`notification-${index}`}\r\n                  data-notification-index={index}\r\n                >\r\n                  {notification}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"actions-section\" id=\"dashboard-actions-section\">\r\n            <h3 id=\"actions-title\">操作</h3>\r\n            <div className=\"action-buttons\" id=\"action-buttons\">\r\n              <button\r\n                id=\"export-data-button\"\r\n                className=\"action-btn primary\"\r\n                onClick={handleDataExport}\r\n                data-action=\"export\"\r\n              >\r\n                导出数据\r\n              </button>\r\n\r\n              <button\r\n                id=\"clear-notifications-button\"\r\n                className=\"action-btn secondary\"\r\n                onClick={() => {\r\n                  setNotifications([]);\r\n                  console.log('通知已清空');\r\n                }}\r\n                data-action=\"clear-notifications\"\r\n              >\r\n                清空通知\r\n              </button>\r\n\r\n              <button\r\n                id=\"refresh-dashboard-button\"\r\n                className=\"action-btn\"\r\n                onClick={() => {\r\n                  window.location.reload();\r\n                }}\r\n                data-action=\"refresh\"\r\n              >\r\n                刷新面板\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;","import React, { useState } from 'react';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  category: string;\r\n}\r\n\r\nconst ShoppingCart: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([\r\n    {\r\n      id: 'prod-001',\r\n      name: '监控服务套餐A',\r\n      price: 99.99,\r\n      quantity: 1,\r\n      category: 'service'\r\n    },\r\n    {\r\n      id: 'prod-002',\r\n      name: '高级分析报告',\r\n      price: 199.99,\r\n      quantity: 1,\r\n      category: 'analytics'\r\n    }\r\n  ]);\r\n\r\n  const [couponCode, setCouponCode] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const updateQuantity = (productId: string, newQuantity: number) => {\r\n    if (newQuantity <= 0) {\r\n      removeProduct(productId);\r\n      return;\r\n    }\r\n\r\n    setProducts(prev =>\r\n      prev.map(product =>\r\n        product.id === productId\r\n          ? { ...product, quantity: newQuantity }\r\n          : product\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeProduct = (productId: string) => {\r\n    setProducts(prev => prev.filter(product => product.id !== productId));\r\n    console.log(`产品 ${productId} 已从购物车移除`);\r\n  };\r\n\r\n  const addProduct = () => {\r\n    const newProduct: Product = {\r\n      id: `prod-${Date.now()}`,\r\n      name: `新产品 ${Date.now()}`,\r\n      price: Math.floor(Math.random() * 500) + 50,\r\n      quantity: 1,\r\n      category: 'addon'\r\n    };\r\n\r\n    setProducts(prev => [...prev, newProduct]);\r\n    console.log('新产品已添加到购物车:', newProduct);\r\n  };\r\n\r\n  const applyCoupon = async () => {\r\n    if (!couponCode.trim()) {\r\n      alert('请输入优惠券代码');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('应用优惠券:', couponCode);\r\n\r\n      // 模拟API调用\r\n      const response = await fetch('/api/coupons/validate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          code: couponCode,\r\n          cartTotal: getTotalPrice()\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('优惠券无效');\r\n      }\r\n\r\n      alert('优惠券应用成功！');\r\n    } catch (error) {\r\n      console.error('优惠券应用失败:', error);\r\n      alert('优惠券应用失败，请检查代码是否正确');\r\n    }\r\n  };\r\n\r\n  const checkout = async () => {\r\n    if (products.length === 0) {\r\n      alert('购物车为空');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      console.log('开始结账流程');\r\n\r\n      // 模拟支付处理\r\n      const orderData = {\r\n        products: products,\r\n        total: getTotalPrice(),\r\n        couponCode: couponCode,\r\n        timestamp: Date.now()\r\n      };\r\n\r\n      const response = await fetch('/api/orders/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(orderData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('订单创建失败');\r\n      }\r\n\r\n      // 模拟支付延迟\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n      alert('支付成功！订单已创建');\r\n      setProducts([]);\r\n      setCouponCode('');\r\n\r\n    } catch (error) {\r\n      console.error('结账失败:', error);\r\n      alert('支付失败，请重试');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return products.reduce((total, product) => total + (product.price * product.quantity), 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopping-cart\" id=\"shopping-cart-container\">\r\n      <header className=\"cart-header\" id=\"cart-header\">\r\n        <h2 id=\"cart-title\">购物车</h2>\r\n        <span id=\"cart-item-count\" className=\"item-count\">\r\n          {products.length} 个商品\r\n        </span>\r\n      </header>\r\n\r\n      <section className=\"cart-content\" id=\"cart-content\">\r\n        {products.length === 0 ? (\r\n          <div className=\"empty-cart\" id=\"empty-cart-message\">\r\n            <p>购物车为空</p>\r\n            <button\r\n              id=\"add-sample-product\"\r\n              className=\"add-btn\"\r\n              onClick={addProduct}\r\n              data-action=\"add-product\"\r\n            >\r\n              添加示例商品\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"products-list\" id=\"products-list\">\r\n              {products.map((product, index) => (\r\n                <div\r\n                  key={product.id}\r\n                  className=\"product-item\"\r\n                  id={`product-item-${product.id}`}\r\n                  data-product-id={product.id}\r\n                  data-product-category={product.category}\r\n                >\r\n                  <div className=\"product-info\" id={`product-info-${product.id}`}>\r\n                    <h4 id={`product-name-${product.id}`}>{product.name}</h4>\r\n                    <span id={`product-price-${product.id}`} className=\"price\">\r\n                      ¥{product.price.toFixed(2)}\r\n                    </span>\r\n                    <span id={`product-category-${product.id}`} className=\"category\">\r\n                      {product.category}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"quantity-controls\" id={`quantity-controls-${product.id}`}>\r\n                    <button\r\n                      id={`decrease-quantity-${product.id}`}\r\n                      className=\"quantity-btn\"\r\n                      onClick={() => updateQuantity(product.id, product.quantity - 1)}\r\n                      data-action=\"decrease-quantity\"\r\n                      data-product-id={product.id}\r\n                    >\r\n                      -\r\n                    </button>\r\n\r\n                    <span id={`quantity-value-${product.id}`} className=\"quantity\">\r\n                      {product.quantity}\r\n                    </span>\r\n\r\n                    <button\r\n                      id={`increase-quantity-${product.id}`}\r\n                      className=\"quantity-btn\"\r\n                      onClick={() => updateQuantity(product.id, product.quantity + 1)}\r\n                      data-action=\"increase-quantity\"\r\n                      data-product-id={product.id}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n\r\n                  <button\r\n                    id={`remove-product-${product.id}`}\r\n                    className=\"remove-btn\"\r\n                    onClick={() => removeProduct(product.id)}\r\n                    data-action=\"remove-product\"\r\n                    data-product-id={product.id}\r\n                  >\r\n                    移除\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"cart-actions\" id=\"cart-actions\">\r\n              <button\r\n                id=\"add-more-products\"\r\n                className=\"add-btn secondary\"\r\n                onClick={addProduct}\r\n                data-action=\"add-product\"\r\n              >\r\n                添加更多商品\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n\r\n      {products.length > 0 && (\r\n        <section className=\"cart-summary\" id=\"cart-summary\">\r\n          <div className=\"coupon-section\" id=\"coupon-section\">\r\n            <h3 id=\"coupon-title\">优惠券</h3>\r\n            <div className=\"coupon-input-group\" id=\"coupon-input-group\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"coupon-code-input\"\r\n                placeholder=\"输入优惠券代码\"\r\n                value={couponCode}\r\n                onChange={(e) => setCouponCode(e.target.value)}\r\n                data-field=\"coupon-code\"\r\n              />\r\n              <button\r\n                id=\"apply-coupon-button\"\r\n                className=\"apply-coupon-btn\"\r\n                onClick={applyCoupon}\r\n                data-action=\"apply-coupon\"\r\n              >\r\n                应用\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"total-section\" id=\"total-section\">\r\n            <div className=\"total-line\" id=\"subtotal-line\">\r\n              <span>小计:</span>\r\n              <span id=\"subtotal-amount\">¥{getTotalPrice().toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"total-line\" id=\"total-line\">\r\n              <span>总计:</span>\r\n              <span id=\"total-amount\">¥{getTotalPrice().toFixed(2)}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"checkout-section\" id=\"checkout-section\">\r\n            <button\r\n              id=\"checkout-button\"\r\n              className=\"checkout-btn\"\r\n              onClick={checkout}\r\n              disabled={isProcessing}\r\n              data-action=\"checkout\"\r\n            >\r\n              {isProcessing ? '处理中...' : '立即支付'}\r\n            </button>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// 测试组件 - 会抛出渲染错误\r\nfunction ErrorComponent({ shouldError }: { shouldError: boolean }) {\r\n  if (shouldError) {\r\n    // 故意抛出错误来测试 ErrorBoundary\r\n    throw new Error('React 组件渲染错误 - 这是一个测试错误');\r\n  }\r\n  return <div className=\"test-status success\">✅ 组件正常渲染</div>;\r\n}\r\n\r\nfunction ErrorTest() {\r\n  const [renderError, setRenderError] = useState(false);\r\n  const [lastError, setLastError] = useState<string>('');\r\n\r\n  // JavaScript 运行时错误\r\n  const triggerJSError = () => {\r\n    setLastError('JavaScript 运行时错误');\r\n    // 访问未定义的变量\r\n    (window as any).undefinedVariable.nonExistentMethod();\r\n  };\r\n\r\n  // Promise rejection 错误\r\n  const triggerPromiseError = () => {\r\n    setLastError('Promise Rejection 错误');\r\n    Promise.reject(new Error('测试 Promise rejection 错误'));\r\n  };\r\n\r\n  // 语法错误（通过 eval）\r\n  const triggerSyntaxError = () => {\r\n    setLastError('语法错误');\r\n    try {\r\n      eval('var x = ;'); // 故意的语法错误\r\n    } catch (e) {\r\n      throw e; // 重新抛出让 SDK 捕获\r\n    }\r\n  };\r\n\r\n  // 异步错误\r\n  const triggerAsyncError = () => {\r\n    setLastError('异步错误');\r\n    setTimeout(() => {\r\n      throw new Error('异步执行中的错误');\r\n    }, 100);\r\n  };\r\n\r\n  // 网络错误\r\n  const triggerNetworkError = () => {\r\n    setLastError('网络请求错误');\r\n    fetch('/non-existent-api-endpoint')\r\n      .catch(error => {\r\n        console.error('网络请求失败:', error);\r\n      });\r\n  };\r\n\r\n  // 资源加载错误\r\n  const triggerResourceError = () => {\r\n    setLastError('资源加载错误');\r\n    const img = new Image();\r\n    img.src = '/non-existent-image.jpg';\r\n    document.body.appendChild(img);\r\n\r\n    // 创建脚本加载错误\r\n    const script = document.createElement('script');\r\n    script.src = '/non-existent-script.js';\r\n    document.head.appendChild(script);\r\n  };\r\n\r\n  // React 渲染错误\r\n  const triggerRenderError = () => {\r\n    setLastError('React 渲染错误');\r\n    setRenderError(true);\r\n  };\r\n\r\n  // 手动上报错误\r\n  const manualReportError = () => {\r\n    setLastError('手动上报错误');\r\n    const error = new Error('这是一个手动上报的白屏测试错误，captureError 方法应该被调用');\r\n    error.stack = `Error: 这是一个手动上报的测试错误\r\n    at triggerManualError (ErrorTest.tsx:${Math.floor(Math.random() * 100)}:${Math.floor(Math.random() * 50)})\r\n    at onClick (ErrorTest.tsx:${Math.floor(Math.random() * 100)}:${Math.floor(Math.random() * 50)})\r\n    at HTMLButtonElement.callCallback (react-dom.development.js:${Math.floor(Math.random() * 1000)}:${Math.floor(Math.random() * 100)})`;\r\n\r\n    (window as any).monitor?.captureError(error, {\r\n      errorLevel: 'high',\r\n      component: 'ErrorTest',\r\n      userAction: 'manual_report',\r\n      timestamp: Date.now()\r\n    });\r\n  };\r\n\r\n  const triggerWhiteScreen = () => {\r\n    setLastError('白屏检测测试');\r\n\r\n    // 直接手动上报白屏错误，而不是依赖自动检测\r\n    if ((window as any).monitor) {\r\n      const whiteScreenError = new Error('White screen detected - Manual test trigger');\r\n      (window as any).monitor.captureError(whiteScreenError, {\r\n        errorType: 'white_screen_test',\r\n        detectionType: 'manual',\r\n        timestamp: Date.now()\r\n      });\r\n      console.log('✅ 手动触发白屏错误上报');\r\n    } else {\r\n      console.error('❌ Monitor实例不存在');\r\n    }\r\n  };\r\n  // 长任务模拟（会被性能监控捕获）\r\n  const triggerLongTask = () => {\r\n    setLastError('长任务执行（性能问题）');\r\n    const start = Date.now();\r\n    // 模拟200ms的同步阻塞操作\r\n    while (Date.now() - start < 200) {\r\n      // 空循环，阻塞主线程\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"test-section\">\r\n      <h2>🔴 错误监控测试</h2>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Link to=\"/\">\r\n          <button className=\"test-button\">← 返回首页</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {lastError && (\r\n        <div className=\"test-status error\">\r\n          ⚠️ 最近触发的错误: {lastError}\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🚨 JavaScript 错误测试</h3>\r\n        <button className=\"test-button danger\" onClick={triggerJSError}>\r\n          触发运行时错误\r\n        </button>\r\n        <button className=\"test-button danger\" onClick={triggerSyntaxError}>\r\n          触发语法错误\r\n        </button>\r\n        <button className=\"test-button danger\" onClick={triggerAsyncError}>\r\n          触发异步错误\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🌐 Promise 和网络错误</h3>\r\n        <button className=\"test-button danger\" onClick={triggerPromiseError}>\r\n          Promise Rejection\r\n        </button>\r\n        <button className=\"test-button danger\" onClick={triggerNetworkError}>\r\n          网络请求错误\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>📁 资源加载错误</h3>\r\n        <button className=\"test-button danger\" onClick={triggerResourceError}>\r\n          触发资源加载失败\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>⚛️ React 组件错误</h3>\r\n        <button\r\n          className=\"test-button danger\"\r\n          onClick={triggerRenderError}\r\n          disabled={renderError}\r\n        >\r\n          触发组件渲染错误\r\n        </button>\r\n        {renderError && <ErrorComponent shouldError={true} />}\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🎯 特殊场景测试</h3>\r\n        <button className=\"test-button danger\" onClick={manualReportError}>\r\n          手动上报错误\r\n        </button>\r\n        <button className=\"test-button danger\" onClick={triggerWhiteScreen}>\r\n          触发白屏检测（3秒）\r\n        </button>\r\n        <button className=\"test-button danger\" onClick={triggerLongTask}>\r\n          触发长任务（200ms）\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🧪 批量错误测试</h3>\r\n        <button\r\n          className=\"test-button danger\"\r\n          onClick={() => {\r\n            // 快速触发多个错误，测试去重功能\r\n            for (let i = 0; i < 5; i++) {\r\n              setTimeout(() => {\r\n                throw new Error(`批量测试错误 #${i + 1}`);\r\n              }, i * 100);\r\n            }\r\n            setLastError('批量错误测试（5个错误）');\r\n          }}\r\n        >\r\n          批量错误测试（测试去重）\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>📊 观察要点</h3>\r\n        <ul style={{ textAlign: 'left', lineHeight: '1.6', fontSize: '14px' }}>\r\n          <li><strong>浏览器 Console:</strong> 查看 SDK 的错误捕获日志</li>\r\n          <li><strong>Network 面板:</strong> 观察错误数据的上报请求</li>\r\n          <li><strong>Mock 服务器:</strong> 查看终端输出的详细错误信息</li>\r\n          <li><strong>错误内容:</strong> 验证堆栈信息、文件名、行号等是否准确</li>\r\n          <li><strong>面包屑:</strong> 确认用户操作轨迹是否完整记录</li>\r\n          <li><strong>去重机制:</strong> 相同错误是否会被正确去重</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorTest;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PerformanceTest() {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [testResults, setTestResults] = useState<string[]>([]);\r\n\r\n  const addResult = (result: string) => {\r\n    setTestResults(prev => [...prev.slice(-4), result]); // 只保留最近5条结果\r\n  };\r\n\r\n  // 长任务测试 - 阻塞主线程\r\n  const runLongTask = (duration: number = 100) => {\r\n    setIsRunning(true);\r\n    addResult(`🔄 开始执行 ${duration}ms 长任务...`);\r\n\r\n    const start = performance.now();\r\n\r\n    // 使用 setTimeout 让界面更新后再执行长任务\r\n    setTimeout(() => {\r\n      while (performance.now() - start < duration) {\r\n        // 故意阻塞主线程\r\n        Math.random();\r\n      }\r\n\r\n      const actualDuration = performance.now() - start;\r\n      addResult(`✅ 长任务完成: 实际耗时 ${actualDuration.toFixed(2)}ms`);\r\n      setIsRunning(false);\r\n\r\n      // 手动记录性能指标\r\n      (window as any).monitor?.trackMetric('long_task_duration', actualDuration, {\r\n        type: 'manual_test',\r\n        expected: duration\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  // CPU 密集型计算\r\n  const runCPUIntensiveTask = () => {\r\n    setIsRunning(true);\r\n    addResult('🔄 开始 CPU 密集型计算...');\r\n\r\n    setTimeout(() => {\r\n      const start = performance.now();\r\n\r\n      // 计算斐波那契数列（递归方式，CPU 密集）\r\n      function fibonacci(n: number): number {\r\n        if (n <= 1) return n;\r\n        return fibonacci(n - 1) + fibonacci(n - 2);\r\n      }\r\n\r\n      const result = fibonacci(35); // 这会花费较长时间\r\n      const duration = performance.now() - start;\r\n\r\n      addResult(`✅ 计算完成: fib(35)=${result}, 耗时 ${duration.toFixed(2)}ms`);\r\n      setIsRunning(false);\r\n\r\n      (window as any).monitor?.trackMetric('cpu_intensive_task', duration, {\r\n        type: 'fibonacci',\r\n        input: 35,\r\n        result: result\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  // 内存密集型测试\r\n  const runMemoryTest = () => {\r\n    setIsRunning(true);\r\n    addResult('🔄 开始内存分配测试...');\r\n\r\n    setTimeout(() => {\r\n      const start = performance.now();\r\n\r\n      // 创建大量对象\r\n      const largeArray: number[][] = [];\r\n      for (let i = 0; i < 1000; i++) {\r\n        largeArray.push(new Array(1000).fill(Math.random()));\r\n      }\r\n\r\n      const duration = performance.now() - start;\r\n      const memoryUsed = (largeArray.length * 1000 * 8) / (1024 * 1024); // 估算MB\r\n\r\n      addResult(`✅ 内存测试完成: 分配 ${memoryUsed.toFixed(2)}MB, 耗时 ${duration.toFixed(2)}ms`);\r\n\r\n      // 立即清理内存\r\n      largeArray.length = 0;\r\n\r\n      setIsRunning(false);\r\n\r\n      (window as any).monitor?.trackMetric('memory_allocation', memoryUsed, {\r\n        type: 'array_allocation',\r\n        duration: duration\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  // DOM 操作密集型测试\r\n  const runDOMTest = () => {\r\n    setIsRunning(true);\r\n    addResult('🔄 开始 DOM 操作测试...');\r\n\r\n    setTimeout(() => {\r\n      const start = performance.now();\r\n      const container = document.createElement('div');\r\n      document.body.appendChild(container);\r\n\r\n      // 创建大量 DOM 元素\r\n      for (let i = 0; i < 1000; i++) {\r\n        const element = document.createElement('div');\r\n        element.textContent = `测试元素 ${i}`;\r\n        element.style.position = 'absolute';\r\n        element.style.left = `${Math.random() * 100}px`;\r\n        element.style.top = `${Math.random() * 100}px`;\r\n        container.appendChild(element);\r\n      }\r\n\r\n      const duration = performance.now() - start;\r\n      addResult(`✅ DOM 测试完成: 创建1000个元素, 耗时 ${duration.toFixed(2)}ms`);\r\n\r\n      // 清理 DOM\r\n      document.body.removeChild(container);\r\n      setIsRunning(false);\r\n\r\n      (window as any).monitor?.trackMetric('dom_operation', duration, {\r\n        type: 'element_creation',\r\n        count: 1000\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  // 网络请求性能测试\r\n  const runNetworkTest = async () => {\r\n    setIsRunning(true);\r\n    addResult('🔄 开始网络请求性能测试...');\r\n\r\n    const requests = [\r\n      'http://localhost:3001/api/test/success',\r\n      'http://localhost:3001/api/debug/stats',\r\n    ];\r\n\r\n    const results: number[] = [];\r\n\r\n    for (const url of requests) {\r\n      try {\r\n        const start = performance.now();\r\n        const response = await fetch(url);\r\n        const duration = performance.now() - start;\r\n\r\n        results.push(duration);\r\n        await response.json(); // 确保完整接收响应\r\n\r\n        addResult(`📡 请求完成: ${duration.toFixed(2)}ms - ${response.status}`);\r\n      } catch (error) {\r\n        addResult(`❌ 请求失败: ${url}`);\r\n      }\r\n    }\r\n\r\n    const avgDuration = results.reduce((a, b) => a + b, 0) / results.length;\r\n    addResult(`✅ 网络测试完成: 平均耗时 ${avgDuration.toFixed(2)}ms`);\r\n\r\n    (window as any).monitor?.trackMetric('network_performance', avgDuration, {\r\n      type: 'api_requests',\r\n      count: results.length\r\n    });\r\n\r\n    setIsRunning(false);\r\n  };\r\n\r\n  // 获取导航时序 - 修复API兼容性问题\r\n  const collectPageMetrics = () => {\r\n    if ('performance' in window) {\r\n      // 优先使用新API\r\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\r\n      const paint = performance.getEntriesByType('paint');\r\n\r\n      if (navigation) {\r\n        const metrics = {\r\n          'DNS解析': navigation.domainLookupEnd - navigation.domainLookupStart,\r\n          'TCP连接': navigation.connectEnd - navigation.connectStart,\r\n          '页面加载': navigation.loadEventEnd - navigation.fetchStart, // 修复：使用 fetchStart 替代 navigationStart\r\n          'DOM准备': navigation.domContentLoadedEventEnd - navigation.fetchStart, // 修复：使用 fetchStart\r\n        };\r\n\r\n        addResult('📊 页面性能指标:');\r\n        Object.entries(metrics).forEach(([name, value]) => {\r\n          addResult(`  ${name}: ${value.toFixed(2)}ms`);\r\n          (window as any).monitor?.trackMetric(`page_${name}`, value, { type: 'navigation' });\r\n        });\r\n      } else {\r\n        // 降级到旧的 performance.timing API\r\n        const timing = performance.timing;\r\n        if (timing) {\r\n          const metrics = {\r\n            'DNS解析': timing.domainLookupEnd - timing.domainLookupStart,\r\n            'TCP连接': timing.connectEnd - timing.connectStart,\r\n            '页面加载': timing.loadEventEnd - timing.navigationStart,\r\n            'DOM准备': timing.domContentLoadedEventEnd - timing.navigationStart,\r\n          };\r\n\r\n          addResult('📊 页面性能指标 (兼容模式):');\r\n          Object.entries(metrics).forEach(([name, value]) => {\r\n            addResult(`  ${name}: ${value.toFixed(2)}ms`);\r\n            (window as any).monitor?.trackMetric(`page_${name}`, value, { type: 'navigation_legacy' });\r\n          });\r\n        }\r\n      }\r\n\r\n      paint.forEach(entry => {\r\n        addResult(`🎨 ${entry.name}: ${entry.startTime.toFixed(2)}ms`);\r\n        (window as any).monitor?.trackMetric(entry.name.replace('-', '_'), entry.startTime, { type: 'paint' });\r\n      });\r\n    }\r\n  };\r\n\r\n  // 组件挂载时自动收集性能数据\r\n  useEffect(() => {\r\n    collectPageMetrics();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"test-section\">\r\n      <h2>⚡ 性能监控测试</h2>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Link to=\"/\">\r\n          <button className=\"test-button\">← 返回首页</button>\r\n        </Link>\r\n      </div>\r\n\r\n      {isRunning && (\r\n        <div className=\"test-status info\">\r\n          🔄 性能测试执行中，请稍候...\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🐌 长任务测试</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => runLongTask(50)}\r\n          disabled={isRunning}\r\n        >\r\n          执行 50ms 长任务\r\n        </button>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => runLongTask(100)}\r\n          disabled={isRunning}\r\n        >\r\n          执行 100ms 长任务\r\n        </button>\r\n        <button\r\n          className=\"test-button danger\"\r\n          onClick={() => runLongTask(200)}\r\n          disabled={isRunning}\r\n        >\r\n          执行 200ms 长任务\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🖥️ 计算密集型测试</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={runCPUIntensiveTask}\r\n          disabled={isRunning}\r\n        >\r\n          CPU 密集计算（斐波那契）\r\n        </button>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={runMemoryTest}\r\n          disabled={isRunning}\r\n        >\r\n          内存分配测试\r\n        </button>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={runDOMTest}\r\n          disabled={isRunning}\r\n        >\r\n          DOM 操作测试\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🌐 网络性能测试</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={runNetworkTest}\r\n          disabled={isRunning}\r\n        >\r\n          网络请求性能测试\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>📊 页面性能指标</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={collectPageMetrics}\r\n        >\r\n          重新收集页面指标\r\n        </button>\r\n      </div>\r\n\r\n      {testResults.length > 0 && (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h3>📝 测试结果</h3>\r\n          <div style={{\r\n            background: '#f5f5f5',\r\n            padding: '12px',\r\n            borderRadius: '4px',\r\n            fontSize: '12px',\r\n            fontFamily: 'monospace',\r\n            maxHeight: '200px',\r\n            overflowY: 'auto'\r\n          }}>\r\n            {testResults.map((result, index) => (\r\n              <div key={index}>{result}</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <h3>📊 观察要点</h3>\r\n        <ul style={{ textAlign: 'left', lineHeight: '1.6', fontSize: '14px' }}>\r\n          <li><strong>Performance 面板:</strong> 查看长任务是否被正确记录</li>\r\n          <li><strong>Console 日志:</strong> 观察 SDK 的性能监控日志</li>\r\n          <li><strong>Network 面板:</strong> 确认性能数据上报</li>\r\n          <li><strong>内存使用:</strong> 使用 Memory 面板观察内存变化</li>\r\n          <li><strong>FPS 监控:</strong> 长任务期间页面是否卡顿</li>\r\n          <li><strong>指标准确性:</strong> 验证上报的性能指标是否准确</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PerformanceTest;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction BehaviorTest() {\r\n  const navigate = useNavigate();\r\n  const [clickCount, setClickCount] = useState(0);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    message: ''\r\n  });\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n  // 监听滚动事件\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrollPosition(window.pageYOffset);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  // 模拟业务操作 - 购物车\r\n  const simulateShoppingCart = () => {\r\n    (window as any).monitor?.trackBusiness('add_to_cart', {\r\n      productId: 'PROD-001',\r\n      productName: '测试商品',\r\n      quantity: 1,\r\n      price: 99.99\r\n    });\r\n\r\n    (window as any).monitor?.trackEvent('user', '模拟添加购物车操作', {\r\n      product: 'PROD-001',\r\n      timestamp: Date.now()\r\n    });\r\n  };\r\n\r\n  // 模拟用户登录流程\r\n  const simulateLogin = () => {\r\n    (window as any).monitor?.trackBusiness('login_attempt', {\r\n      method: 'email',\r\n      timestamp: Date.now()\r\n    });\r\n\r\n    // 模拟登录成功\r\n    setTimeout(() => {\r\n      (window as any).monitor?.trackBusiness('login_success', {\r\n        userId: 'USER-123',\r\n        loginTime: Date.now()\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  // 模拟支付流程\r\n  const simulatePayment = () => {\r\n    const steps = ['initiate_payment', 'select_method', 'confirm_payment', 'payment_success'];\r\n\r\n    steps.forEach((step, index) => {\r\n      setTimeout(() => {\r\n        (window as any).monitor?.trackBusiness(step, {\r\n          orderId: 'ORDER-456',\r\n          amount: 199.98,\r\n          step: index + 1,\r\n          totalSteps: steps.length\r\n        });\r\n      }, index * 500);\r\n    });\r\n  };\r\n\r\n  // 表单提交处理\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    (window as any).monitor?.trackEvent('user', '表单提交', {\r\n      formType: 'contact',\r\n      fields: Object.keys(formData),\r\n      timestamp: Date.now()\r\n    });\r\n\r\n    alert('表单提交成功！请查看控制台和网络面板。');\r\n  };\r\n\r\n  // 创建大量可点击元素来测试点击追踪\r\n  const createClickableElements = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      elements.push(\r\n        <button\r\n          key={i}\r\n          className=\"test-button\"\r\n          style={{ margin: '2px' }}\r\n          onClick={() => {\r\n            setClickCount(prev => prev + 1);\r\n            (window as any).monitor?.trackEvent('user', `点击按钮 #${i + 1}`, {\r\n              buttonId: i + 1,\r\n              totalClicks: clickCount + 1\r\n            });\r\n          }}\r\n        >\r\n          按钮 {i + 1}\r\n        </button>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"test-section\">\r\n      <h2>👤 用户行为追踪测试</h2>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Link to=\"/\">\r\n          <button className=\"test-button\">← 返回首页</button>\r\n        </Link>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => navigate('/about')}\r\n        >\r\n          跳转到关于页面 (路由监控)\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"test-status info\">\r\n        📊 当前统计: 点击次数 {clickCount} | 滚动位置 {scrollPosition.toFixed(0)}px\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🛍️ 业务事件模拟</h3>\r\n        <button className=\"test-button\" onClick={simulateShoppingCart}>\r\n          模拟购物车操作\r\n        </button>\r\n        <button className=\"test-button\" onClick={simulateLogin}>\r\n          模拟用户登录\r\n        </button>\r\n        <button className=\"test-button\" onClick={simulatePayment}>\r\n          模拟支付流程\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🖱️ 点击行为测试</h3>\r\n        <p>点击下面的按钮测试点击事件追踪：</p>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '4px' }}>\r\n          {createClickableElements()}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>📝 表单交互测试</h3>\r\n        <form onSubmit={handleSubmit} style={{ maxWidth: '400px' }}>\r\n          <div style={{ marginBottom: '12px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px' }}>用户名:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.username}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, username: e.target.value }))}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n              placeholder=\"输入用户名\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '12px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px' }}>邮箱:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n              placeholder=\"输入邮箱地址\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '12px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px' }}>留言:</label>\r\n            <textarea\r\n              value={formData.message}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}\r\n              style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #ddd', height: '80px' }}\r\n              placeholder=\"输入留言内容\"\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"test-button\">\r\n            提交表单\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>⌨️ 键盘事件测试</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"在这里输入文字测试键盘事件追踪\"\r\n          style={{ width: '100%', padding: '12px', borderRadius: '4px', border: '1px solid #ddd' }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              (window as any).monitor?.trackEvent('user', '键盘 Enter 键按下', {\r\n                inputValue: e.currentTarget.value,\r\n                timestamp: Date.now()\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <p style={{ fontSize: '12px', color: '#666' }}>\r\n          💡 按 Enter 键会触发特殊的键盘事件记录\r\n        </p>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>📏 滚动行为测试</h3>\r\n        <p>滚动页面测试滚动事件追踪（当前位置: {scrollPosition.toFixed(0)}px）</p>\r\n        <div style={{ height: '300px', background: '#f9f9f9', overflowY: 'scroll', padding: '16px' }}>\r\n          <div style={{ height: '800px' }}>\r\n            <h4>滚动测试区域</h4>\r\n            <p>这是一个可滚动的区域，用于测试滚动事件的捕获。</p>\r\n            {[...Array(20)].map((_, i) => (\r\n              <p key={i} style={{ margin: '16px 0' }}>\r\n                📜 滚动内容行 {i + 1} - 继续滚动测试滚动事件追踪功能\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🎯 自定义用户操作</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => {\r\n            (window as any).monitor?.trackEvent('user', '开始购物流程', {\r\n              step: 'browse_products',\r\n              category: 'electronics',\r\n              timestamp: Date.now()\r\n            });\r\n          }}\r\n        >\r\n          开始购物流程\r\n        </button>\r\n\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => {\r\n            (window as any).monitor?.trackEvent('user', '查看商品详情', {\r\n              productId: 'PROD-999',\r\n              productName: '智能手机',\r\n              price: 2999,\r\n              timestamp: Date.now()\r\n            });\r\n          }}\r\n        >\r\n          查看商品详情\r\n        </button>\r\n\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => {\r\n            (window as any).monitor?.trackEvent('user', '用户反馈', {\r\n              type: 'suggestion',\r\n              rating: 5,\r\n              feedback: '界面很好用',\r\n              timestamp: Date.now()\r\n            });\r\n          }}\r\n        >\r\n          提交用户反馈\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>⏱️ 页面停留时间测试</h3>\r\n        <p>在此页面停留一段时间，然后跳转到其他页面测试停留时间记录。</p>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => {\r\n            // 手动记录页面访问\r\n            (window as any).monitor?.trackEvent('navigation', '手动记录页面访问', {\r\n              page: 'behavior-test',\r\n              action: 'manual_visit_record',\r\n              timestamp: Date.now()\r\n            });\r\n          }}\r\n        >\r\n          手动记录页面访问\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🔄 复杂交互流程测试</h3>\r\n        <button\r\n          className=\"test-button\"\r\n          onClick={() => {\r\n            // 模拟一个完整的用户操作流程\r\n            const steps = [\r\n              { action: '进入商品页面', delay: 0 },\r\n              { action: '查看商品图片', delay: 500 },\r\n              { action: '选择商品规格', delay: 1000 },\r\n              { action: '添加到购物车', delay: 1500 },\r\n              { action: '跳转到购物车', delay: 2000 },\r\n            ];\r\n\r\n            steps.forEach((step, index) => {\r\n              setTimeout(() => {\r\n                (window as any).monitor?.trackEvent('user', step.action, {\r\n                  flowStep: index + 1,\r\n                  totalSteps: steps.length,\r\n                  flowId: 'shopping_flow_001',\r\n                  timestamp: Date.now()\r\n                });\r\n              }, step.delay);\r\n            });\r\n          }}\r\n        >\r\n          执行复杂用户流程\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3>🎨 UI 交互测试</h3>\r\n        <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\r\n          <button\r\n            className=\"test-button\"\r\n            onMouseEnter={() => {\r\n              (window as any).monitor?.trackEvent('user', '鼠标悬停', {\r\n                element: 'hover-button',\r\n                timestamp: Date.now()\r\n              });\r\n            }}\r\n          >\r\n            悬停测试\r\n          </button>\r\n\r\n          <button\r\n            className=\"test-button\"\r\n            onFocus={() => {\r\n              (window as any).monitor?.trackEvent('user', '获得焦点', {\r\n                element: 'focus-button',\r\n                timestamp: Date.now()\r\n              });\r\n            }}\r\n          >\r\n            焦点测试\r\n          </button>\r\n\r\n          <button\r\n            className=\"test-button\"\r\n            onContextMenu={(e) => {\r\n              e.preventDefault();\r\n              (window as any).monitor?.trackEvent('user', '右键点击', {\r\n                element: 'context-menu-button',\r\n                timestamp: Date.now()\r\n              });\r\n            }}\r\n          >\r\n            右键测试\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>📊 观察要点</h3>\r\n        <ul style={{ textAlign: 'left', lineHeight: '1.6', fontSize: '14px' }}>\r\n          <li><strong>面包屑轨迹:</strong> 查看用户操作是否按时间序列正确记录</li>\r\n          <li><strong>事件分类:</strong> 不同类型的事件是否正确分类（user、navigation等）</li>\r\n          <li><strong>数据完整性:</strong> 事件数据是否包含必要的上下文信息</li>\r\n          <li><strong>时间准确性:</strong> 事件时间戳是否准确</li>\r\n          <li><strong>路由监控:</strong> 页面跳转是否被正确记录</li>\r\n          <li><strong>批量上报:</strong> 多个事件是否会被批量发送</li>\r\n          <li><strong>页面停留:</strong> 页面切换时是否记录停留时间</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* 增加页面高度，便于测试滚动 */}\r\n      <div style={{ height: '400px', background: 'linear-gradient(to bottom, #f0f0f0, #e0e0e0)', padding: '20px', marginTop: '40px' }}>\r\n        <h4>📏 额外滚动区域</h4>\r\n        <p>这个区域用于测试页面滚动监控功能。向下滚动查看更多内容。</p>\r\n        {[...Array(15)].map((_, i) => (\r\n          <div key={i} style={{ margin: '20px 0', padding: '16px', background: 'white', borderRadius: '4px' }}>\r\n            <h5>内容块 {i + 1}</h5>\r\n            <p>这是用于测试滚动行为的内容块。SDK 应该能够记录用户的滚动进度和停留时间。</p>\r\n            {i % 5 === 4 && (\r\n              <button\r\n                className=\"test-button\"\r\n                onClick={() => {\r\n                  (window as any).monitor?.trackEvent('user', `滚动区域中的点击 - 块${i + 1}`, {\r\n                    scrollPosition: window.pageYOffset,\r\n                    blockIndex: i + 1,\r\n                    timestamp: Date.now()\r\n                  });\r\n                }}\r\n              >\r\n                点击记录位置\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BehaviorTest;","// src/App.tsx - 修复版本，集成所有测试组件\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\r\nimport TestComponents from './components/TestComponents';\r\nimport UserDashboard from './components/UserDashboard';\r\nimport ShoppingCart from './components/ShoppingCart';\r\nimport ErrorTest from './components/ErrorTest';\r\nimport PerformanceTest from './components/PerformanceTest';\r\nimport BehaviorTest from './components/BehaviorTest';\r\n\r\n// 简化的 ErrorBoundary\r\nclass SimpleErrorBoundary extends React.Component<\r\n  { children: React.ReactNode },\r\n  { hasError: boolean }\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(): { hasError: boolean } {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('ErrorBoundary 捕获到错误:', error, errorInfo);\r\n\r\n    // 尝试使用 SDK 上报错误\r\n    if ((window as any).monitor) {\r\n      (window as any).monitor.captureError(error, {\r\n        component: 'ErrorBoundary',\r\n        errorInfo: errorInfo\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n          <h2>抱歉，页面出现了错误</h2>\r\n          <p>请刷新页面重试</p>\r\n          <button onClick={() => window.location.reload()}>刷新页面</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <SimpleErrorBoundary>\r\n      <Router>\r\n        <div className=\"app-container\" id=\"app-root\">\r\n          <header className=\"app-header\" id=\"main-header\">\r\n            <h1 id=\"app-title\">Mini Sentry SDK 监控测试平台</h1>\r\n            <nav id=\"main-navigation\">\r\n              <Link to=\"/\" id=\"nav-home\">首页</Link>\r\n              <Link to=\"/dashboard\" id=\"nav-dashboard\">用户面板</Link>\r\n              <Link to=\"/shop\" id=\"nav-shop\">购物车</Link>\r\n              <Link to=\"/error-test\" id=\"nav-error-test\">错误测试</Link>\r\n              <Link to=\"/performance-test\" id=\"nav-performance-test\">性能测试</Link>\r\n              <Link to=\"/behavior-test\" id=\"nav-behavior-test\">行为测试</Link>\r\n              <Link to=\"/test\" id=\"nav-test\">综合测试</Link>\r\n            </nav>\r\n          </header>\r\n\r\n          <main className=\"app-main\" id=\"main-content\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomePage />} />\r\n              <Route path=\"/dashboard\" element={<UserDashboard />} />\r\n              <Route path=\"/shop\" element={<ShoppingCart />} />\r\n              <Route path=\"/error-test\" element={<ErrorTest />} />\r\n              <Route path=\"/performance-test\" element={<PerformanceTest />} />\r\n              <Route path=\"/behavior-test\" element={<BehaviorTest />} />\r\n              <Route path=\"/test\" element={<TestComponents />} />\r\n            </Routes>\r\n          </main>\r\n\r\n          <footer className=\"app-footer\" id=\"main-footer\" style={{\r\n            background: '#f5f5f5',\r\n            padding: '16px 24px',\r\n            textAlign: 'center',\r\n            marginTop: '40px',\r\n            borderTop: '1px solid #e8e8e8'\r\n          }}>\r\n            <p id=\"copyright\">© 2025 Mini Sentry 监控平台测试</p>\r\n          </footer>\r\n        </div>\r\n      </Router>\r\n    </SimpleErrorBoundary>\r\n  );\r\n}\r\n\r\n// 首页组件 - 增加 LCP 指标监测元素\r\nfunction HomePage() {\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    age: ''\r\n  });\r\n\r\n  const [lcpImageLoaded, setLcpImageLoaded] = useState(false);\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    setUserInfo(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // 模拟API调用\r\n    try {\r\n      const response = await fetch('/api/user/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userInfo)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`注册失败: ${response.status}`);\r\n      }\r\n\r\n      alert('注册成功！');\r\n    } catch (error) {\r\n      console.error('注册过程中发生错误:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\" id=\"home-container\">\r\n      {/* LCP 候选元素 - 大型英雄横幅 */}\r\n      <section className=\"hero-section\" id=\"hero-banner\" style={{\r\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n        color: 'white',\r\n        padding: '80px 40px',\r\n        textAlign: 'center',\r\n        borderRadius: '12px',\r\n        margin: '20px 0 40px 0',\r\n        boxShadow: '0 10px 30px rgba(0,0,0,0.2)'\r\n      }}>\r\n        {/* 大型 LCP 图片元素 */}\r\n        <div style={{ marginBottom: '30px' }}>\r\n          <img\r\n            id=\"hero-lcp-image\"\r\n            src=\"https://picsum.photos/600/300?random=1\"\r\n            alt=\"Mini Sentry SDK Hero Banner\"\r\n            style={{\r\n              width: '100%',\r\n              maxWidth: '600px',\r\n              height: '300px',\r\n              objectFit: 'cover',\r\n              borderRadius: '8px',\r\n              border: '3px solid rgba(255,255,255,0.3)'\r\n            }}\r\n            onLoad={() => {\r\n              setLcpImageLoaded(true);\r\n              console.log('🎯 LCP 候选图片已加载完成');\r\n\r\n              // 手动记录 LCP 相关事件\r\n              if ((window as any).monitor) {\r\n                (window as any).monitor.trackEvent('performance', 'LCP候选元素加载完成', {\r\n                  element: 'hero-lcp-image',\r\n                  timestamp: Date.now(),\r\n                  loadTime: performance.now()\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <h2 id=\"hero-title\" style={{\r\n          fontSize: '3rem',\r\n          margin: '20px 0',\r\n          textShadow: '0 2px 4px rgba(0,0,0,0.3)'\r\n        }}>\r\n          欢迎使用 Mini Sentry 监控平台\r\n        </h2>\r\n\r\n        <p id=\"hero-description\" style={{\r\n          fontSize: '1.2rem',\r\n          margin: '20px 0 40px 0',\r\n          opacity: 0.9\r\n        }}>\r\n          实时监控您的应用性能和错误，提供完整的用户体验分析\r\n        </p>\r\n\r\n        <button\r\n          id=\"hero-cta-button\"\r\n          className=\"cta-button\"\r\n          style={{\r\n            background: 'white',\r\n            color: '#667eea',\r\n            border: 'none',\r\n            padding: '16px 32px',\r\n            fontSize: '1.1rem',\r\n            fontWeight: 'bold',\r\n            borderRadius: '8px',\r\n            cursor: 'pointer',\r\n            boxShadow: '0 4px 15px rgba(0,0,0,0.2)',\r\n            transition: 'transform 0.2s, box-shadow 0.2s'\r\n          }}\r\n          onMouseEnter={(e) => {\r\n            e.currentTarget.style.transform = 'translateY(-2px)';\r\n            e.currentTarget.style.boxShadow = '0 6px 20px rgba(0,0,0,0.3)';\r\n          }}\r\n          onMouseLeave={(e) => {\r\n            e.currentTarget.style.transform = 'translateY(0)';\r\n            e.currentTarget.style.boxShadow = '0 4px 15px rgba(0,0,0,0.2)';\r\n          }}\r\n          onClick={() => {\r\n            // 手动触发一个自定义事件\r\n            console.log('用户点击了主要CTA按钮');\r\n            if ((window as any).monitor) {\r\n              (window as any).monitor.trackEvent('user', '点击主要CTA按钮', {\r\n                button: 'hero-cta',\r\n                timestamp: Date.now(),\r\n                lcpImageLoaded: lcpImageLoaded\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          🚀 开始监控\r\n        </button>\r\n\r\n        {/* LCP 状态指示器 */}\r\n        <div style={{\r\n          marginTop: '20px',\r\n          padding: '8px 16px',\r\n          background: lcpImageLoaded ? 'rgba(76, 175, 80, 0.2)' : 'rgba(255, 193, 7, 0.2)',\r\n          borderRadius: '20px',\r\n          fontSize: '0.9rem',\r\n          border: `1px solid ${lcpImageLoaded ? 'rgba(76, 175, 80, 0.5)' : 'rgba(255, 193, 7, 0.5)'}`\r\n        }}>\r\n          {lcpImageLoaded ? '✅ LCP 元素已加载' : '⏳ LCP 元素加载中...'}\r\n        </div>\r\n      </section>\r\n\r\n      {/* 添加额外的大型内容块作为 LCP 候选 */}\r\n      <section className=\"feature-highlight\" id=\"feature-highlight\" style={{\r\n        background: 'white',\r\n        padding: '60px 40px',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n        marginBottom: '40px'\r\n      }}>\r\n        <h2 style={{ textAlign: 'center', marginBottom: '30px', fontSize: '2.5rem', color: '#333' }}>\r\n          🔍 核心功能特性\r\n        </h2>\r\n\r\n        <div className=\"features-grid\" style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n          gap: '30px',\r\n          marginTop: '40px'\r\n        }}>\r\n          <div className=\"feature-card\" style={{\r\n            padding: '30px',\r\n            background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\r\n            color: 'white',\r\n            borderRadius: '12px',\r\n            textAlign: 'center',\r\n            boxShadow: '0 8px 25px rgba(240, 147, 251, 0.3)'\r\n          }}>\r\n            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>🚨</div>\r\n            <h4 style={{ fontSize: '1.5rem', marginBottom: '15px' }}>错误监控</h4>\r\n            <p style={{ opacity: 0.9, lineHeight: '1.6' }}>\r\n              实时捕获和分析应用错误，包括 JavaScript 错误、Promise 异常、资源加载失败等\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"feature-card\" style={{\r\n            padding: '30px',\r\n            background: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',\r\n            color: 'white',\r\n            borderRadius: '12px',\r\n            textAlign: 'center',\r\n            boxShadow: '0 8px 25px rgba(79, 172, 254, 0.3)'\r\n          }}>\r\n            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>⚡</div>\r\n            <h4 style={{ fontSize: '1.5rem', marginBottom: '15px' }}>性能监控</h4>\r\n            <p style={{ opacity: 0.9, lineHeight: '1.6' }}>\r\n              监控页面加载性能指标，包括 LCP、FID、CLS 等关键 Web Vitals 指标\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"feature-card\" style={{\r\n            padding: '30px',\r\n            background: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',\r\n            color: 'white',\r\n            borderRadius: '12px',\r\n            textAlign: 'center',\r\n            boxShadow: '0 8px 25px rgba(250, 112, 154, 0.3)'\r\n          }}>\r\n            <div style={{ fontSize: '3rem', marginBottom: '20px' }}>👥</div>\r\n            <h4 style={{ fontSize: '1.5rem', marginBottom: '15px' }}>用户行为</h4>\r\n            <p style={{ opacity: 0.9, lineHeight: '1.6' }}>\r\n              跟踪用户操作轨迹，分析用户行为模式，优化用户体验\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* 用户注册表单 */}\r\n      <section className=\"user-registration\" id=\"registration-section\" style={{\r\n        background: 'white',\r\n        padding: '40px',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\r\n        marginBottom: '40px'\r\n      }}>\r\n        <h3 id=\"registration-title\" style={{ textAlign: 'center', marginBottom: '30px', fontSize: '2rem' }}>\r\n          用户注册测试\r\n        </h3>\r\n        <form onSubmit={handleSubmit} id=\"user-registration-form\" style={{ maxWidth: '500px', margin: '0 auto' }}>\r\n          <div className=\"form-group\" id=\"name-input-group\" style={{ marginBottom: '20px' }}>\r\n            <label htmlFor=\"user-name-input\" style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>\r\n              姓名:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"user-name-input\"\r\n              value={userInfo.name}\r\n              onChange={(e) => handleInputChange('name', e.target.value)}\r\n              placeholder=\"请输入您的姓名\"\r\n              data-testid=\"name-field\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: '2px solid #e8e8e8',\r\n                borderRadius: '8px',\r\n                fontSize: '16px',\r\n                transition: 'border-color 0.3s'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\" id=\"email-input-group\" style={{ marginBottom: '20px' }}>\r\n            <label htmlFor=\"user-email-input\" style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>\r\n              邮箱:\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"user-email-input\"\r\n              value={userInfo.email}\r\n              onChange={(e) => handleInputChange('email', e.target.value)}\r\n              placeholder=\"请输入您的邮箱\"\r\n              data-testid=\"email-field\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: '2px solid #e8e8e8',\r\n                borderRadius: '8px',\r\n                fontSize: '16px',\r\n                transition: 'border-color 0.3s'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\" id=\"age-input-group\" style={{ marginBottom: '30px' }}>\r\n            <label htmlFor=\"user-age-input\" style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>\r\n              年龄:\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"user-age-input\"\r\n              value={userInfo.age}\r\n              onChange={(e) => handleInputChange('age', e.target.value)}\r\n              placeholder=\"请输入您的年龄\"\r\n              data-testid=\"age-field\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px',\r\n                border: '2px solid #e8e8e8',\r\n                borderRadius: '8px',\r\n                fontSize: '16px',\r\n                transition: 'border-color 0.3s'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            id=\"registration-submit-button\"\r\n            className=\"submit-button\"\r\n            style={{\r\n              width: '100%',\r\n              padding: '16px',\r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '8px',\r\n              fontSize: '18px',\r\n              fontWeight: 'bold',\r\n              cursor: 'pointer',\r\n              transition: 'transform 0.2s, box-shadow 0.2s'\r\n            }}\r\n          >\r\n            立即注册\r\n          </button>\r\n        </form>\r\n      </section>\r\n\r\n      {/* 测试页面快速导航 */}\r\n      <section className=\"quick-navigation\" id=\"quick-navigation\" style={{\r\n        background: '#f8f9fa',\r\n        padding: '40px',\r\n        borderRadius: '12px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <h3 style={{ marginBottom: '30px', fontSize: '2rem' }}>🧪 快速测试导航</h3>\r\n        <div style={{\r\n          display: 'grid',\r\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n          gap: '20px'\r\n        }}>\r\n          <Link to=\"/error-test\" style={{ textDecoration: 'none' }}>\r\n            <div className=\"nav-card\" style={{\r\n              background: '#ff6b6b',\r\n              color: 'white',\r\n              padding: '20px',\r\n              borderRadius: '8px',\r\n              transition: 'transform 0.2s'\r\n            }}>\r\n              <div style={{ fontSize: '2rem', marginBottom: '10px' }}>🔴</div>\r\n              <h4>错误测试</h4>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/performance-test\" style={{ textDecoration: 'none' }}>\r\n            <div className=\"nav-card\" style={{\r\n              background: '#4ecdc4',\r\n              color: 'white',\r\n              padding: '20px',\r\n              borderRadius: '8px',\r\n              transition: 'transform 0.2s'\r\n            }}>\r\n              <div style={{ fontSize: '2rem', marginBottom: '10px' }}>⚡</div>\r\n              <h4>性能测试</h4>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to=\"/behavior-test\" style={{ textDecoration: 'none' }}>\r\n            <div className=\"nav-card\" style={{\r\n              background: '#45b7d1',\r\n              color: 'white',\r\n              padding: '20px',\r\n              borderRadius: '8px',\r\n              transition: 'transform 0.2s'\r\n            }}>\r\n              <div style={{ fontSize: '2rem', marginBottom: '10px' }}>👤</div>\r\n              <h4>行为测试</h4>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </section>\r\n\r\n      <div>\r\n        <h3 style={{ textAlign: 'center', marginTop: '40px', marginBottom: '20px' }}>📊 LCP 监控说明</h3>\r\n        <div style={{\r\n          background: '#e3f2fd',\r\n          border: '1px solid #90caf9',\r\n          borderRadius: '8px',\r\n          padding: '20px',\r\n          fontSize: '14px',\r\n          lineHeight: '1.6'\r\n        }}>\r\n          <ul style={{ margin: 0, paddingLeft: '20px' }}>\r\n            <li><strong>LCP 元素:</strong> 页面顶部的大型横幅图片 (600x300px) 是主要的 LCP 候选元素</li>\r\n            <li><strong>监控方法:</strong> 打开开发者工具 → Performance 面板 → 录制页面加载过程</li>\r\n            <li><strong>观察要点:</strong> 查看 LCP 指标是否指向横幅图片，以及加载完成时间</li>\r\n            <li><strong>SDK 集成:</strong> 图片加载完成时会自动触发相关事件记录</li>\r\n            <li><strong>最佳实践:</strong> LCP 应该在 2.5 秒内完成，这个测试图片使用 Data URL 确保快速加载</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// src/main.tsx - 添加调试版本\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst config = {\r\n  projectId: '1',\r\n  apiUrl: 'http://47.113.224.195:32400/frontend',\r\n  debug: true,  // 确保开启调试\r\n  sampleRate: 1,\r\n  maxBreadcrumbs: 20,\r\n  version: '1.0.0-test'\r\n};\r\n\r\nasync function initSDK() {\r\n  try {\r\n    const { Monitor } = await import('mini-sentry-sdk');\r\n\r\n    const monitor = new Monitor({\r\n      projectId: config.projectId,\r\n      apiUrl: config.apiUrl,\r\n      debug: config.debug,\r\n      sampleRate: config.sampleRate,\r\n      maxBreadcrumbs: config.maxBreadcrumbs,\r\n      defaultTags: {\r\n        environment: 'development',\r\n        version: config.version,\r\n        buildTime: new Date().toISOString(),\r\n        userId: 'test-user-' + Date.now()\r\n      },\r\n      enabledModules: {\r\n        error: true,\r\n        performance: true,  // 确保性能监控开启\r\n        behavior: true,\r\n      }\r\n    });\r\n\r\n    await monitor.init();\r\n    console.log('✅ SDK 初始化成功');\r\n\r\n    // 挂载到全局\r\n    (window as any).monitor = monitor;\r\n\r\n    // 🔍 添加性能监控调试\r\n    console.log('🔍 页面加载状态:', document.readyState);\r\n    console.log('🔍 Performance API 可用:', 'performance' in window);\r\n\r\n    // 延迟检查性能数据发送\r\n    setTimeout(() => {\r\n      console.log('🔍 5秒后检查 - 应该已经发送性能数据了');\r\n      console.log('🔍 检查 Network 面板是否有 /performance 请求');\r\n    }, 5000);\r\n\r\n  } catch (error) {\r\n    console.error('❌ SDK 初始化失败:', error);\r\n    (window as any).monitor = {\r\n      trackEvent: () => { },\r\n      trackBusiness: () => { },\r\n      trackMetric: () => { },\r\n      captureError: () => { }\r\n    };\r\n  }\r\n}\r\n\r\n// 🔍 页面加载状态监控\r\nconsole.log('🔍 开始加载，当前状态:', document.readyState);\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  console.log('🔍 DOM 加载完成');\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  console.log('🔍 页面完全加载完成');\r\n});\r\n\r\ninitSDK();\r\n\r\nconst container = document.getElementById('root')!;\r\nconst root = createRoot(container);\r\nroot.render(<App />);"]}