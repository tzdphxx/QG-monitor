{"version":3,"sources":["../../node_modules/mini-sentry-sdk/dist/index.esm.js"],"names":["ErrorType","ErrorType2","DataType","DataType2","Monitor","constructor","config","this","initialized","globalBreadcrumbs","errorBreadcrumbs","behaviorBreadcrumbs","BREADCRUMB_LIMITS","global","error","behavior","failureCount","Map","MAX_FAILURES","FAILURE_RESET_TIME","lastSuccessTime","disabledDataTypes","Set","pageStartTime","Date","now","totalVisibleTime","visibleStartTime","isPageVisible","document","hidden","currentRoute","location","pathname","search","hash","debug","sampleRate","maxBreadcrumbs","enabledModules","performance","sessionId","generateSessionId","set","init","console","warn","_a","initErrorMonitoring","_b","initPerformanceMonitoring","_c","initBehaviorMonitoring","initPageStayTimeTracking","initSPARouteMonitoring","startBatchReporting","log","userAgent","navigator","apiUrl","breadcrumbLimits","addBreadcrumb","category","message","level","data","captureType","breadcrumb","timestamp","optimizeDataSize","addToGlobalBreadcrumbs","addToErrorBreadcrumbs","addToBehaviorBreadcrumbs","globalCount","length","errorCount","behaviorCount","push","slice","collectAndSendBehaviorData","behaviorData","projectId","url","window","href","breadcrumbs","pageInfo","title","stayTime","behaviorBreadcrumbCount","errorBreadcrumbCount","route","sendData","convertToUnifiedFormat","reportError","shouldSample","errorWithBreadcrumbs","errorType","type","collectPerformanceData","performanceData","metrics","navigation","getNavigationTiming","vitals","getWebVitals","dataType","convertedData","shouldSendDataType","payload","buildApiUrl","jsonString","JSON","stringify","visibilityState","sendWithBeacon","sendWithFetch","reportTimer","setInterval","isAllDataTypesDisabled","clearInterval","resetFailureCountIfNeeded","addEventListener","handlePageUnload","recordCurrentPageStayTime","captureError","tags","locationInfo","parseErrorStack","errorInfo","JS_ERROR","stack","mergeTags","filename","jsFilename","lineno","colno","trackEvent","trackMetric","name","value","metricName","metricValue","trackBusiness","event","eventType","eventName","stackLines","split","line","match","urlParts","parseInt","parseError","cleanTags","cleaned","fieldCount","key","Object","entries","valueStr","String","userTags","defaultTags","merged","result","criticalFields","maxLength","includes","baseFields","errorData","unified","HTTP_ERROR","httpError","request","response","duration","RESOURCE_ERROR","resourceError","resourceType","resourceUrl","elementInfo","perfData","fallbackData","has","failures","get","add","Math","random","toString","substr","endsWith","controller","AbortController","timeoutId","setTimeout","abort","fetch","method","headers","body","keepalive","signal","clearTimeout","ok","Error","status","statusText","delete","handleSendFailure","fromSendBeacon","currentFailures","newFailures","sendBeacon","blob","Blob","every","lastSuccess","max","stayTimeData","totalTime","visibleTime","resetPageStayTime","originalPushState","history","pushState","bind","originalReplaceState","replaceState","unused","handleRouteChange","newURL","newRoute","oldRoute","from","to","target","reason","PROMISE_ERROR","Element","element","src","tagName","toLowerCase","id","detectWhiteScreen","initLongTaskMonitoring","interceptFetch","interceptXHR","originalOpen","XMLHttpRequest","prototype","open","originalSend","send","async","username","password","_monitorData","startTime","call","monitorData","monitor","hasVisibleContent","textContent","innerText","trim","images","querySelectorAll","img","width","height","canvases","canvas","svgs","svg","getBoundingClientRect","PerformanceObserver","list","getEntries","forEach","entry","round","taskType","severity","observe","entryTypes","originalFetch","args","options","readyState","observeWebVitals","fcpObserver","latestFcpValue","latestLcpValue","metric","source","disconnect","lcpObserver","lcpEntry","size","setupLcpFinalization","finalizeLcp","lcpFinalValue","getEntriesByType","domReady","domContentLoadedEventEnd","fetchStart","loadComplete","loadEventEnd","timing","navigationStart","fcpValue","getFcpValue","fcp","lcpValue","getLcpValue","lcp","fcpEntry","find","lcpEntries","latestLcp","abs","inputTimer","scrollTimer","referrer","form","action","ctrlKey","toUpperCase","scrollTop","pageYOffset","documentElement","scrollHeight","clientHeight","innerHeight","scrollPercent","getBreadcrumbStatus","count","limit","latest","map","b","clearBreadcrumbs","getSendStatus","fromEntries","Array","maxFailures","getStatus","breadcrumbStatus","pageStayTime","total","visible","sendStatus","resetSendStatus","clear","getVitalsStatus","observed","final","available","observerActive","possibleIncorrectAssignment","performanceAPI","paintEntries","destroy","SourceMapUploader","timeout","retries","upload","lastError","attempt","makeRequest","files","delay","pow","sleep","apiKey","fileHashes","file","calculateFileHash","content","formData","FormData","append","version","buildVersion","generateBuildVersion","Authorization","errorText","text","json","validateSourceMap","parsed","parse","isArray","sources","mappings","compressSourceMap","compressed","names","sourcesContent","getJsFilename","sourceMapFilename","replace","TextEncoder","encode","hashBuffer","crypto","subtle","digest","Uint8Array","padStart","join","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","ms","Promise","resolve","NodeSourceMapUploader","makeNodeRequest","https","require","http","URL","FormData2","isHttps","protocol","createHash","update","reject","Buffer","contentType","hostname","port","path","getHeaders","req","res","on","chunk","statusCode","pipe","hasRequiredReactJsxRuntime_production","hasRequiredJsxRuntime","jsxRuntime","exports","reactJsxRuntime_production","jsxRuntimeExports","REACT_ELEMENT_TYPE","Symbol","for","REACT_FRAGMENT_TYPE","jsxProd","maybeKey","propName","ref","$$typeof","props","Fragment","jsx","jsxs","requireReactJsxRuntime_production","ErrorBoundary","Component","super","state","hasError","getDerivedStateFromError","componentDidCatch","onError","REACT_ERROR","render","fallback","style","padding","textAlign","color","children","onClick","reload","backgroundColor","border","borderRadius","cursor","MiniSentrySDK","createMonitor","createUploader","VERSION","SDK"],"mappings":"yCACG,IAACA,GAA8BC,IAChCA,EAAqB,SAAI,WACzBA,EAA0B,cAAI,gBAC9BA,EAA2B,eAAI,iBAC/BA,EAAuB,WAAI,aAC3BA,EAAwB,YAAI,cACrBA,IACND,GAAa,CAAA,GACZE,GAA6BC,IAC/BA,EAAiB,MAAI,QACrBA,EAAuB,YAAI,cAC3BA,EAAoB,SAAI,WACjBA,IACND,GAAY,CAAA,GACf,MAAME,EACJ,WAAAC,CAAYC,GACVC,KAAKC,aAAc,EACnBD,KAAKE,kBAAoB,GACzBF,KAAKG,iBAAmB,GACxBH,KAAKI,oBAAsB,GAC3BJ,KAAKK,kBAAoB,CACvBC,OAAQ,IAERC,MAAO,GAEPC,SAAU,IAGPR,KAAAS,iBAAmCC,IACxCV,KAAKW,aAAe,EACpBX,KAAKY,mBAAqB,IACrBZ,KAAAa,oBAAsCH,IACtCV,KAAAc,sBAAwCC,IACxCf,KAAAgB,cAAgBC,KAAKC,MAC1BlB,KAAKmB,iBAAmB,EACnBnB,KAAAoB,iBAAmBH,KAAKC,MACxBlB,KAAAqB,eAAiBC,SAASC,OAC/BvB,KAAKwB,aAAeC,SAASC,SAAWD,SAASE,OAASF,SAASG,KACnE5B,KAAKD,OAAS,CACZ8B,OAAO,EACPC,WAAY,EACZC,eAAgB,GAChBC,eAAgB,CACdzB,OAAO,EACP0B,aAAa,EACbzB,UAAU,MAETT,GAEAC,KAAAkC,UAAYlC,KAAKmC,oBACjBnC,KAAAS,aAAa2B,IAAI,QAAS,GAC1BpC,KAAAS,aAAa2B,IAAI,cAAe,GAChCpC,KAAAS,aAAa2B,IAAI,WAAY,GAC9BpC,KAAKD,OAAOgC,iBACT/B,KAAAK,kBAAkBE,MAAQP,KAAKD,OAAOgC,eAE9C,CACD,UAAMM,aACJ,GAAIrC,KAAKC,YACPqC,QAAQC,KAAK,6CAGX,KACE,OAAAC,EAAKxC,KAAAD,OAAOiC,qBAAZ,EAAAQ,EAA4BjC,QAC9BP,KAAKyC,uBAEH,OAAAC,EAAK1C,KAAAD,OAAOiC,qBAAZ,EAAAU,EAA4BT,cAC9BjC,KAAK2C,6BAEH,OAAAC,EAAK5C,KAAAD,OAAOiC,qBAAZ,EAAAY,EAA4BpC,WAC9BR,KAAK6C,yBAEP7C,KAAK8C,2BACL9C,KAAK+C,yBACL/C,KAAKgD,sBACLhD,KAAKC,aAAc,EACfD,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,gDAAiD,CAC3DC,UAAWC,UAAUD,UACrBE,OAAQpD,KAAKD,OAAOqD,OACpBC,iBAAkBrD,KAAKK,mBAG5B,OAAQE,GAED,MADE+B,QAAA/B,MAAM,6CAA8CA,GACtDA,CACP,CACF,CAED,aAAA+C,CAAcC,EAAUC,EAASC,EAAQ,OAAQC,EAAMC,EAAc,UACnE,MAAMC,EAAa,CACjBL,WACAC,UACAC,QACAI,UAAW5C,KAAKC,MAChBwC,KAAMA,EAAO1D,KAAK8D,iBAAiBJ,QAAQ,EAC3CC,eAEF3D,KAAK+D,uBAAuBH,GAC5B5D,KAAKgE,sBAAsBJ,GAC3B5D,KAAKiE,yBAAyBL,GAC1B5D,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,wBAAyB,CACnCM,WACAC,UACAU,YAAalE,KAAKE,kBAAkBiE,OACpCC,WAAYpE,KAAKG,iBAAiBgE,OAClCE,cAAerE,KAAKI,oBAAoB+D,QAG7C,CACD,sBAAAJ,CAAuBH,GAChB5D,KAAAE,kBAAkBoE,KAAKV,GACxB5D,KAAKE,kBAAkBiE,OAASnE,KAAKK,kBAAkBC,SACzDN,KAAKE,kBAAoBF,KAAKE,kBAAkBqE,OAAOvE,KAAKK,kBAAkBC,QAEjF,CACD,qBAAA0D,CAAsBJ,GACf5D,KAAAG,iBAAiBmE,KAAKV,GACvB5D,KAAKG,iBAAiBgE,OAASnE,KAAKK,kBAAkBE,QACxDP,KAAKG,iBAAmBH,KAAKG,iBAAiBoE,OAAOvE,KAAKK,kBAAkBE,OAE/E,CACD,wBAAA0D,CAAyBL,GAClB5D,KAAAI,oBAAoBkE,KAAKV,GAC1B5D,KAAKI,oBAAoB+D,OAASnE,KAAKK,kBAAkBG,WAC3DR,KAAKI,oBAAsBJ,KAAKI,oBAAoBmE,OAAOvE,KAAKK,kBAAkBG,UAErF,CAED,0BAAAgE,GACM,GAAoC,IAApCxE,KAAKI,oBAAoB+D,OAC3B,OAEI,MAAAjD,EAAMD,KAAKC,MACblB,KAAKqB,gBACFrB,KAAAmB,kBAAoBD,EAAMlB,KAAKoB,iBACpCpB,KAAKoB,iBAAmBF,GAE1B,MAAMuD,EAAe,CACnBC,UAAW1E,KAAKD,OAAO2E,UACvBxC,UAAWlC,KAAKkC,UAChByC,IAAKC,OAAOnD,SAASoD,KACrBhB,UAAW3C,EACX4D,YAAa,IAAI9E,KAAKI,qBACtB2E,SAAU,CACRC,MAAO1D,SAAS0D,MAChBC,SAAUjF,KAAKmB,kBAEjB+B,UAAWC,UAAUD,WAEnBlD,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,uBAAwB,CAClCiC,wBAAyBlF,KAAKI,oBAAoB+D,OAClDgB,qBAAsBnF,KAAKG,iBAAiBgE,OAC5Cc,SAAUjF,KAAKmB,iBACfiE,MAAOpF,KAAKwB,eAGhBxB,KAAKqF,SAAS,WAAYrF,KAAKsF,uBAAuBb,IACtDzE,KAAKI,oBAAsB,GACvBJ,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,kCAAmC,CAC7CiC,wBAAyBlF,KAAKI,oBAAoB+D,OAClDgB,qBAAsBnF,KAAKG,iBAAiBgE,QAGjD,CAED,WAAAoB,CAAYhF,GACN,IAACP,KAAKwF,eAAgB,OAC1B,MAAMC,EAAuB,IACxBlF,EACHuE,YAAa,IAAI9E,KAAKG,mBAEpBH,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,sBAAuB,CACjCyC,UAAWnF,EAAMoF,KACjBnC,QAASjD,EAAMiD,QACf2B,qBAAsBnF,KAAKG,iBAAiBgE,OAC5Ce,wBAAyBlF,KAAKI,oBAAoB+D,SAGtDnE,KAAKqF,SAAS,QAASrF,KAAKsF,uBAAuBG,GACpD,CAED,sBAAAG,GACE,MAAMC,EAAkB,CACtBnB,UAAW1E,KAAKD,OAAO2E,UACvBC,IAAKC,OAAOnD,SAASoD,KACrBhB,UAAW5C,KAAKC,MAChB4E,QAAS,CACPC,WAAY/F,KAAKgG,sBACjBC,OAAQjG,KAAKkG,gBAEfhD,UAAWC,UAAUD,WAEnBlD,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,wBAAyB,CACnC8C,WAAYF,EAAgBC,QAAQC,WACpCE,OAAQJ,EAAgBC,QAAQG,SAGpCjG,KAAKqF,SAAS,cAAerF,KAAKsF,uBAAuBO,GAC1D,CAED,QAAAR,CAASc,EAAUC,GACjB,IAAKpG,KAAKqG,mBAAmBF,GAI3B,YAHInG,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,gBAAgB4D,oBAI7B,IAACnG,KAAKD,OAAOqD,OAIf,YAHIpD,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,kCAIX,MAAA+D,EAAU,CAACF,EAAc1C,MACzBN,EAASpD,KAAKuG,YAAYJ,GAC1BK,EAAaC,KAAKC,UAAUJ,GAC9BtG,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,qBAAqBkD,SAAgB/C,KAElB,WAA7B9B,SAASqF,iBAAgCrF,SAASC,QAChDvB,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,uCAETjD,KAAA4G,eAAexD,EAAQoD,EAAYL,IAEnCnG,KAAA6G,cAAczD,EAAQoD,EAAYL,EAE1C,CAED,mBAAAnD,GACOhD,KAAA8G,YAAclC,OAAOmC,YAAY,KAChC,GAAA/G,KAAKgH,yBAQP,OAPIhH,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,uCAEVjD,KAAK8G,cACPG,cAAcjH,KAAK8G,aACnB9G,KAAK8G,iBAAc,IAIvB9G,KAAKkH,4BACLlH,KAAKwE,8BACJ,KACII,OAAAuC,iBAAiB,eAAgB,KACtCnH,KAAKoH,qBAEE9F,SAAA6F,iBAAiB,mBAAoB,KACxC7F,SAASC,QACXvB,KAAKwE,8BAGV,CACD,gBAAA4C,GACOpH,KAAAqH,0BAA0BrH,KAAKwB,cACpCxB,KAAKwE,4BACN,CAED,YAAA8C,CAAa/G,EAAOgH,GACd,IAACvH,KAAKC,YAER,YADAqC,QAAQC,KAAK,wCAGT,MAAAiF,EAAexH,KAAKyH,gBAAgBlH,GACpCmH,EAAY,CAChB/B,KAAMlG,EAAUkI,SAChBnE,QAASjD,EAAMiD,QACfoE,MAAOrH,EAAMqH,MACb/D,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBwD,YAAa,SACb4D,KAAMvH,KAAK6H,UAAUN,GACrBO,SAAUN,EAAaM,SACvBC,WAAYP,EAAaO,WACzBC,OAAQR,EAAaQ,OACrBC,MAAOT,EAAaS,OAEtBjI,KAAKuF,YAAYmC,EAClB,CACD,UAAAQ,CAAW3E,EAAUC,EAASE,GACvB1D,KAAKC,YAIVD,KAAKsD,cAAcC,EAAUC,EAAS,OAAQE,EAAM,UAHlDpB,QAAQC,KAAK,uCAIhB,CACD,WAAA4F,CAAYC,EAAMC,EAAOd,GAClBvH,KAAKC,YAIVD,KAAKsD,cAAc,cAAe,kBAAkB8E,OAAUC,IAAS,OAAQ,CAC7EC,WAAYF,EACZG,YAAaF,KACVd,GACF,UAPDjF,QAAQC,KAAK,uCAQhB,CACD,aAAAiG,CAAcC,EAAO/E,GACd1D,KAAKC,YAIVD,KAAKsD,cAAc,OAAQ,mBAAmBmF,IAAS,OAAQ,CAC7DC,UAAW,WACXC,UAAWF,KACR/E,GACF,UAPDpB,QAAQC,KAAK,uCAQhB,CAED,eAAAkF,CAAgBlH,GACV,IAACA,EAAMqH,MACF,MAAA,CAAEA,WAAO,GAEd,IACF,MAAMgB,EAAarI,EAAMqH,MAAMiB,MAAM,MACrC,IAAA,MAAWC,KAAQF,EAAY,CACvB,MAAAG,EAAQD,EAAKC,MAAM,kEACzB,GAAIA,EAAO,CACT,MAAS,CAAApE,EAAO,CAAAqD,EAAQC,GAASc,EAC3BC,EAAWrE,EAAIkE,MAAM,KAEpB,MAAA,CACLf,SAAUnD,EACVoD,WAHeiB,EAASA,EAAS7E,OAAS,GAI1C6D,OAAQiB,SAASjB,GACjBC,MAAOgB,SAAShB,GAChBL,MAAOrH,EAAMqH,MAEhB,CACF,CACF,OAAQsB,GACHlJ,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,4CAA6C2G,EAE7D,CACM,MAAA,CAAEtB,MAAOrH,EAAMqH,MACvB,CACD,SAAAuB,CAAU5B,GACR,IAAKA,EAAa,OAClB,MAAM6B,EAAU,CAAA,EAChB,IAAIC,EAAa,EACjB,IAAA,MAAYC,EAAKjB,KAAUkB,OAAOC,QAAQjC,GACpC,KAAA8B,GAAc,IAAMC,EAAInF,OAAS,KACxB,MAATkE,EAAe,CACX,MAAAoB,EAA4B,iBAAVpB,EAAqB5B,KAAKC,UAAU2B,GAASqB,OAAOrB,GACpEe,EAAAE,GAAOG,EAAStF,OAAS,IAAMsF,EAASlF,MAAM,EAAG,KAAO,MAAQ8D,EACxEgB,GACD,CAEI,OAAAA,EAAa,EAAID,OAAU,CACnC,CACD,SAAAvB,CAAU8B,GACF,MAAAC,EAAc5J,KAAKD,OAAO6J,YAC5B,IAACA,IAAgBD,EAAiB,OACtC,MAAME,EAAS,IACVD,GAAe,CAAE,KACjBD,GAAY,CAAE,GAEZ,OAAA3J,KAAKmJ,UAAUU,EACvB,CACD,gBAAA/F,CAAiBJ,GACf,MAAMoG,EAAS,CAAA,EACTC,EAAiB,CACrB,OACA,KACA,MACA,SACA,SACA,WACA,UACA,KACA,aACA,cACA,gBACA,QACA,QACA,WACA,WACA,aACA,SACA,SAEF,IAAA,MAAYT,EAAKjB,KAAUkB,OAAOC,QAAQ9F,GAAO,CAC/C,MAAMsG,EAAYD,EAAeE,SAASX,GAAO,IAAM,IAClC,iBAAVjB,GAAsBA,EAAMlE,OAAS6F,EAC9CF,EAAOR,GAAOjB,EAAM9D,MAAM,EAAGyF,GAAa,MAE1CF,EAAOR,GAAOjB,CAEjB,CACM,OAAAyB,CACR,CACD,sBAAAxE,CAAuB5B,GACrB,MAAMwG,EAAa,CACjBxF,UAAWhB,EAAKgB,UAChBb,UAAWH,EAAKG,UAChB3B,UAAWlC,KAAKkC,UAChByC,IAAKjB,EAAKiB,IACVzB,UAAWQ,EAAKR,WAElB,GAAI,SAAUQ,GAAQ,YAAaA,GAAQ,gBAAiBA,EAAM,CAChE,MAAMyG,EAAYzG,EACZ0G,EAAU,IACXF,EACHvG,YAAawG,EAAUxG,YACvB+B,UAAWyE,EAAUxE,KACrBnC,QAAS2G,EAAU3G,QACnBoE,MAAOuC,EAAUvC,MACjB9C,YAAaqF,EAAUrF,YACvByC,KAAM4C,EAAU5C,KAChBO,SAAUqC,EAAUrC,SACpBC,WAAYoC,EAAUpC,WACtBC,OAAQmC,EAAUnC,OAClBC,MAAOkC,EAAUlC,OAEf,GAAAkC,EAAUxE,OAASlG,EAAU4K,WAAY,CAC3C,MAAMC,EAAYH,EAClBC,EAAQG,QAAUD,EAAUC,QAC5BH,EAAQI,SAAWF,EAAUE,SAC7BJ,EAAQK,SAAWH,EAAUG,QAC9B,CACG,GAAAN,EAAUxE,OAASlG,EAAUiL,eAAgB,CAC/C,MAAMC,EAAgBR,EACtBC,EAAQQ,aAAeD,EAAcC,aACrCR,EAAQS,YAAcF,EAAcE,YACpCT,EAAQU,YAAcH,EAAcG,WACrC,CACD,MAAO,CAAEnF,KAAM,QAASjC,KAAM0G,EAC/B,CACD,GAAI,YAAa1G,EAAM,CACrB,MAAMqH,EAAWrH,EACV,MAAA,CACLiC,KAAM,cACNjC,KAAM,IACDwG,EACHvG,YAAa,OACbmC,QAASiF,EAASjF,SAGvB,CACG,GAAA,aAAcpC,GAAQ,cAAeA,EAAM,CAC7C,MAAMe,EAAef,EACd,MAAA,CACLiC,KAAM,WACNjC,KAAM,IACDwG,EACHvG,YAAa,OACbmB,YAAaL,EAAaK,YAC1BC,SAAUN,EAAaM,UAG5B,CACD,MAAMiG,EAAetH,EACd,MAAA,CACLiC,KAAM,QACNjC,KAAM,CACJgB,UAAWsG,EAAatG,UACxBb,UAAWmH,EAAanH,UACxB3B,UAAWlC,KAAKkC,UAChByC,IAAKqG,EAAarG,IAClBzB,UAAW8H,EAAa9H,UACxBS,YAAa,QAGlB,CACD,kBAAA0C,CAAmBF,GACjB,GAAInG,KAAKc,kBAAkBmK,IAAI9E,GACtB,OAAA,EAET,MAAM+E,EAAWlL,KAAKS,aAAa0K,IAAIhF,IAAa,EAChD,QAAA+E,GAAYlL,KAAKW,gBACdX,KAAAc,kBAAkBsK,IAAIjF,GACvBnG,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,gBAAgB4D,gBAAuB+E,YAE/C,EAGV,CACD,YAAA1F,GACE,OAAO6F,KAAKC,UAAYtL,KAAKD,OAAO+B,YAAc,EACnD,CACD,iBAAAK,GACE,OAAOlB,KAAKC,MAAMqK,SAAS,IAAMF,KAAKC,SAASC,SAAS,IAAIC,OAAO,EACpE,CACD,WAAAjF,CAAYJ,GACN,IAAA/C,EAASpD,KAAKD,OAAOqD,OAIlB,OAHFA,EAAOqI,SAAS,OACTrI,GAAA,KAEL,GAAGA,IAAS+C,GACpB,CACD,mBAAMU,CAAczD,EAAQoD,EAAYL,GAClC,IACI,MAAAuF,EAAa,IAAIC,gBACjBC,EAAYC,WAAW,IAAMH,EAAWI,QAAS,KACjDtB,QAAiBuB,MAAM3I,EAAQ,CACnC4I,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM1F,EACN2F,WAAW,EACXC,OAAQV,EAAWU,SAGjB,GADJC,aAAaT,IACRpB,EAAS8B,GACN,MAAA,IAAIC,MAAM,QAAQ/B,EAASgC,WAAWhC,EAASiC,cAElDzM,KAAAS,aAAa2B,IAAI+D,EAAU,GAChCnG,KAAKa,gBAAgBuB,IAAI+D,EAAUlF,KAAKC,OACnClB,KAAAc,kBAAkB4L,OAAOvG,GAC1BnG,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,iBAAiBkD,WAEhC,OAAQ5F,GACPP,KAAK2M,kBAAkBxG,EAAU5F,EAAO6C,EAAQoD,GAAY,EAC7D,CACF,CACD,iBAAAmG,CAAkBxG,EAAU5F,EAAO6C,EAAQoD,EAAYoG,GAAiB,GACtE,MAAMC,EAAkB7M,KAAKS,aAAa0K,IAAIhF,IAAa,EAC3D,GAAIyG,EAIF,YAHI5M,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,4BAA4B4D,oBAA2B5F,EAAMiD,YAI9E,MAAMsJ,EAAcD,EAAkB,EAKlC,GAJC7M,KAAAS,aAAa2B,IAAI+D,EAAU2G,GAC5B9M,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,iBAAiB4D,aAAoB2G,KAAe9M,KAAKW,kBAAkBJ,EAAMiD,WAE5FsJ,GAAe9M,KAAKW,aAGtB,OAFKX,KAAAc,kBAAkBsK,IAAIjF,QAC3B7D,QAAQ/B,MAAM,gBAAgB4F,iBAAwB2G,OAGpD9M,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,oCAAoCkD,QAE7CnG,KAAA4G,eAAexD,EAAQoD,EAAYL,EACzC,CACD,cAAAS,CAAexD,EAAQoD,EAAYL,GAC7B,GAAChD,UAAU4J,WAMX,IACI,MAAAC,EAAO,IAAIC,KAAK,CAACzG,GAAa,CAAEb,KAAM,qBAE5C,GADexC,UAAU4J,WAAW3J,EAAQ4J,GAEtChN,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,4BAA4BkD,iBAErC,CACkBhD,UAAU4J,WAAW3J,EAAQoD,GAGzCxG,KAAKD,OAAO8B,OACbS,QAAAW,IAAI,oCAAoCkD,aAF3CnG,KAAA2M,kBAAkBxG,EAAU,IAAIoG,MAAM,uBAAwBnJ,EAAQoD,GAAY,EAI1F,CACF,OAAQjG,GACPP,KAAK2M,kBAAkBxG,EAAU5F,EAAO6C,EAAQoD,GAAY,EAC7D,MAtBKxG,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,kCAAkC4D,SAsBpD,CACD,sBAAAa,GAES,MADU,CAAC,QAAS,cAAe,YAC1BkG,MAAOvH,GAAS3F,KAAKc,kBAAkBmK,IAAItF,GAC5D,CACD,yBAAAuB,GACQ,MAAAhG,EAAMD,KAAKC,MACjB,IAAA,MAAYiF,EAAUgH,KAAgBnN,KAAKa,gBAAgB2I,UACrD,GAAAtI,EAAMiM,EAAcnN,KAAKY,mBAAoB,CAC/C,MAAMiM,EAAkB7M,KAAKS,aAAa0K,IAAIhF,IAAa,EACvD0G,EAAkB,IACf7M,KAAAS,aAAa2B,IAAI+D,EAAUkF,KAAK+B,IAAI,EAAGP,EAAkB,IACzD7M,KAAAc,kBAAkB4L,OAAOvG,GAC1BnG,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,gBAAgBkD,oBAGjC,CAEJ,CACD,yBAAAkB,CAA0BjC,GAClB,MAAAlE,EAAMD,KAAKC,MACblB,KAAKqB,gBACFrB,KAAAmB,kBAAoBD,EAAMlB,KAAKoB,kBAEtC,MAAMiM,EAAe,CACnBjI,QACAkI,UAAWpM,EAAMlB,KAAKgB,cACtBuM,YAAavN,KAAKmB,iBAClB6D,MAAO1D,SAAS0D,OAElBhF,KAAKsD,cAAc,OAAQ,0BAA2B,OAAQ+J,EAAc,QACxErN,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,wCAAyCoK,EAExD,CACD,iBAAAG,GACQ,MAAAtM,EAAMD,KAAKC,MACjBlB,KAAKgB,cAAgBE,EACrBlB,KAAKmB,iBAAmB,EACxBnB,KAAKoB,iBAAmBF,EACnBlB,KAAAqB,eAAiBC,SAASC,MAChC,CACD,wBAAAuB,GACWxB,SAAA6F,iBAAiB,mBAAoB,KACtC,MAAAjG,EAAMD,KAAKC,MACbI,SAASC,OACPvB,KAAKqB,gBACFrB,KAAAmB,kBAAoBD,EAAMlB,KAAKoB,iBACpCpB,KAAKqB,eAAgB,EAChBrB,KAAAsD,cAAc,OAAQ,qBAAsB,OAAQ,CACvDiK,YAAarM,EAAMlB,KAAKoB,iBACxBD,iBAAkBnB,KAAKmB,kBACtB,SAGAnB,KAAKqB,gBACRrB,KAAKoB,iBAAmBF,EACxBlB,KAAKqB,eAAgB,EACrBrB,KAAKsD,cAAc,OAAQ,sBAAuB,YAAQ,EAAQ,WAIjEsB,OAAAuC,iBAAiB,QAAS,KAC1BnH,KAAKqB,gBACHrB,KAAAoB,iBAAmBH,KAAKC,MAC7BlB,KAAKqB,eAAgB,EACrBrB,KAAKsD,cAAc,OAAQ,oBAAqB,YAAQ,EAAQ,WAG7DsB,OAAAuC,iBAAiB,OAAQ,KAC1BnH,KAAKqB,gBACPrB,KAAKmB,kBAAoBF,KAAKC,MAAQlB,KAAKoB,iBAC3CpB,KAAKqB,eAAgB,EACrBrB,KAAKsD,cAAc,OAAQ,kBAAmB,YAAQ,EAAQ,UAGnE,CACD,sBAAAP,GACE/C,KAAKsD,cAAc,aAAc,kBAAkBtD,KAAKwB,eAAgB,OAAQ,CAC9E4D,MAAOpF,KAAKwB,aACZwD,MAAO1D,SAAS0D,OACf,QACH,MAAMyI,EAAoBC,QAAQC,UAAUC,KAAKF,SAC3CG,EAAuBH,QAAQI,aAAaF,KAAKF,SACvDA,QAAQC,UAAY,CAACjK,EAAMqK,EAAQpJ,KACjC,MAAMmF,EAAS2D,EAAkB/J,EAAMqK,EAAQpJ,GAExC,OADP3E,KAAKgO,kBAAkB,QAAa,MAALrJ,OAAK,EAAAA,EAAA4G,aAAc9J,SAASoD,MACpDiF,GAET4D,QAAQI,aAAe,CAACpK,EAAMqK,EAAQpJ,KACpC,MAAMmF,EAAS+D,EAAqBnK,EAAMqK,EAAQpJ,GAE3C,OADP3E,KAAKgO,kBAAkB,WAAgB,MAALrJ,OAAK,EAAAA,EAAA4G,aAAc9J,SAASoD,MACvDiF,GAEFlF,OAAAuC,iBAAiB,WAAY,KAC7BnH,KAAAgO,kBAAkB,MAAOvM,SAASoD,QAElCD,OAAAuC,iBAAiB,aAAesB,IAChCzI,KAAAgO,kBAAkB,OAAQvF,EAAMwF,SAExC,CACD,iBAAAD,CAAkBrI,EAAMhB,GACtB,MAAMuJ,EAAWzM,SAASC,SAAWD,SAASE,OAASF,SAASG,KAC1DuM,EAAWnO,KAAKwB,aAClB0M,IAAaC,IACfnO,KAAKqH,0BAA0B8G,GAC/BnO,KAAKwE,6BACLxE,KAAKwB,aAAe0M,EACpBlO,KAAKwN,oBACAxN,KAAAsD,cAAc,aAAc,SAASqC,MAASwI,OAAcD,IAAY,OAAQ,CACnFvI,OACAyI,KAAMD,EACNE,GAAIH,EACJlJ,MAAO1D,SAAS0D,OACf,QACChF,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,+BAA+B0C,MAAU,CAAEyI,KAAMD,EAAUE,GAAIH,IAGhF,CACD,mBAAAzL,GACSmC,OAAAuC,iBAAiB,QAAUsB,UAC5B,GAAAA,EAAM6F,SAAW1J,OAAQ,CACrB,MAAA4C,EAAexH,KAAKyH,gBAAgBgB,EAAMlI,OAAS,IAAIgM,MAAM9D,EAAMjF,UACnEkE,EAAY,CAChB/B,KAAMlG,EAAUkI,SAChBnE,QAASiF,EAAMjF,QACfoE,MAAO,OAAApF,EAAMiG,EAAAlI,YAAO,EAAAiC,EAAAoF,MACpB/D,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBwD,YAAa,OACb4D,KAAMvH,KAAK6H,YACXC,SAAUW,EAAMX,UAAYN,EAAaM,SACzCC,WAAYP,EAAaO,WACzBC,OAAQS,EAAMT,QAAUR,EAAaQ,OACrCC,MAAOQ,EAAMR,OAAST,EAAaS,OAErCjI,KAAKuF,YAAYmC,EAClB,IAEI9C,OAAAuC,iBAAiB,qBAAuBsB,IAC7C,MAAMlI,EAAQkI,EAAM8F,OACd/G,EAAexH,KAAKyH,gBAAgBlH,aAAiBgM,MAAQhM,EAAQ,IAAIgM,MAAM7C,OAAOnJ,KACtFmH,EAAY,CAChB/B,KAAMlG,EAAU+O,cAChBhL,SAAS,MAAAjD,OAAA,EAAAA,EAAOiD,UAAWkG,OAAOnJ,GAClCqH,MAAc,MAAPrH,OAAO,EAAAA,EAAAqH,MACd/D,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBwD,YAAa,OACb4D,KAAMvH,KAAK6H,YACXC,SAAUN,EAAaM,SACvBC,WAAYP,EAAaO,WACzBC,OAAQR,EAAaQ,OACrBC,MAAOT,EAAaS,OAEtBjI,KAAKuF,YAAYmC,KAEZ9C,OAAAuC,iBAAiB,QAAUsB,IAChC,MAAM6F,EAAS7F,EAAM6F,OACrB,GAAIA,GAAUA,IAAW1J,QAAU0J,aAAkBG,QAAS,CAC5D,MAAMC,EAAUJ,EACV3D,EAAgB,CACpBhF,KAAMlG,EAAUiL,eAChBlH,QAAS,4BAA4BkL,EAAQC,KAAOD,EAAQ7J,MAAQ,YACpE+F,aAAc8D,EAAQE,QAAQC,cAC9BhE,YAAa6D,EAAQC,KAAOD,EAAQ7J,MAAQ,GAC5ChB,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtB2K,YAAa,CACX8D,QAASF,EAAQE,QACjBE,GAAIJ,EAAQI,SAAM,GAEpBnL,YAAa,OACb4D,KAAMvH,KAAK6H,aAEb7H,KAAKuF,YAAYoF,EAClB,IACA,GACH3K,KAAK+O,oBACL/O,KAAKgP,yBACLhP,KAAKiP,iBACLjP,KAAKkP,cACN,CACD,YAAAA,GACQ,MAAAC,EAAeC,eAAeC,UAAUC,KACxCC,EAAeH,eAAeC,UAAUG,KAC9CJ,eAAeC,UAAUC,KAAO,SAAStD,EAAQrH,EAAK8K,EAAOC,EAAUC,GAM9D,OALP3P,KAAK4P,aAAe,CAClB5D,SACArH,IAAKA,EAAI4G,WACTsE,UAAW5O,KAAKC,OAEXiO,EAAaW,KAAK9P,KAAMgM,EAAQrH,OAAe,IAAV8K,GAA0BA,EAAOC,EAAUC,EAC7F,EACmBP,eAAAC,UAAUG,KAAO,SAAStD,GACvC,MAAM6D,EAAc/P,KAAK4P,aACzB,IAAKG,EAAoB,OAAAR,EAAaO,KAAK9P,KAAMkM,GACjD,MAAM8D,EAAUpL,OAAOoL,QAiChB,OAhCHA,GACMA,EAAA1M,cAAc,OAAQ,OAAOyM,EAAY/D,UAAU+D,EAAYpL,MAAO,OAAQ,CACpFA,IAAKoL,EAAYpL,IACjBqH,OAAQ+D,EAAY/D,QACnB,QAEAhM,KAAAmH,iBAAiB,UAAW,KAC/B,IAAK6I,EAAS,OACd,MAAMvF,EAAWxJ,KAAKC,MAAQ6O,EAAYF,UACtC,GAAA7P,KAAKwM,QAAU,IAAK,CACtB,MAAMlC,EAAY,CAChB3E,KAAMlG,EAAU4K,WAChB7G,QAAS,OAAOxD,KAAKwM,SACrB3I,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAWsL,EAAQjQ,OAAO2E,UAC1BxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAIkL,EAAQ7P,kBACzBoK,QAAS,CACP5F,IAAKoL,EAAYpL,IACjBqH,OAAQ+D,EAAY/D,QAEtBxB,SAAU,CACRgC,OAAQxM,KAAKwM,QAEf/B,WACA9G,YAAa,OACb4D,KAAMyI,EAAQnI,aAEhBmI,EAAQzK,YAAY+E,EACrB,IAEIiF,EAAaO,KAAK9P,KAAMkM,EACrC,CACG,CACD,iBAAA6C,GACElD,WAAW,KAET,IADmB7L,KAAKiQ,oBACP,CACf,MAAMvI,EAAY,CAChB/B,KAAMlG,EAAUkI,SAChBnE,QAAS,mDACTK,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBwD,YAAa,OACb4D,KAAMvH,KAAK6H,aAEb7H,KAAKuF,YAAYmC,EAClB,GACA,IACJ,CACD,iBAAAuI,SACE,MAAM/D,EAAO5K,SAAS4K,KACtB,IAAKA,EAAa,OAAA,EACZ,MAAAgE,EAAc,OAAA1N,EAAK0J,EAAAiE,gBAAW,EAAA3N,EAAA4N,OAChC,GAAAF,GAAeA,EAAY/L,OAAS,EAAU,OAAA,EAC5C,MAAAkM,EAASnE,EAAKoE,iBAAiB,OACrC,IAAA,MAAWC,KAAOF,EAChB,GAAIE,EAAIC,MAAQ,GAAKD,EAAIE,OAAS,EAAU,OAAA,EAExC,MAAAC,EAAWxE,EAAKoE,iBAAiB,UACvC,IAAA,MAAWK,KAAUD,EACnB,GAAIC,EAAOH,MAAQ,GAAKG,EAAOF,OAAS,EAAU,OAAA,EAE9C,MAAAG,EAAO1E,EAAKoE,iBAAiB,OACnC,IAAA,MAAWO,KAAOD,EACZ,GAAAC,EAAIC,wBAAwBN,MAAQ,EAAU,OAAA,EAE7C,OAAA,CACR,CACD,sBAAAxB,GACE,GAAI,wBAAyBpK,OACvB,IACe,IAAImM,oBAAqBC,IACxCA,EAAKC,aAAaC,QAASC,IACrBA,EAAM1G,SAAW,KACdzK,KAAAsD,cACH,cACA,uBAAuB+H,KAAK+F,MAAMD,EAAM1G,cACxC,UACA,CACEA,SAAUY,KAAK+F,MAAMD,EAAM1G,UAC3B4G,SAAU,WACVxB,UAAWxE,KAAK+F,MAAMD,EAAMtB,YAE9B,QAEEsB,EAAM1G,SAAW,KACdzK,KAAAsD,cACH,cACA,yBAAyB+H,KAAK+F,MAAMD,EAAM1G,cAC1C,QACA,CACEA,SAAUY,KAAK+F,MAAMD,EAAM1G,UAC3B6G,SAAU,QAEZ,aAMDC,QAAQ,CAAEC,WAAY,CAAC,aACjC,OAAQjR,GACHP,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,mDAAoDhC,EAEpE,CAEJ,CACD,cAAA0O,GACE,MAAMwC,EAAgB7M,OAAOmH,MACtBnH,OAAAmH,MAAQ0D,SAAUiC,KACjB,MAAA7B,EAAY5O,KAAKC,OAChByD,EAAKgN,EAAU,CAAE,GAAID,EACvB1R,KAAAsD,cAAc,OAAQ,QAAQqO,EAAQ3F,QAAU,SAASrH,IAAO,OAAQ,CAC3EA,IAAKA,EAAI4G,WACTS,OAAQ2F,EAAQ3F,QAAU,OACzB,QACC,IACF,MAAMxB,QAAiBiH,KAAiBC,GACpC,IAAClH,EAAS8B,GAAI,CAChB,MAAMhC,EAAY,CAChB3E,KAAMlG,EAAU4K,WAChB7G,QAAS,QAAQgH,EAASgC,SAC1B3I,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBoK,QAAS,CACP5F,IAAKA,EAAI4G,WACTS,OAAQ2F,EAAQ3F,QAAU,OAE5BxB,SAAU,CACRgC,OAAQhC,EAASgC,QAEnB/B,SAAUxJ,KAAKC,MAAQ2O,EACvBlM,YAAa,OACb4D,KAAMvH,KAAK6H,aAEb7H,KAAKuF,YAAY+E,EAClB,CACM,OAAAE,CACR,OAAQjK,GACP,MAAM+J,EAAY,CAChB3E,KAAMlG,EAAU4K,WAChB7G,QAAS,kBAAkBjD,EAAMiD,UACjCoE,MAAOrH,EAAMqH,MACb/D,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,UAAW1E,KAAKD,OAAO2E,UACvBxB,UAAWC,UAAUD,UACrB4B,YAAa,IAAI9E,KAAKG,kBACtBoK,QAAS,CACP5F,IAAKA,EAAI4G,WACTS,OAAQ2F,EAAQ3F,QAAU,OAE5BvB,SAAUxJ,KAAKC,MAAQ2O,EACvBlM,YAAa,OACb4D,KAAMvH,KAAK6H,aAGP,MADN7H,KAAKuF,YAAY+E,GACX/J,CACP,EAEJ,CAED,yBAAAoC,GAC8B,YAAxBrB,SAASsQ,WACJhN,OAAAuC,iBAAiB,OAAQ,KAC9B0E,WAAW,IAAM7L,KAAK4F,yBAA0B,OAGlDiG,WAAW,IAAM7L,KAAK4F,yBAA0B,KAElD5F,KAAK6R,kBACN,CAGD,gBAAAA,GACE,GAAI,wBAAyBjN,OAAQ,CAC/B,IACF,MAAMkN,EAAc,IAAIf,oBAAqBC,IACrC,MAAAxH,EAAUwH,EAAKC,aACrB,IAAA,MAAWE,KAAS3H,EAClB,GAAmB,2BAAf2H,EAAM/I,WAA6D,IAAxBpI,KAAK+R,eAA2B,CAC7E/R,KAAK+R,eAAiBZ,EAAMtB,UACxB7P,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,8BAA8BoI,KAAK+F,MAAMD,EAAMtB,wBAAwB7P,KAAKgS,mBAErFhS,KAAAsD,cAAc,cAAe,QAAQ+H,KAAK+F,MAAMD,EAAMtB,eAAgB,OAAQ,CACjFoC,OAAQ,MACR5J,MAAOgD,KAAK+F,MAAMD,EAAMtB,WACxBqC,OAAQ,YACP,QACHJ,EAAYK,aACZ,KACD,IAGLL,EAAYP,QAAQ,CAAEC,WAAY,CAAC,WAC/BxR,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,kCAEf,OAAQ1C,GACHP,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,8BAA+BhC,EAE/C,CACG,IACFP,KAAKoS,YAAc,IAAIrB,oBAAqBC,YACpC,MAAAxH,EAAUwH,EAAKC,aACjB,GAAAzH,EAAQrF,OAAS,EAAG,CACtB,MAAMkO,EAAW7I,EAAQA,EAAQrF,OAAS,GACjBnE,KAAKgS,eAC9BhS,KAAKgS,eAAiBK,EAASxC,UAC3B7P,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,+BAA+BoI,KAAK+F,MAAMiB,EAASxC,wBAAwB7P,KAAK+R,sBAAsB,OAAAvP,EAAA6P,EAAS3D,cAAT,EAAAlM,EAAkBoM,WAEjI5O,KAAAsD,cAAc,cAAe,QAAQ+H,KAAK+F,MAAMiB,EAASxC,eAAgB,OAAQ,CACpFoC,OAAQ,MACR5J,MAAOgD,KAAK+F,MAAMiB,EAASxC,WAC3BnB,QAAS,OAAAhM,EAAS2P,EAAA3D,cAAS,EAAAhM,EAAAkM,QAC3B0D,KAAMD,EAASC,KACfJ,OAAQ,YACP,OACJ,IAEHlS,KAAKoS,YAAYb,QAAQ,CAAEC,WAAY,CAAC,8BACpCxR,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,kCAEf,OAAQ1C,GACHP,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,8BAA+BhC,EAE/C,CACP,MACUP,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,0CAGjBvC,KAAKuS,sBACN,CAED,oBAAAA,GACE,MAAMC,EAAc,UACU,IAAxBxS,KAAKgS,qBAAoD,IAAvBhS,KAAKyS,eACzCzS,KAAKyS,cAAgBzS,KAAKgS,eACtBhS,KAAKoS,cACPpS,KAAKoS,YAAYD,aACjBnS,KAAKoS,iBAAc,GAEjBpS,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,4BAA4BoI,KAAK+F,MAAMpR,KAAKyS,qBAEjDzS,KAAKD,OAAO8B,YAAiC,IAAxB7B,KAAKgS,gBACnC1P,QAAQW,IAAI,gDAGT2B,OAAAuC,iBAAiB,eAAgBqL,GAC/BlR,SAAA6F,iBAAiB,mBAAoB,KACxC7F,SAASC,cAIfsK,WAAW,UAER,IACJ,CACD,mBAAA7F,GACM,IACF,MAAMD,EAAa9D,YAAYyQ,iBAAiB,cAAc,GAC9D,GAAI3M,EACK,MAAA,CACL4M,SAAUtH,KAAK+B,IAAI,EAAGrH,EAAW6M,yBAA2B7M,EAAW8M,YACvEC,aAAczH,KAAK+B,IAAI,EAAGrH,EAAWgN,aAAehN,EAAW8M,YAGpE,OAAQtS,GACR,CACG,IACF,MAAMyS,EAAS/Q,YAAY+Q,OAC3B,GAAIA,EACK,MAAA,CACLL,SAAUtH,KAAK+B,IAAI,EAAG4F,EAAOJ,yBAA2BI,EAAOC,iBAC/DH,aAAczH,KAAK+B,IAAI,EAAG4F,EAAOD,aAAeC,EAAOC,iBAG5D,OAAQ1S,GACR,CACM,MAAA,CACLoS,SAAU,EACVG,aAAc,EAEjB,CAGD,YAAA5M,GACE,MAAM4D,EAAS,CAAA,EACToJ,EAAWlT,KAAKmT,mBACL,IAAbD,IACFpJ,EAAOsJ,IAAMF,GAET,MAAAG,EAAWrT,KAAKsT,cACtB,QAAiB,IAAbD,EAAqB,CACJpR,YAAYyQ,iBAAiB,4BACjCvO,OAAS,GACtB2F,EAAOyJ,IAAMF,EACTrT,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,2BAA2BoI,KAAK+F,MAAMiC,SAGhDrT,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,8CAGlB,CAQM,OAPHvC,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,gCAAiC,CAC3CmQ,IAAKtJ,EAAOsJ,IAAM,GAAG/H,KAAK+F,MAAMtH,EAAOsJ,SAAW,YAClDG,IAAKzJ,EAAOyJ,IAAM,GAAGlI,KAAK+F,MAAMtH,EAAOyJ,SAAW,YAClD,KAAI,eAAetR,YAAYyQ,iBAAiB,4BAA4BvO,WAGzE2F,CACR,CAGD,WAAAqJ,GACM,QAAwB,IAAxBnT,KAAK+R,eAIP,OAHI/R,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,8BAA8BoI,KAAK+F,MAAMpR,KAAK+R,qBAErD/R,KAAK+R,eAEV,IACI,MACAyB,EADevR,YAAYyQ,iBAAiB,SACpBe,KAAMtC,GAAyB,2BAAfA,EAAM/I,MAChD,GAAAoL,GAAYA,EAAS3D,UAAY,EAOnC,YAN4B,IAAxB7P,KAAK+R,iBACP/R,KAAK+R,eAAiByB,EAAS3D,UAC3B7P,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,oCAAoCoI,KAAK+F,MAAMoC,EAAS3D,2BAGjE2D,EAAS3D,SAEnB,OAAQtP,GACHP,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,2BAA4BhC,EAE5C,CACGP,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,sCAGf,CAGD,WAAAqQ,GACM,IACI,MAAAI,EAAazR,YAAYyQ,iBAAiB,4BAC5C,GAAsB,IAAtBgB,EAAWvP,OAIN,YAHHnE,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,uDAIhB,MAAM0Q,EAAYD,EAAWA,EAAWvP,OAAS,GAC7C,GAAAwP,GAAaA,EAAU9D,UAAY,EAUrC,OATI7P,KAAK+R,gBAAkB1G,KAAKuI,IAAID,EAAU9D,UAAY7P,KAAK+R,gBAAkB,GAC3E/R,KAAKD,OAAO8B,OACdS,QAAQC,KAAK,kDAGjBvC,KAAKgS,eAAiB2B,EAAU9D,UAC5B7P,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,6BAA6BoI,KAAK+F,MAAMuC,EAAU9D,gBAEzD8D,EAAU9D,SAEpB,OAAQtP,GACHP,KAAKD,OAAO8B,OACNS,QAAAC,KAAK,2BAA4BhC,EAE5C,CACGP,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,+CAGf,CACD,sBAAAJ,GAmCM,IAAAgR,EAkCAC,EApEJ9T,KAAKsD,cAAc,aAAc,gBAAgBsB,OAAOnD,SAASoD,OAAQ,OAAQ,CAC/EG,MAAO1D,SAAS0D,MAChB+O,SAAUzS,SAASyS,SACnBlQ,UAAW5C,KAAKC,OACf,QACMI,SAAA6F,iBAAiB,QAAUsB,IAClC,MAAM6F,EAAS7F,EAAM6F,OACfxD,EAAc,CAClB8D,QAASN,EAAOM,SAEdN,EAAOQ,KACThE,EAAYgE,GAAKR,EAAOQ,IAErB9O,KAAAsD,cACH,OACA,cAAcgL,EAAOM,UAAUN,EAAOQ,GAAK,IAAIR,EAAOQ,KAAO,KAC7D,OACAhE,EACA,UAED,GACMxJ,SAAA6F,iBAAiB,SAAWsB,IACnC,MAAMuL,EAAOvL,EAAM6F,OACdtO,KAAAsD,cACH,OACA,iBACA,OACA,CACE2Q,OAAQD,EAAKC,QAAU,eACvBjI,OAAQgI,EAAKhI,QAAU,OAEzB,UAED,GAEM1K,SAAA6F,iBAAiB,QAAUsB,IAClC,MAAM6F,EAAS7F,EAAM6F,OACrBjC,aAAawH,GACAA,EAAAjP,OAAOiH,WAAW,KACxB7L,KAAAsD,cACH,OACA,kBAAkBgL,EAAOM,WAAWN,EAAO3I,QAC3C,YACA,EACA,SAED,OACF,GACMrE,SAAA6F,iBAAiB,UAAYsB,IAClB,UAAdA,EAAMa,KAAiC,WAAdb,EAAMa,KAC5BtJ,KAAAsD,cACH,OACA,gBAAgBmF,EAAMa,MACtB,YACA,EACA,QAGAb,EAAMyL,SAAW,CAAC,IAAK,KAAKjK,SAASxB,EAAMa,MACxCtJ,KAAAsD,cACH,OACA,kBAAkBmF,EAAMa,IAAI6K,gBAC5B,YACA,EACA,UAKCvP,OAAAuC,iBAAiB,SAAU,KAChCkF,aAAayH,GACCA,EAAAlP,OAAOiH,WAAW,KAC9B,MAAMuI,EAAYxP,OAAOyP,aAAe/S,SAASgT,gBAAgBF,UAC3DG,EAAejT,SAASgT,gBAAgBC,aACxCC,EAAe5P,OAAO6P,YACtBC,EAAgBrJ,KAAK+F,MAAMgD,GAAaG,EAAeC,GAAgB,KACzEE,EAAgB,IAAO,GACpB1U,KAAAsD,cACH,OACA,eAAeoR,KACf,OACA,CAAEA,iBACF,SAGH,MAEN,CAED,mBAAAC,GACS,MAAA,CACLrU,OAAQ,CACNsU,MAAO5U,KAAKE,kBAAkBiE,OAC9B0Q,MAAO7U,KAAKK,kBAAkBC,OAC9BwU,OAAQ9U,KAAKE,kBAAkBqE,UAAUwQ,IAAKC,IAAO,CACnDzR,SAAUyR,EAAEzR,SACZC,QAASwR,EAAExR,QACXK,UAAWmR,EAAEnR,cAGjBtD,MAAO,CACLqU,MAAO5U,KAAKG,iBAAiBgE,OAC7B0Q,MAAO7U,KAAKK,kBAAkBE,MAC9BuU,OAAQ9U,KAAKG,iBAAiBoE,UAAUwQ,IAAKC,IAAO,CAClDzR,SAAUyR,EAAEzR,SACZC,QAASwR,EAAExR,QACXK,UAAWmR,EAAEnR,cAGjBrD,SAAU,CACRoU,MAAO5U,KAAKI,oBAAoB+D,OAChC0Q,MAAO7U,KAAKK,kBAAkBG,SAC9BsU,OAAQ9U,KAAKI,oBAAoBmE,UAAUwQ,IAAKC,IAAO,CACrDzR,SAAUyR,EAAEzR,SACZC,QAASwR,EAAExR,QACXK,UAAWmR,EAAEnR,cAIpB,CACD,gBAAAoR,CAAiBtP,EAAO,OACtB,OAAQA,GACN,IAAK,SACH3F,KAAKE,kBAAoB,GACzB,MACF,IAAK,QACHF,KAAKG,iBAAmB,GACxB,MACF,IAAK,WACHH,KAAKI,oBAAsB,GAC3B,MACF,IAAK,MACHJ,KAAKE,kBAAoB,GACzBF,KAAKG,iBAAmB,GACxBH,KAAKI,oBAAsB,GAG3BJ,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,iBAAiB0C,WAEhC,CACD,aAAAuP,GACS,MAAA,CACLzU,aAAc8I,OAAO4L,YAAYnV,KAAKS,cACtCK,kBAAmBsU,MAAMhH,KAAKpO,KAAKc,mBACnCD,gBAAiB0I,OAAO4L,YAAYnV,KAAKa,iBACzCwU,YAAarV,KAAKW,aAErB,CACD,SAAA2U,GACS,MAAA,CACLrV,YAAaD,KAAKC,YAClBiC,UAAWlC,KAAKkC,UAChBV,aAAcxB,KAAKwB,aACnB+T,iBAAkBvV,KAAK2U,sBACvBa,aAAc,CACZC,MAAOxU,KAAKC,MAAQlB,KAAKgB,cACzB0U,QAAS1V,KAAKmB,kBAAoBnB,KAAKqB,cAAgBJ,KAAKC,MAAQlB,KAAKoB,iBAAmB,IAE9FuU,WAAY3V,KAAKkV,gBAEpB,CACD,eAAAU,GACE5V,KAAKS,aAAaoV,QAClB7V,KAAKc,kBAAkB+U,QACvB7V,KAAKa,gBAAgBgV,QAChB7V,KAAAS,aAAa2B,IAAI,QAAS,GAC1BpC,KAAAS,aAAa2B,IAAI,cAAe,GAChCpC,KAAAS,aAAa2B,IAAI,WAAY,GAC9BpC,KAAK8G,aACPG,cAAcjH,KAAK8G,aAErB9G,KAAKgD,sBACDhD,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,8BAEf,CAED,eAAA6S,GACS,MAAA,CACL1C,IAAK,CACH2C,SAAU/V,KAAK+R,eACfiE,MAAOhW,KAAK+R,eAEZkE,eAAmC,IAAxBjW,KAAK+R,eAChBG,YAAgC,IAAxBlS,KAAK+R,eAA4B,eAAiB,QAE5DwB,IAAK,CACHwC,SAAU/V,KAAKgS,eACfgE,MAAOhW,KAAKyS,cACZwD,eAAmC,IAAxBjW,KAAKgS,qBAAoD,IAAvBhS,KAAKyS,cAClDyD,oBAAqC,IAArBlW,KAAKoS,YACrBF,YAA+B,IAAvBlS,KAAKyS,cAA2B,aAAkC,IAAxBzS,KAAKgS,eAA4B,WAAa,QAElGnQ,MAAO,CAELsU,iCAAqD,IAAxBnW,KAAK+R,qBAAqD,IAAxB/R,KAAKgS,gBAA6BhS,KAAK+R,iBAAmB/R,KAAKgS,eAE9HoE,eAAgB,CACdC,aAAqC,oBAAhBpU,YAA8BA,YAAYyQ,iBAAiB,SAASvO,OAAS,EAClGuP,WAAmC,oBAAhBzR,YAA8BA,YAAYyQ,iBAAiB,4BAA4BvO,OAAS,IAI1H,CAED,OAAAmS,GACEtW,KAAKC,aAAc,EACfD,KAAK8G,aACPG,cAAcjH,KAAK8G,aAEjB9G,KAAKoS,cACPpS,KAAKoS,YAAYD,aACjBnS,KAAKoS,iBAAc,QAEO,IAAxBpS,KAAKgS,qBAAoD,IAAvBhS,KAAKyS,gBACzCzS,KAAKyS,cAAgBzS,KAAKgS,gBAE5BhS,KAAKwE,6BACLxE,KAAKE,kBAAoB,GACzBF,KAAKG,iBAAmB,GACxBH,KAAKI,oBAAsB,GAC3BJ,KAAKS,aAAaoV,QAClB7V,KAAKc,kBAAkB+U,QACvB7V,KAAKa,gBAAgBgV,QACjB7V,KAAKD,OAAO8B,OACdS,QAAQW,IAAI,mCAAoC,CAC9CmQ,IAAKpT,KAAK+R,eAAiB1G,KAAK+F,MAAMpR,KAAK+R,qBAAkB,EAC7DwB,IAAKvT,KAAKyS,cAAgBpH,KAAK+F,MAAMpR,KAAKyS,oBAAiB,GAGhE,EAEH,MAAM8D,EACJ,WAAAzW,CAAYC,GACVC,KAAKD,OAAS,CACZyW,QAAS,IACTC,QAAS,EACT5U,OAAO,KACJ9B,EAEN,CAID,YAAM2W,CAAOnM,GACX,MAAMkM,QAAEA,EAAU,GAAMzW,KAAKD,OAC7B,IAAI4W,EAAY,KAChB,IAAA,IAASC,EAAU,EAAGA,GAAWH,EAASG,IACpC,IACG5W,KAAAiD,IAAI,uBAAuB2T,UAChC,MAAMpM,QAAiBxK,KAAK6W,YAAYtM,GAEjC,OADPvK,KAAKiD,IAAI,YAAYsH,EAAQuM,MAAM3S,cAC5BqG,CACR,OAAQjK,GAGP,GAFYoW,EAAApW,EACPP,KAAAiD,IAAI,SAAS2T,KAAWH,OAAaE,EAAUnT,WAChDoT,EAAUH,EAAS,CACrB,MAAMM,EAAmC,IAA3B1L,KAAK2L,IAAI,EAAGJ,EAAU,GAC/B5W,KAAAiD,IAAI,MAAM8T,oBACT/W,KAAKiX,MAAMF,EAClB,CACF,CAEH,MAAM,IAAIxK,MAAM,qBAAqBkK,aAAmB,MAAAE,OAAA,EAAAA,EAAWnT,UACpE,CAID,iBAAMqT,CAAYtM,GAChB,MAAMnH,OAAEA,EAAQ8T,OAAAA,EAAAV,QAAQA,EAAU,KAAQxW,KAAKD,OACzCoX,EAAa,CAAA,EACR,IAAA,MAAAC,KAAQ7M,EAAQuM,MACrB,IACF,MAAMlV,QAAa5B,KAAKqX,kBAAkBD,EAAKE,SACpCH,EAAAC,EAAKrP,YAAcnG,CAC/B,OAAQrB,GACPP,KAAKiD,IAAI,aAAamU,EAAKrP,eAAexH,KAC/B4W,EAAAC,EAAKrP,YAAc,aAC/B,CAEG,MAAAwP,EAAW,IAAIC,SACZD,EAAAE,OAAO,YAAalN,EAAQ7F,WACrC6S,EAASE,OAAO,YAAalN,EAAQ1G,UAAU0H,YAC3ChB,EAAQmN,SACDH,EAAAE,OAAO,UAAWlN,EAAQmN,SAE/B,MAAAC,EAAe3X,KAAK4X,uBACjBL,EAAAE,OAAO,eAAgBE,GAChCJ,EAASE,OAAO,aAAchR,KAAKC,UAAUyQ,IACrC5M,EAAAuM,MAAM5F,QAASkG,IACb9U,QAAAW,IAAI,QAASmU,GACf,MAAApK,EAAO,IAAIC,KAAK,CAACmK,EAAKE,SAAU,CAAE3R,KAAM,qBAC9C4R,EAASE,OAAO,QAASzK,EAAMoK,EAAKtP,UAC3ByP,EAAAE,OAAO,cAAeL,EAAKrP,cAEhC,MAAA2D,EAAa,IAAIC,gBACjBC,EAAYC,WAAW,IAAMH,EAAWI,QAAS0K,GACnD,IACI,MAAAhM,QAAiBuB,MAAM3I,EAAQ,CACnC4I,OAAQ,OACRC,QAAS,CACP4L,cAAiB,UAAUX,KAG7BhL,KAAMqL,EACNnL,OAAQV,EAAWU,SAGjB,GADJC,aAAaT,IACRpB,EAAS8B,GAAI,CACV,MAAAwL,QAAkBtN,EAASuN,OACjC,MAAM,IAAIxL,MAAM,QAAQ/B,EAASgC,WAAWsL,IAC7C,CAEM,aADctN,EAASwN,MAE/B,OAAQzX,GAEP,GADA8L,aAAaT,GACTrL,aAAiBgM,MAAO,CACtB,GAAe,eAAfhM,EAAM6H,KACR,MAAM,IAAImE,MAAM,SAASiK,QAErB,MAAAjW,CACP,CACK,MAAA,IAAIgM,MAAM,OACjB,CACF,CAID,iBAAA0L,CAAkBX,GACZ,IACI,MAAAY,EAASzR,KAAK0R,MAAMb,GACnB,OAAmB,IAAnBY,EAAOR,SAAiBtC,MAAMgD,QAAQF,EAAOG,UAAuC,iBAApBH,EAAOI,QACpF,CAAY,MACC,OAAA,CACR,CACF,CAID,iBAAAC,CAAkBjB,GACZ,IACI,MAAAY,EAASzR,KAAK0R,MAAMb,GACpBkB,EAAa,CACjBd,QAASQ,EAAOR,QAChBW,QAASH,EAAOG,QAChBI,MAAOP,EAAOO,MACdH,SAAUJ,EAAOI,SACjBI,eAAgBR,EAAOQ,gBAElB,OAAAjS,KAAKC,UAAU8R,EAC5B,CAAY,MACC,OAAAlB,CACR,CACF,CAID,aAAAqB,CAAcC,GACL,OAAAA,EAAkBC,QAAQ,SAAU,GAC5C,CAID,uBAAMxB,CAAkBC,GAChB,MACA5T,GADU,IAAIoV,aACCC,OAAOzB,GACtB0B,QAAmBC,OAAOC,OAAOC,OAAO,UAAWzV,GAEzD,OADkB0R,MAAMhH,KAAK,IAAIgL,WAAWJ,IAC3BjE,IAAKC,GAAMA,EAAEzJ,SAAS,IAAI8N,SAAS,EAAG,MAAMC,KAAK,GACnE,CAID,oBAAA1B,GACQ,MAAA1W,MAA0BD,KAOzB,MAAA,GANMC,EAAIqY,gBACH7P,OAAOxI,EAAIsY,WAAa,GAAGH,SAAS,EAAG,OACzC3P,OAAOxI,EAAIuY,WAAWJ,SAAS,EAAG,OAChC3P,OAAOxI,EAAIwY,YAAYL,SAAS,EAAG,OACjC3P,OAAOxI,EAAIyY,cAAcN,SAAS,EAAG,OACrC3P,OAAOxI,EAAI0Y,cAAcP,SAAS,EAAG,MAEtD,CAID,KAAApC,CAAM4C,GACJ,OAAO,IAAIC,QAASC,GAAYlO,WAAWkO,EAASF,GACrD,CAID,GAAA5W,CAAIO,GACExD,KAAKD,OAAO8B,OACNS,QAAAW,IAAI,uBAAuBO,IAEtC,EAEH,MAAMwW,UAA8BzD,EAMlC,iBAAMM,CAAYtM,GACZ,GAAkB,oBAAX3F,OACH,MAAA,IAAI2H,MAAM,wCAEX,OAAAvM,KAAKia,gBAAgB1P,EAC7B,CAKD,qBAAM0P,CAAgB1P,GACd,MAAA2P,EAAQC,QAAQ,SAChBC,EAAOD,QAAQ,SACfE,IAAEA,GAAQF,QAAQ,OAClBG,EAAYH,QAAQ,cACpB/W,OAAEA,EAAQ8T,OAAAA,EAAAV,QAAQA,EAAU,KAAQxW,KAAKD,OACzC4E,EAAM,IAAI0V,EAAIjX,GACdmX,EAA2B,WAAjB5V,EAAI6V,SACdrD,EAAa,CAAA,EACR,IAAA,MAAAC,KAAQ7M,EAAQuM,MAAO,CAC1B,MACAlV,EADUuY,QAAQ,UACHM,WAAW,UAAUC,OAAOtD,EAAKE,SAAS6B,OAAO,OAC3DhC,EAAAC,EAAKrP,YAAcnG,CAC/B,CACD,OAAO,IAAIkY,QAAQ,CAACC,EAASY,KACrB,MAAA3G,EAAO,IAAIsG,EACZtG,EAAAyD,OAAO,YAAalN,EAAQ7F,WACjCsP,EAAKyD,OAAO,YAAalN,EAAQ1G,UAAU0H,YACvChB,EAAQmN,SACL1D,EAAAyD,OAAO,UAAWlN,EAAQmN,SAE3B,MAAAC,EAAe3X,KAAK4X,uBACrB5D,EAAAyD,OAAO,eAAgBE,GAC5B3D,EAAKyD,OAAO,aAAchR,KAAKC,UAAUyQ,IACjC5M,EAAAuM,MAAM5F,QAASkG,IACrBpD,EAAKyD,OAAO,QAASmD,OAAOxM,KAAKgJ,EAAKE,SAAU,CAC9CxP,SAAUsP,EAAKtP,SACf+S,YAAa,qBAEV7G,EAAAyD,OAAO,cAAeL,EAAKrP,cAElC,MAAM4J,EAAU,CACdmJ,SAAUnW,EAAImW,SACdC,KAAMpW,EAAIoW,OAASR,EAAU,IAAM,IACnCS,KAAMrW,EAAIjD,SAAWiD,EAAIhD,OACzBqK,OAAQ,OACRC,QAAS,CACP4L,cAAiB,UAAUX,OACxBlD,EAAKiH,cAEVzE,WAGI0E,GADSX,EAAUL,EAAQE,GACd7P,QAAQoH,EAAUwJ,IACnC,IAAIzX,EAAO,GACPyX,EAAAC,GAAG,OAASC,IACN3X,GAAA2X,IAENF,EAAAC,GAAG,MAAO,KACZ,GAAID,EAAIG,YAAcH,EAAIG,YAAc,KAAOH,EAAIG,WAAa,IAC1D,IACI,MAAAxR,EAASrD,KAAK0R,MAAMzU,GAC1BqW,EAAQjQ,EACT,OAAQvJ,GACAoa,EAAA,IAAIpO,MAAM,UAClB,MAEMoO,EAAA,IAAIpO,MAAM,QAAQ4O,EAAIG,eAAe5X,UAI9CwX,EAAAE,GAAG,QAAU7a,IACfoa,EAAOpa,KAEL2a,EAAAE,GAAG,UAAW,KAChBF,EAAI5E,UACJqE,EAAO,IAAIpO,MAAM,SAASiK,WAE5BxC,EAAKuH,KAAKL,IAEb,EAEH,IAEIM,EAiSAC,EAnSAC,EAAa,CAAEC,QAAS,CAAA,GACxBC,EAA6B,CAAA,EA6SjC,IAAIC,GATEJ,IACoBA,EAAA,EAEtBC,EAAWC,QArSf,WACM,GAAAH,EAA8C,OAAAI,EACVJ,EAAA,EACpC,IAAAM,EAAqBC,OAAOC,IAAI,8BAA+BC,EAAsBF,OAAOC,IAAI,kBAC3F,SAAAE,EAAQvW,EAAM5F,EAAQoc,GAC7B,IAAI7S,EAAM,KAGV,QAFW,IAAA6S,IAAa7S,EAAM,GAAK6S,QACnC,IAAWpc,EAAOuJ,MAAQA,EAAM,GAAKvJ,EAAOuJ,KACxC,QAASvJ,EAEX,IAAA,IAASqc,KADTD,EAAW,CAAA,EACUpc,EACnB,QAAUqc,IAAaD,EAASC,GAAYrc,EAAOqc,SACrCD,EAAApc,EAEX,OADPA,EAASoc,EAASE,IACX,CACLC,SAAUR,EACVnW,OACA2D,MACA+S,SAAK,IAAWtc,EAASA,EAAS,KAClCwc,MAAOJ,EAEV,CAIM,OAHPP,EAA2BY,SAAWP,EACtCL,EAA2Ba,IAAMP,EACjCN,EAA2Bc,KAAOR,EAC3BN,CACT,CA2QyBe,IAHWjB,EAAWC,SAU/C,MAAMiB,UAAsBC,EAAAA,UAC1B,WAAA/c,CAAYyc,GACVO,MAAMP,GACDvc,KAAA+c,MAAQ,CAAEC,UAAU,EAC1B,CACD,+BAAOC,CAAyB1c,GACvB,MAAA,CAAEyc,UAAU,EAAMzc,QAC1B,CACD,iBAAA2c,CAAkB3c,EAAOmH,GACvB,MAAMyV,QAAEA,EAAAzY,UAASA,EAAW6C,KAAAA,GAASvH,KAAKuc,MAC1C,GAAIY,EAAS,CAoBXA,EAnBkB,CAChBxX,KAAMlG,EAAU2d,YAChB5Z,QAASjD,EAAMiD,QACfoE,MAAOrH,EAAMqH,MACb/D,UAAW5C,KAAKC,MAChByD,IAAKC,OAAOnD,SAASoD,KACrBH,YACAxB,UAAWC,UAAUD,UACrB4B,YAAa,GAEbnB,YAAa,OACb4D,KAAMvH,KAAKmJ,UAAU5B,GAGrBO,cAAU,EACVC,gBAAY,EACZC,YAAQ,EACRC,WAAO,GAGV,CACO3F,QAAA/B,MAAM,iCAAkCA,EAAOmH,EACxD,CAED,SAAAyB,CAAU5B,GACR,IAAKA,EAAa,OAClB,MAAM6B,EAAU,CAAA,EAChB,IAAIC,EAAa,EACjB,IAAA,MAAYC,EAAKjB,KAAUkB,OAAOC,QAAQjC,GACpC,KAAA8B,GAAc,IAAMC,EAAInF,OAAS,KACxB,MAATkE,EAAe,CACX,MAAAoB,EAA4B,iBAAVpB,EAAqB5B,KAAKC,UAAU2B,GAASqB,OAAOrB,GACpEe,EAAAE,GAAOG,EAAStF,OAAS,IAAMsF,EAASlF,MAAM,EAAG,KAAO,MAAQ8D,EACxEgB,GACD,CAEI,OAAAA,EAAa,EAAID,OAAU,CACnC,CACD,MAAAiU,GACM,OAAArd,KAAK+c,MAAMC,SACNhd,KAAKuc,MAAMe,YAA8CZ,KAAK,MAAO,CAAEa,MAAO,CACnFC,QAAS,OACTC,UAAW,SACXC,MAAO,QACNC,SAAU,GACuBlB,IAAI,KAAM,CAAEkB,SAAU,iBACtBlB,IAAI,IAAK,CAAEkB,SAAU,uBACrB9B,EAAAY,IAChC,SACA,CACEmB,QAAS,IAAMhZ,OAAOnD,SAASoc,SAC/BN,MAAO,CACLC,QAAS,WACTM,gBAAiB,UACjBJ,MAAO,QACPK,OAAQ,OACRC,aAAc,MACdC,OAAQ,WAEVN,SAAU,YAKX3d,KAAKuc,MAAMoB,QACnB,EAEH,MAAMO,EAAgB,CACpBre,UACA+c,gBACArG,oBACAyD,wBACAmE,cAAgBpe,GAAW,IAAIF,EAAQE,GACvCqe,eAAiBre,GAER,IADiC,oBAAX6E,OAAyB2R,EAAoByD,GACjDja,GAE3Bse,QAAS,UAELC,EAAMJ,EACNG,EAAU,SAChB,SAASF,EAAcpe,GACd,OAAA,IAAIF,EAAQE,EACrB,CACA,SAASqe,EAAere,GAEf,OAAA,IADiC,oBAAX6E,OAAyB2R,EAAoByD,GACjDja,EAC3B,CACsB,oBAAX6E,SACTA,OAAOsZ,cAAgBA","sourcesContent":["import require$$0, { Component } from \"react\";\nvar ErrorType = /* @__PURE__ */ ((ErrorType2) => {\n  ErrorType2[\"JS_ERROR\"] = \"js_error\";\n  ErrorType2[\"PROMISE_ERROR\"] = \"promise_error\";\n  ErrorType2[\"RESOURCE_ERROR\"] = \"resource_error\";\n  ErrorType2[\"HTTP_ERROR\"] = \"http_error\";\n  ErrorType2[\"REACT_ERROR\"] = \"react_error\";\n  return ErrorType2;\n})(ErrorType || {});\nvar DataType = /* @__PURE__ */ ((DataType2) => {\n  DataType2[\"ERROR\"] = \"error\";\n  DataType2[\"PERFORMANCE\"] = \"performance\";\n  DataType2[\"BEHAVIOR\"] = \"behavior\";\n  return DataType2;\n})(DataType || {});\nclass Monitor {\n  constructor(config) {\n    this.initialized = false;\n    this.globalBreadcrumbs = [];\n    this.errorBreadcrumbs = [];\n    this.behaviorBreadcrumbs = [];\n    this.BREADCRUMB_LIMITS = {\n      global: 100,\n      // 全局最多保留100条\n      error: 15,\n      // 错误专用最多15条\n      behavior: 50\n      // 行为专用最多50条（定期清空）\n    };\n    this.failureCount = /* @__PURE__ */ new Map();\n    this.MAX_FAILURES = 5;\n    this.FAILURE_RESET_TIME = 3e5;\n    this.lastSuccessTime = /* @__PURE__ */ new Map();\n    this.disabledDataTypes = /* @__PURE__ */ new Set();\n    this.pageStartTime = Date.now();\n    this.totalVisibleTime = 0;\n    this.visibleStartTime = Date.now();\n    this.isPageVisible = !document.hidden;\n    this.currentRoute = location.pathname + location.search + location.hash;\n    this.config = {\n      debug: false,\n      sampleRate: 1,\n      maxBreadcrumbs: 10,\n      enabledModules: {\n        error: true,\n        performance: true,\n        behavior: true\n      },\n      ...config\n    };\n    this.sessionId = this.generateSessionId();\n    this.failureCount.set(\"error\", 0);\n    this.failureCount.set(\"performance\", 0);\n    this.failureCount.set(\"behavior\", 0);\n    if (this.config.maxBreadcrumbs) {\n      this.BREADCRUMB_LIMITS.error = this.config.maxBreadcrumbs;\n    }\n  }\n  async init() {\n    if (this.initialized) {\n      console.warn(\"Monitor has already been initialized\");\n      return;\n    }\n    try {\n      if (this.config.enabledModules?.error) {\n        this.initErrorMonitoring();\n      }\n      if (this.config.enabledModules?.performance) {\n        this.initPerformanceMonitoring();\n      }\n      if (this.config.enabledModules?.behavior) {\n        this.initBehaviorMonitoring();\n      }\n      this.initPageStayTimeTracking();\n      this.initSPARouteMonitoring();\n      this.startBatchReporting();\n      this.initialized = true;\n      if (this.config.debug) {\n        console.log(\"[MiniSentry] Monitor initialized successfully\", {\n          userAgent: navigator.userAgent,\n          apiUrl: this.config.apiUrl,\n          breadcrumbLimits: this.BREADCRUMB_LIMITS\n        });\n      }\n    } catch (error) {\n      console.error(\"[MiniSentry] Failed to initialize monitor:\", error);\n      throw error;\n    }\n  }\n  //保留：面包屑分类管理\n  addBreadcrumb(category, message, level = \"info\", data, captureType = \"manual\") {\n    const breadcrumb = {\n      category,\n      message,\n      level,\n      timestamp: Date.now(),\n      data: data ? this.optimizeDataSize(data) : void 0,\n      captureType\n    };\n    this.addToGlobalBreadcrumbs(breadcrumb);\n    this.addToErrorBreadcrumbs(breadcrumb);\n    this.addToBehaviorBreadcrumbs(breadcrumb);\n    if (this.config.debug) {\n      console.log(\"[MiniSentry]  面包屑已添加:\", {\n        category,\n        message,\n        globalCount: this.globalBreadcrumbs.length,\n        errorCount: this.errorBreadcrumbs.length,\n        behaviorCount: this.behaviorBreadcrumbs.length\n      });\n    }\n  }\n  addToGlobalBreadcrumbs(breadcrumb) {\n    this.globalBreadcrumbs.push(breadcrumb);\n    if (this.globalBreadcrumbs.length > this.BREADCRUMB_LIMITS.global) {\n      this.globalBreadcrumbs = this.globalBreadcrumbs.slice(-this.BREADCRUMB_LIMITS.global);\n    }\n  }\n  addToErrorBreadcrumbs(breadcrumb) {\n    this.errorBreadcrumbs.push(breadcrumb);\n    if (this.errorBreadcrumbs.length > this.BREADCRUMB_LIMITS.error) {\n      this.errorBreadcrumbs = this.errorBreadcrumbs.slice(-this.BREADCRUMB_LIMITS.error);\n    }\n  }\n  addToBehaviorBreadcrumbs(breadcrumb) {\n    this.behaviorBreadcrumbs.push(breadcrumb);\n    if (this.behaviorBreadcrumbs.length > this.BREADCRUMB_LIMITS.behavior) {\n      this.behaviorBreadcrumbs = this.behaviorBreadcrumbs.slice(-this.BREADCRUMB_LIMITS.behavior);\n    }\n  }\n  // 简化：行为数据收集，直接发送\n  collectAndSendBehaviorData() {\n    if (this.behaviorBreadcrumbs.length === 0) {\n      return;\n    }\n    const now = Date.now();\n    if (this.isPageVisible) {\n      this.totalVisibleTime += now - this.visibleStartTime;\n      this.visibleStartTime = now;\n    }\n    const behaviorData = {\n      projectId: this.config.projectId,\n      sessionId: this.sessionId,\n      url: window.location.href,\n      timestamp: now,\n      breadcrumbs: [...this.behaviorBreadcrumbs],\n      pageInfo: {\n        title: document.title,\n        stayTime: this.totalVisibleTime\n      },\n      userAgent: navigator.userAgent\n    };\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] 行为数据收集:\", {\n        behaviorBreadcrumbCount: this.behaviorBreadcrumbs.length,\n        errorBreadcrumbCount: this.errorBreadcrumbs.length,\n        stayTime: this.totalVisibleTime,\n        route: this.currentRoute\n      });\n    }\n    this.sendData(\"behavior\", this.convertToUnifiedFormat(behaviorData));\n    this.behaviorBreadcrumbs = [];\n    if (this.config.debug) {\n      console.log(\"[MiniSentry]  行为面包屑已清空，错误面包屑保留:\", {\n        behaviorBreadcrumbCount: this.behaviorBreadcrumbs.length,\n        errorBreadcrumbCount: this.errorBreadcrumbs.length\n      });\n    }\n  }\n  //  简化：错误上报，直接发送\n  reportError(error) {\n    if (!this.shouldSample()) return;\n    const errorWithBreadcrumbs = {\n      ...error,\n      breadcrumbs: [...this.errorBreadcrumbs]\n    };\n    if (this.config.debug) {\n      console.log(\"[MiniSentry]  错误上报:\", {\n        errorType: error.type,\n        message: error.message,\n        errorBreadcrumbCount: this.errorBreadcrumbs.length,\n        behaviorBreadcrumbCount: this.behaviorBreadcrumbs.length\n      });\n    }\n    this.sendData(\"error\", this.convertToUnifiedFormat(errorWithBreadcrumbs));\n  }\n  //  简化：性能数据收集，直接发送\n  collectPerformanceData() {\n    const performanceData = {\n      projectId: this.config.projectId,\n      url: window.location.href,\n      timestamp: Date.now(),\n      metrics: {\n        navigation: this.getNavigationTiming(),\n        vitals: this.getWebVitals()\n      },\n      userAgent: navigator.userAgent\n    };\n    if (this.config.debug) {\n      console.log(\"[MiniSentry]  性能数据收集:\", {\n        navigation: performanceData.metrics.navigation,\n        vitals: performanceData.metrics.vitals\n      });\n    }\n    this.sendData(\"performance\", this.convertToUnifiedFormat(performanceData));\n  }\n  // 新增：统一的数据发送方法\n  sendData(dataType, convertedData) {\n    if (!this.shouldSendDataType(dataType)) {\n      if (this.config.debug) {\n        console.warn(`[MiniSentry] ${dataType} 数据类型已被禁用，跳过发送`);\n      }\n      return;\n    }\n    if (!this.config.apiUrl) {\n      if (this.config.debug) {\n        console.warn(\"[MiniSentry] API URL 未配置，跳过发送\");\n      }\n      return;\n    }\n    const payload = [convertedData.data];\n    const apiUrl = this.buildApiUrl(dataType);\n    const jsonString = JSON.stringify(payload);\n    if (this.config.debug) {\n      console.log(`[MiniSentry] 📤 发送${dataType}数据到: ${apiUrl}`);\n    }\n    if (document.visibilityState === \"hidden\" || document.hidden) {\n      if (this.config.debug) {\n        console.log(`[MiniSentry] 🚪 页面卸载场景，使用sendBeacon`);\n      }\n      this.sendWithBeacon(apiUrl, jsonString, dataType);\n    } else {\n      this.sendWithFetch(apiUrl, jsonString, dataType);\n    }\n  }\n  //  简化：定时上报机制\n  startBatchReporting() {\n    this.reportTimer = window.setInterval(() => {\n      if (this.isAllDataTypesDisabled()) {\n        if (this.config.debug) {\n          console.log(\"[MiniSentry] 所有数据类型都已被禁用，停止定时器\");\n        }\n        if (this.reportTimer) {\n          clearInterval(this.reportTimer);\n          this.reportTimer = void 0;\n        }\n        return;\n      }\n      this.resetFailureCountIfNeeded();\n      this.collectAndSendBehaviorData();\n    }, 1e4);\n    window.addEventListener(\"beforeunload\", () => {\n      this.handlePageUnload();\n    });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.hidden) {\n        this.collectAndSendBehaviorData();\n      }\n    });\n  }\n  handlePageUnload() {\n    this.recordCurrentPageStayTime(this.currentRoute);\n    this.collectAndSendBehaviorData();\n  }\n  // 保留：手动上报方法\n  captureError(error, tags) {\n    if (!this.initialized) {\n      console.warn(\"[MiniSentry] Monitor not initialized\");\n      return;\n    }\n    const locationInfo = this.parseErrorStack(error);\n    const errorInfo = {\n      type: ErrorType.JS_ERROR,\n      message: error.message,\n      stack: error.stack,\n      timestamp: Date.now(),\n      url: window.location.href,\n      projectId: this.config.projectId,\n      userAgent: navigator.userAgent,\n      breadcrumbs: [...this.errorBreadcrumbs],\n      captureType: \"manual\",\n      tags: this.mergeTags(tags),\n      filename: locationInfo.filename,\n      jsFilename: locationInfo.jsFilename,\n      lineno: locationInfo.lineno,\n      colno: locationInfo.colno\n    };\n    this.reportError(errorInfo);\n  }\n  trackEvent(category, message, data) {\n    if (!this.initialized) {\n      console.warn(\"[MiniSentry] Monitor not initialized\");\n      return;\n    }\n    this.addBreadcrumb(category, message, \"info\", data, \"manual\");\n  }\n  trackMetric(name, value, tags) {\n    if (!this.initialized) {\n      console.warn(\"[MiniSentry] Monitor not initialized\");\n      return;\n    }\n    this.addBreadcrumb(\"performance\", `Custom metric: ${name} = ${value}`, \"info\", {\n      metricName: name,\n      metricValue: value,\n      ...tags\n    }, \"manual\");\n  }\n  trackBusiness(event, data) {\n    if (!this.initialized) {\n      console.warn(\"[MiniSentry] Monitor not initialized\");\n      return;\n    }\n    this.addBreadcrumb(\"user\", `Business event: ${event}`, \"info\", {\n      eventType: \"business\",\n      eventName: event,\n      ...data\n    }, \"manual\");\n  }\n  // 保留：工具方法\n  parseErrorStack(error) {\n    if (!error.stack) {\n      return { stack: void 0 };\n    }\n    try {\n      const stackLines = error.stack.split(\"\\n\");\n      for (const line of stackLines) {\n        const match = line.match(/(https?:\\/\\/[^)\\s]+\\/[^)\\s]*\\.([a-zA-Z0-9]+\\.)?js):(\\d+):(\\d+)/);\n        if (match) {\n          const [, url, , lineno, colno] = match;\n          const urlParts = url.split(\"/\");\n          const filename = urlParts[urlParts.length - 1];\n          return {\n            filename: url,\n            jsFilename: filename,\n            lineno: parseInt(lineno),\n            colno: parseInt(colno),\n            stack: error.stack\n          };\n        }\n      }\n    } catch (parseError) {\n      if (this.config.debug) {\n        console.warn(\"[MiniSentry] Failed to parse error stack:\", parseError);\n      }\n    }\n    return { stack: error.stack };\n  }\n  cleanTags(tags) {\n    if (!tags) return void 0;\n    const cleaned = {};\n    let fieldCount = 0;\n    for (const [key, value] of Object.entries(tags)) {\n      if (fieldCount >= 20 || key.length > 50) continue;\n      if (value != null) {\n        const valueStr = typeof value === \"object\" ? JSON.stringify(value) : String(value);\n        cleaned[key] = valueStr.length > 500 ? valueStr.slice(0, 500) + \"...\" : value;\n        fieldCount++;\n      }\n    }\n    return fieldCount > 0 ? cleaned : void 0;\n  }\n  mergeTags(userTags) {\n    const defaultTags = this.config.defaultTags;\n    if (!defaultTags && !userTags) return void 0;\n    const merged = {\n      ...defaultTags || {},\n      ...userTags || {}\n    };\n    return this.cleanTags(merged);\n  }\n  optimizeDataSize(data) {\n    const result = {};\n    const criticalFields = [\n      \"from\",\n      \"to\",\n      \"url\",\n      \"method\",\n      \"status\",\n      \"duration\",\n      \"tagName\",\n      \"id\",\n      \"metricName\",\n      \"metricValue\",\n      \"scrollPercent\",\n      \"route\",\n      \"title\",\n      \"referrer\",\n      \"filename\",\n      \"jsFilename\",\n      \"lineno\",\n      \"colno\"\n    ];\n    for (const [key, value] of Object.entries(data)) {\n      const maxLength = criticalFields.includes(key) ? 200 : 100;\n      if (typeof value === \"string\" && value.length > maxLength) {\n        result[key] = value.slice(0, maxLength) + \"...\";\n      } else {\n        result[key] = value;\n      }\n    }\n    return result;\n  }\n  convertToUnifiedFormat(data) {\n    const baseFields = {\n      projectId: data.projectId,\n      timestamp: data.timestamp,\n      sessionId: this.sessionId,\n      url: data.url,\n      userAgent: data.userAgent\n    };\n    if (\"type\" in data && \"message\" in data && \"breadcrumbs\" in data) {\n      const errorData = data;\n      const unified = {\n        ...baseFields,\n        captureType: errorData.captureType,\n        errorType: errorData.type,\n        message: errorData.message,\n        stack: errorData.stack,\n        breadcrumbs: errorData.breadcrumbs,\n        tags: errorData.tags,\n        filename: errorData.filename,\n        jsFilename: errorData.jsFilename,\n        lineno: errorData.lineno,\n        colno: errorData.colno\n      };\n      if (errorData.type === ErrorType.HTTP_ERROR) {\n        const httpError = errorData;\n        unified.request = httpError.request;\n        unified.response = httpError.response;\n        unified.duration = httpError.duration;\n      }\n      if (errorData.type === ErrorType.RESOURCE_ERROR) {\n        const resourceError = errorData;\n        unified.resourceType = resourceError.resourceType;\n        unified.resourceUrl = resourceError.resourceUrl;\n        unified.elementInfo = resourceError.elementInfo;\n      }\n      return { type: \"error\", data: unified };\n    }\n    if (\"metrics\" in data) {\n      const perfData = data;\n      return {\n        type: \"performance\",\n        data: {\n          ...baseFields,\n          captureType: \"auto\",\n          metrics: perfData.metrics\n        }\n      };\n    }\n    if (\"pageInfo\" in data && \"sessionId\" in data) {\n      const behaviorData = data;\n      return {\n        type: \"behavior\",\n        data: {\n          ...baseFields,\n          captureType: \"auto\",\n          breadcrumbs: behaviorData.breadcrumbs,\n          pageInfo: behaviorData.pageInfo\n        }\n      };\n    }\n    const fallbackData = data;\n    return {\n      type: \"error\",\n      data: {\n        projectId: fallbackData.projectId,\n        timestamp: fallbackData.timestamp,\n        sessionId: this.sessionId,\n        url: fallbackData.url,\n        userAgent: fallbackData.userAgent,\n        captureType: \"auto\"\n      }\n    };\n  }\n  shouldSendDataType(dataType) {\n    if (this.disabledDataTypes.has(dataType)) {\n      return false;\n    }\n    const failures = this.failureCount.get(dataType) || 0;\n    if (failures >= this.MAX_FAILURES) {\n      this.disabledDataTypes.add(dataType);\n      if (this.config.debug) {\n        console.warn(`[MiniSentry] ${dataType} 数据类型失败次数过多(${failures})，立即禁用`);\n      }\n      return false;\n    }\n    return true;\n  }\n  shouldSample() {\n    return Math.random() < (this.config.sampleRate || 1);\n  }\n  generateSessionId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n  buildApiUrl(dataType) {\n    let apiUrl = this.config.apiUrl;\n    if (!apiUrl.endsWith(\"/\")) {\n      apiUrl += \"/\";\n    }\n    return `${apiUrl}${dataType}`;\n  }\n  async sendWithFetch(apiUrl, jsonString, dataType) {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 1e4);\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: jsonString,\n        keepalive: true,\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      this.failureCount.set(dataType, 0);\n      this.lastSuccessTime.set(dataType, Date.now());\n      this.disabledDataTypes.delete(dataType);\n      if (this.config.debug) {\n        console.log(`[MiniSentry]  ${dataType} 数据发送成功`);\n      }\n    } catch (error) {\n      this.handleSendFailure(dataType, error, apiUrl, jsonString, false);\n    }\n  }\n  handleSendFailure(dataType, error, apiUrl, jsonString, fromSendBeacon = false) {\n    const currentFailures = this.failureCount.get(dataType) || 0;\n    if (fromSendBeacon) {\n      if (this.config.debug) {\n        console.warn(`[MiniSentry]  sendBeacon ${dataType} 发送失败，但不计入失败次数: ${error.message}`);\n      }\n      return;\n    }\n    const newFailures = currentFailures + 1;\n    this.failureCount.set(dataType, newFailures);\n    if (this.config.debug) {\n      console.warn(`[MiniSentry]  ${dataType} 数据发送失败 (${newFailures}/${this.MAX_FAILURES}): ${error.message}`);\n    }\n    if (newFailures >= this.MAX_FAILURES) {\n      this.disabledDataTypes.add(dataType);\n      console.error(`[MiniSentry] ${dataType} 数据发送已停止（连续失败${newFailures}次）`);\n      return;\n    }\n    if (this.config.debug) {\n      console.log(`[MiniSentry]  尝试使用sendBeacon降级发送 ${dataType} 数据`);\n    }\n    this.sendWithBeacon(apiUrl, jsonString, dataType);\n  }\n  sendWithBeacon(apiUrl, jsonString, dataType) {\n    if (!navigator.sendBeacon) {\n      if (this.config.debug) {\n        console.warn(`[MiniSentry] sendBeacon 不支持，跳过 ${dataType} 数据发送`);\n      }\n      return;\n    }\n    try {\n      const blob = new Blob([jsonString], { type: \"application/json\" });\n      const queued = navigator.sendBeacon(apiUrl, blob);\n      if (queued) {\n        if (this.config.debug) {\n          console.log(`[MiniSentry]  sendBeacon ${dataType} 已加入发送队列`);\n        }\n      } else {\n        const fallbackQueued = navigator.sendBeacon(apiUrl, jsonString);\n        if (!fallbackQueued) {\n          this.handleSendFailure(dataType, new Error(\"sendBeacon 队列已满或被拒绝\"), apiUrl, jsonString, true);\n        } else if (this.config.debug) {\n          console.log(`[MiniSentry]  sendBeacon(String) ${dataType} 已加入发送队列`);\n        }\n      }\n    } catch (error) {\n      this.handleSendFailure(dataType, error, apiUrl, jsonString, true);\n    }\n  }\n  isAllDataTypesDisabled() {\n    const allTypes = [\"error\", \"performance\", \"behavior\"];\n    return allTypes.every((type) => this.disabledDataTypes.has(type));\n  }\n  resetFailureCountIfNeeded() {\n    const now = Date.now();\n    for (const [dataType, lastSuccess] of this.lastSuccessTime.entries()) {\n      if (now - lastSuccess > this.FAILURE_RESET_TIME) {\n        const currentFailures = this.failureCount.get(dataType) || 0;\n        if (currentFailures > 0) {\n          this.failureCount.set(dataType, Math.max(0, currentFailures - 1));\n          this.disabledDataTypes.delete(dataType);\n          if (this.config.debug) {\n            console.log(`[MiniSentry] ${dataType} 失败计数已重置，重新启用发送`);\n          }\n        }\n      }\n    }\n  }\n  recordCurrentPageStayTime(route) {\n    const now = Date.now();\n    if (this.isPageVisible) {\n      this.totalVisibleTime += now - this.visibleStartTime;\n    }\n    const stayTimeData = {\n      route,\n      totalTime: now - this.pageStartTime,\n      visibleTime: this.totalVisibleTime,\n      title: document.title\n    };\n    this.addBreadcrumb(\"user\", `Page stay time recorded`, \"info\", stayTimeData, \"auto\");\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] Page stay time recorded:\", stayTimeData);\n    }\n  }\n  resetPageStayTime() {\n    const now = Date.now();\n    this.pageStartTime = now;\n    this.totalVisibleTime = 0;\n    this.visibleStartTime = now;\n    this.isPageVisible = !document.hidden;\n  }\n  initPageStayTimeTracking() {\n    document.addEventListener(\"visibilitychange\", () => {\n      const now = Date.now();\n      if (document.hidden) {\n        if (this.isPageVisible) {\n          this.totalVisibleTime += now - this.visibleStartTime;\n          this.isPageVisible = false;\n          this.addBreadcrumb(\"user\", \"Page became hidden\", \"info\", {\n            visibleTime: now - this.visibleStartTime,\n            totalVisibleTime: this.totalVisibleTime\n          }, \"auto\");\n        }\n      } else {\n        if (!this.isPageVisible) {\n          this.visibleStartTime = now;\n          this.isPageVisible = true;\n          this.addBreadcrumb(\"user\", \"Page became visible\", \"info\", void 0, \"auto\");\n        }\n      }\n    });\n    window.addEventListener(\"focus\", () => {\n      if (!this.isPageVisible) {\n        this.visibleStartTime = Date.now();\n        this.isPageVisible = true;\n        this.addBreadcrumb(\"user\", \"Page gained focus\", \"info\", void 0, \"auto\");\n      }\n    });\n    window.addEventListener(\"blur\", () => {\n      if (this.isPageVisible) {\n        this.totalVisibleTime += Date.now() - this.visibleStartTime;\n        this.isPageVisible = false;\n        this.addBreadcrumb(\"user\", \"Page lost focus\", \"info\", void 0, \"auto\");\n      }\n    });\n  }\n  initSPARouteMonitoring() {\n    this.addBreadcrumb(\"navigation\", `Initial route: ${this.currentRoute}`, \"info\", {\n      route: this.currentRoute,\n      title: document.title\n    }, \"auto\");\n    const originalPushState = history.pushState.bind(history);\n    const originalReplaceState = history.replaceState.bind(history);\n    history.pushState = (data, unused, url) => {\n      const result = originalPushState(data, unused, url);\n      this.handleRouteChange(\"push\", url?.toString() || location.href);\n      return result;\n    };\n    history.replaceState = (data, unused, url) => {\n      const result = originalReplaceState(data, unused, url);\n      this.handleRouteChange(\"replace\", url?.toString() || location.href);\n      return result;\n    };\n    window.addEventListener(\"popstate\", () => {\n      this.handleRouteChange(\"pop\", location.href);\n    });\n    window.addEventListener(\"hashchange\", (event) => {\n      this.handleRouteChange(\"hash\", event.newURL);\n    });\n  }\n  handleRouteChange(type, url) {\n    const newRoute = location.pathname + location.search + location.hash;\n    const oldRoute = this.currentRoute;\n    if (newRoute !== oldRoute) {\n      this.recordCurrentPageStayTime(oldRoute);\n      this.collectAndSendBehaviorData();\n      this.currentRoute = newRoute;\n      this.resetPageStayTime();\n      this.addBreadcrumb(\"navigation\", `Route ${type}: ${oldRoute} → ${newRoute}`, \"info\", {\n        type,\n        from: oldRoute,\n        to: newRoute,\n        title: document.title\n      }, \"auto\");\n      if (this.config.debug) {\n        console.log(`[MiniSentry] Route changed (${type}):`, { from: oldRoute, to: newRoute });\n      }\n    }\n  }\n  initErrorMonitoring() {\n    window.addEventListener(\"error\", (event) => {\n      if (event.target === window) {\n        const locationInfo = this.parseErrorStack(event.error || new Error(event.message));\n        const errorInfo = {\n          type: ErrorType.JS_ERROR,\n          message: event.message,\n          stack: event.error?.stack,\n          timestamp: Date.now(),\n          url: window.location.href,\n          projectId: this.config.projectId,\n          userAgent: navigator.userAgent,\n          breadcrumbs: [...this.errorBreadcrumbs],\n          captureType: \"auto\",\n          tags: this.mergeTags(),\n          filename: event.filename || locationInfo.filename,\n          jsFilename: locationInfo.jsFilename,\n          lineno: event.lineno || locationInfo.lineno,\n          colno: event.colno || locationInfo.colno\n        };\n        this.reportError(errorInfo);\n      }\n    });\n    window.addEventListener(\"unhandledrejection\", (event) => {\n      const error = event.reason;\n      const locationInfo = this.parseErrorStack(error instanceof Error ? error : new Error(String(error)));\n      const errorInfo = {\n        type: ErrorType.PROMISE_ERROR,\n        message: error?.message || String(error),\n        stack: error?.stack,\n        timestamp: Date.now(),\n        url: window.location.href,\n        projectId: this.config.projectId,\n        userAgent: navigator.userAgent,\n        breadcrumbs: [...this.errorBreadcrumbs],\n        captureType: \"auto\",\n        tags: this.mergeTags(),\n        filename: locationInfo.filename,\n        jsFilename: locationInfo.jsFilename,\n        lineno: locationInfo.lineno,\n        colno: locationInfo.colno\n      };\n      this.reportError(errorInfo);\n    });\n    window.addEventListener(\"error\", (event) => {\n      const target = event.target;\n      if (target && target !== window && target instanceof Element) {\n        const element = target;\n        const resourceError = {\n          type: ErrorType.RESOURCE_ERROR,\n          message: `Failed to load resource: ${element.src || element.href || \"unknown\"}`,\n          resourceType: element.tagName.toLowerCase(),\n          resourceUrl: element.src || element.href || \"\",\n          timestamp: Date.now(),\n          url: window.location.href,\n          projectId: this.config.projectId,\n          userAgent: navigator.userAgent,\n          breadcrumbs: [...this.errorBreadcrumbs],\n          elementInfo: {\n            tagName: element.tagName,\n            id: element.id || void 0\n          },\n          captureType: \"auto\",\n          tags: this.mergeTags()\n        };\n        this.reportError(resourceError);\n      }\n    }, true);\n    this.detectWhiteScreen();\n    this.initLongTaskMonitoring();\n    this.interceptFetch();\n    this.interceptXHR();\n  }\n  interceptXHR() {\n    const originalOpen = XMLHttpRequest.prototype.open;\n    const originalSend = XMLHttpRequest.prototype.send;\n    XMLHttpRequest.prototype.open = function(method, url, async, username, password) {\n      this._monitorData = {\n        method,\n        url: url.toString(),\n        startTime: Date.now()\n      };\n      return originalOpen.call(this, method, url, async === void 0 ? true : async, username, password);\n    };\n    XMLHttpRequest.prototype.send = function(body) {\n      const monitorData = this._monitorData;\n      if (!monitorData) return originalSend.call(this, body);\n      const monitor = window.monitor;\n      if (monitor) {\n        monitor.addBreadcrumb(\"http\", `XHR ${monitorData.method} ${monitorData.url}`, \"info\", {\n          url: monitorData.url,\n          method: monitorData.method\n        }, \"auto\");\n      }\n      this.addEventListener(\"loadend\", () => {\n        if (!monitor) return;\n        const duration = Date.now() - monitorData.startTime;\n        if (this.status >= 400) {\n          const httpError = {\n            type: ErrorType.HTTP_ERROR,\n            message: `XHR ${this.status}`,\n            timestamp: Date.now(),\n            url: window.location.href,\n            projectId: monitor.config.projectId,\n            userAgent: navigator.userAgent,\n            breadcrumbs: [...monitor.errorBreadcrumbs],\n            request: {\n              url: monitorData.url,\n              method: monitorData.method\n            },\n            response: {\n              status: this.status\n            },\n            duration,\n            captureType: \"auto\",\n            tags: monitor.mergeTags()\n          };\n          monitor.reportError(httpError);\n        }\n      });\n      return originalSend.call(this, body);\n    };\n  }\n  detectWhiteScreen() {\n    setTimeout(() => {\n      const hasContent = this.hasVisibleContent();\n      if (!hasContent) {\n        const errorInfo = {\n          type: ErrorType.JS_ERROR,\n          message: \"White screen detected - No visible content found\",\n          timestamp: Date.now(),\n          url: window.location.href,\n          projectId: this.config.projectId,\n          userAgent: navigator.userAgent,\n          breadcrumbs: [...this.errorBreadcrumbs],\n          captureType: \"auto\",\n          tags: this.mergeTags()\n        };\n        this.reportError(errorInfo);\n      }\n    }, 3e3);\n  }\n  hasVisibleContent() {\n    const body = document.body;\n    if (!body) return false;\n    const textContent = body.innerText?.trim();\n    if (textContent && textContent.length > 0) return true;\n    const images = body.querySelectorAll(\"img\");\n    for (const img of images) {\n      if (img.width > 0 && img.height > 0) return true;\n    }\n    const canvases = body.querySelectorAll(\"canvas\");\n    for (const canvas of canvases) {\n      if (canvas.width > 0 && canvas.height > 0) return true;\n    }\n    const svgs = body.querySelectorAll(\"svg\");\n    for (const svg of svgs) {\n      if (svg.getBoundingClientRect().width > 0) return true;\n    }\n    return false;\n  }\n  initLongTaskMonitoring() {\n    if (\"PerformanceObserver\" in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          list.getEntries().forEach((entry) => {\n            if (entry.duration > 50) {\n              this.addBreadcrumb(\n                \"performance\",\n                `Long task detected: ${Math.round(entry.duration)}ms`,\n                \"warning\",\n                {\n                  duration: Math.round(entry.duration),\n                  taskType: \"longtask\",\n                  startTime: Math.round(entry.startTime)\n                },\n                \"auto\"\n              );\n              if (entry.duration > 200) {\n                this.addBreadcrumb(\n                  \"performance\",\n                  `Severe blocking task: ${Math.round(entry.duration)}ms`,\n                  \"error\",\n                  {\n                    duration: Math.round(entry.duration),\n                    severity: \"high\"\n                  },\n                  \"auto\"\n                );\n              }\n            }\n          });\n        });\n        observer.observe({ entryTypes: [\"longtask\"] });\n      } catch (error) {\n        if (this.config.debug) {\n          console.warn(\"[MiniSentry] Long task monitoring not supported:\", error);\n        }\n      }\n    }\n  }\n  interceptFetch() {\n    const originalFetch = window.fetch;\n    window.fetch = async (...args) => {\n      const startTime = Date.now();\n      const [url, options = {}] = args;\n      this.addBreadcrumb(\"http\", `HTTP ${options.method || \"GET\"} ${url}`, \"info\", {\n        url: url.toString(),\n        method: options.method || \"GET\"\n      }, \"auto\");\n      try {\n        const response = await originalFetch(...args);\n        if (!response.ok) {\n          const httpError = {\n            type: ErrorType.HTTP_ERROR,\n            message: `HTTP ${response.status}`,\n            timestamp: Date.now(),\n            url: window.location.href,\n            projectId: this.config.projectId,\n            userAgent: navigator.userAgent,\n            breadcrumbs: [...this.errorBreadcrumbs],\n            request: {\n              url: url.toString(),\n              method: options.method || \"GET\"\n            },\n            response: {\n              status: response.status\n            },\n            duration: Date.now() - startTime,\n            captureType: \"auto\",\n            tags: this.mergeTags()\n          };\n          this.reportError(httpError);\n        }\n        return response;\n      } catch (error) {\n        const httpError = {\n          type: ErrorType.HTTP_ERROR,\n          message: `Network error: ${error.message}`,\n          stack: error.stack,\n          timestamp: Date.now(),\n          url: window.location.href,\n          projectId: this.config.projectId,\n          userAgent: navigator.userAgent,\n          breadcrumbs: [...this.errorBreadcrumbs],\n          request: {\n            url: url.toString(),\n            method: options.method || \"GET\"\n          },\n          duration: Date.now() - startTime,\n          captureType: \"auto\",\n          tags: this.mergeTags()\n        };\n        this.reportError(httpError);\n        throw error;\n      }\n    };\n  }\n  // 修复：性能监控初始化 - 调整时机\n  initPerformanceMonitoring() {\n    if (document.readyState === \"loading\") {\n      window.addEventListener(\"load\", () => {\n        setTimeout(() => this.collectPerformanceData(), 8e3);\n      });\n    } else {\n      setTimeout(() => this.collectPerformanceData(), 8e3);\n    }\n    this.observeWebVitals();\n  }\n  // 修复：完善的Web Vitals观察器 - 确保FCP和LCP完全独立\n  // 1. 完全重写observeWebVitals方法 - 增加严格的独立性检查\n  observeWebVitals() {\n    if (\"PerformanceObserver\" in window) {\n      try {\n        const fcpObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          for (const entry of entries) {\n            if (entry.name === \"first-contentful-paint\" && this.latestFcpValue === void 0) {\n              this.latestFcpValue = entry.startTime;\n              if (this.config.debug) {\n                console.log(`[MiniSentry] ✅ FCP观察器独立记录: ${Math.round(entry.startTime)}ms (LCP保持: ${this.latestLcpValue})`);\n              }\n              this.addBreadcrumb(\"performance\", `FCP: ${Math.round(entry.startTime)}ms`, \"info\", {\n                metric: \"fcp\",\n                value: Math.round(entry.startTime),\n                source: \"observer\"\n              }, \"auto\");\n              fcpObserver.disconnect();\n              break;\n            }\n          }\n        });\n        fcpObserver.observe({ entryTypes: [\"paint\"] });\n        if (this.config.debug) {\n          console.log(\"[MiniSentry] 🔍 FCP观察器已启动（独立模式）\");\n        }\n      } catch (error) {\n        if (this.config.debug) {\n          console.warn(\"[MiniSentry] ❌ FCP观察器初始化失败:\", error);\n        }\n      }\n      try {\n        this.lcpObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          if (entries.length > 0) {\n            const lcpEntry = entries[entries.length - 1];\n            const previousLcpValue = this.latestLcpValue;\n            this.latestLcpValue = lcpEntry.startTime;\n            if (this.config.debug) {\n              console.log(`[MiniSentry] 🔄 LCP观察器独立更新: ${Math.round(lcpEntry.startTime)}ms (FCP保持: ${this.latestFcpValue}) 元素:${lcpEntry.element?.tagName}`);\n            }\n            this.addBreadcrumb(\"performance\", `LCP: ${Math.round(lcpEntry.startTime)}ms`, \"info\", {\n              metric: \"lcp\",\n              value: Math.round(lcpEntry.startTime),\n              element: lcpEntry.element?.tagName,\n              size: lcpEntry.size,\n              source: \"observer\"\n            }, \"auto\");\n          }\n        });\n        this.lcpObserver.observe({ entryTypes: [\"largest-contentful-paint\"] });\n        if (this.config.debug) {\n          console.log(\"[MiniSentry] 🔍 LCP观察器已启动（独立模式）\");\n        }\n      } catch (error) {\n        if (this.config.debug) {\n          console.warn(\"[MiniSentry] ❌ LCP观察器初始化失败:\", error);\n        }\n      }\n    } else {\n      if (this.config.debug) {\n        console.warn(\"[MiniSentry] ⚠️ PerformanceObserver不支持\");\n      }\n    }\n    this.setupLcpFinalization();\n  }\n  // 修复：设置LCP最终确定机制\n  setupLcpFinalization() {\n    const finalizeLcp = () => {\n      if (this.latestLcpValue !== void 0 && this.lcpFinalValue === void 0) {\n        this.lcpFinalValue = this.latestLcpValue;\n        if (this.lcpObserver) {\n          this.lcpObserver.disconnect();\n          this.lcpObserver = void 0;\n        }\n        if (this.config.debug) {\n          console.log(`[MiniSentry] 🏁 LCP最终确定: ${Math.round(this.lcpFinalValue)}ms`);\n        }\n      } else if (this.config.debug && this.latestLcpValue === void 0) {\n        console.log(\"[MiniSentry] 🤷 LCP最终确定时无数据，页面可能没有明显的最大内容元素\");\n      }\n    };\n    window.addEventListener(\"beforeunload\", finalizeLcp);\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.hidden) {\n        finalizeLcp();\n      }\n    });\n    setTimeout(() => {\n      finalizeLcp();\n    }, 1e4);\n  }\n  getNavigationTiming() {\n    try {\n      const navigation = performance.getEntriesByType(\"navigation\")[0];\n      if (navigation) {\n        return {\n          domReady: Math.max(0, navigation.domContentLoadedEventEnd - navigation.fetchStart),\n          loadComplete: Math.max(0, navigation.loadEventEnd - navigation.fetchStart)\n        };\n      }\n    } catch (error) {\n    }\n    try {\n      const timing = performance.timing;\n      if (timing) {\n        return {\n          domReady: Math.max(0, timing.domContentLoadedEventEnd - timing.navigationStart),\n          loadComplete: Math.max(0, timing.loadEventEnd - timing.navigationStart)\n        };\n      }\n    } catch (error) {\n    }\n    return {\n      domReady: 0,\n      loadComplete: 0\n    };\n  }\n  // 修复：准确获取Web Vitals数据 - 确保FCP和LCP完全独立\n  // 4. 修复getWebVitals方法 - 增加严格的独立性验证\n  getWebVitals() {\n    const result = {};\n    const fcpValue = this.getFcpValue();\n    if (fcpValue !== void 0) {\n      result.fcp = fcpValue;\n    }\n    const lcpValue = this.getLcpValue();\n    if (lcpValue !== void 0) {\n      const lcpEntries = performance.getEntriesByType(\"largest-contentful-paint\");\n      if (lcpEntries.length > 0) {\n        result.lcp = lcpValue;\n        if (this.config.debug) {\n          console.log(`[MiniSentry] ✅ LCP验证通过: ${Math.round(lcpValue)}ms`);\n        }\n      } else {\n        if (this.config.debug) {\n          console.warn(\"[MiniSentry] 🚨 LCP验证失败：SDK有值但API无数据，丢弃LCP值\");\n        }\n      }\n    }\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] 📈 最终Web Vitals:\", {\n        fcp: result.fcp ? `${Math.round(result.fcp)}ms` : \"undefined\",\n        lcp: result.lcp ? `${Math.round(result.lcp)}ms` : \"undefined\",\n        验证: `API中LCP条目数: ${performance.getEntriesByType(\"largest-contentful-paint\").length}`\n      });\n    }\n    return result;\n  }\n  // 修复：独立的FCP获取方法 - 绝不使用LCP数据\n  // 2. 完全重写getFcpValue方法 - 绝对独立，永不访问LCP数据\n  getFcpValue() {\n    if (this.latestFcpValue !== void 0) {\n      if (this.config.debug) {\n        console.log(`[MiniSentry] 📊 FCP使用观察器值: ${Math.round(this.latestFcpValue)}ms`);\n      }\n      return this.latestFcpValue;\n    }\n    try {\n      const paintEntries = performance.getEntriesByType(\"paint\");\n      const fcpEntry = paintEntries.find((entry) => entry.name === \"first-contentful-paint\");\n      if (fcpEntry && fcpEntry.startTime > 0) {\n        if (this.latestFcpValue === void 0) {\n          this.latestFcpValue = fcpEntry.startTime;\n          if (this.config.debug) {\n            console.log(`[MiniSentry] 📊 FCP使用Paint API值: ${Math.round(fcpEntry.startTime)}ms (LCP不受影响)`);\n          }\n        }\n        return fcpEntry.startTime;\n      }\n    } catch (error) {\n      if (this.config.debug) {\n        console.warn(\"[MiniSentry] ⚠️ 获取FCP失败:\", error);\n      }\n    }\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] ❌ FCP无数据 - 页面可能还没有内容绘制\");\n    }\n    return void 0;\n  }\n  // 修复：独立的LCP获取方法 - 绝不使用FCP数据\n  // 3. 完全重写getLcpValue方法 - 绝对独立，永不访问FCP数据\n  getLcpValue() {\n    try {\n      const lcpEntries = performance.getEntriesByType(\"largest-contentful-paint\");\n      if (lcpEntries.length === 0) {\n        if (this.config.debug) {\n          console.log(\"[MiniSentry] ❌ 浏览器API中没有LCP数据，返回undefined（不使用FCP值）\");\n        }\n        return void 0;\n      }\n      const latestLcp = lcpEntries[lcpEntries.length - 1];\n      if (latestLcp && latestLcp.startTime > 0) {\n        if (this.latestFcpValue && Math.abs(latestLcp.startTime - this.latestFcpValue) < 1) {\n          if (this.config.debug) {\n            console.warn(\"[MiniSentry] ⚠️ LCP值与FCP相同，但API确实有LCP数据，属于正常情况\");\n          }\n        }\n        this.latestLcpValue = latestLcp.startTime;\n        if (this.config.debug) {\n          console.log(`[MiniSentry] ✅ LCP从API获取: ${Math.round(latestLcp.startTime)}ms`);\n        }\n        return latestLcp.startTime;\n      }\n    } catch (error) {\n      if (this.config.debug) {\n        console.warn(\"[MiniSentry] ⚠️ 获取LCP失败:\", error);\n      }\n    }\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] ❌ LCP数据不可用，返回undefined（绝不使用FCP）\");\n    }\n    return void 0;\n  }\n  initBehaviorMonitoring() {\n    this.addBreadcrumb(\"navigation\", `Page loaded: ${window.location.href}`, \"info\", {\n      title: document.title,\n      referrer: document.referrer,\n      timestamp: Date.now()\n    }, \"auto\");\n    document.addEventListener(\"click\", (event) => {\n      const target = event.target;\n      const elementInfo = {\n        tagName: target.tagName\n      };\n      if (target.id) {\n        elementInfo.id = target.id;\n      }\n      this.addBreadcrumb(\n        \"user\",\n        `Clicked on ${target.tagName}${target.id ? `#${target.id}` : \"\"}`,\n        \"info\",\n        elementInfo,\n        \"auto\"\n      );\n    }, true);\n    document.addEventListener(\"submit\", (event) => {\n      const form = event.target;\n      this.addBreadcrumb(\n        \"user\",\n        `Form submitted`,\n        \"info\",\n        {\n          action: form.action || \"current_page\",\n          method: form.method || \"GET\"\n        },\n        \"auto\"\n      );\n    }, true);\n    let inputTimer;\n    document.addEventListener(\"input\", (event) => {\n      const target = event.target;\n      clearTimeout(inputTimer);\n      inputTimer = window.setTimeout(() => {\n        this.addBreadcrumb(\n          \"user\",\n          `Input changed: ${target.tagName}(${target.type})`,\n          \"info\",\n          void 0,\n          \"auto\"\n        );\n      }, 1e3);\n    }, true);\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Enter\" || event.key === \"Escape\") {\n        this.addBreadcrumb(\n          \"user\",\n          `Key pressed: ${event.key}`,\n          \"info\",\n          void 0,\n          \"auto\"\n        );\n      }\n      if (event.ctrlKey && [\"s\", \"z\"].includes(event.key)) {\n        this.addBreadcrumb(\n          \"user\",\n          `Shortcut: Ctrl+${event.key.toUpperCase()}`,\n          \"info\",\n          void 0,\n          \"auto\"\n        );\n      }\n    });\n    let scrollTimer;\n    window.addEventListener(\"scroll\", () => {\n      clearTimeout(scrollTimer);\n      scrollTimer = window.setTimeout(() => {\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        const scrollHeight = document.documentElement.scrollHeight;\n        const clientHeight = window.innerHeight;\n        const scrollPercent = Math.round(scrollTop / (scrollHeight - clientHeight) * 100);\n        if (scrollPercent % 25 === 0) {\n          this.addBreadcrumb(\n            \"user\",\n            `Scrolled to ${scrollPercent}%`,\n            \"info\",\n            { scrollPercent },\n            \"auto\"\n          );\n        }\n      }, 1e3);\n    });\n  }\n  //  新增：获取面包屑状态\n  getBreadcrumbStatus() {\n    return {\n      global: {\n        count: this.globalBreadcrumbs.length,\n        limit: this.BREADCRUMB_LIMITS.global,\n        latest: this.globalBreadcrumbs.slice(-3).map((b) => ({\n          category: b.category,\n          message: b.message,\n          timestamp: b.timestamp\n        }))\n      },\n      error: {\n        count: this.errorBreadcrumbs.length,\n        limit: this.BREADCRUMB_LIMITS.error,\n        latest: this.errorBreadcrumbs.slice(-3).map((b) => ({\n          category: b.category,\n          message: b.message,\n          timestamp: b.timestamp\n        }))\n      },\n      behavior: {\n        count: this.behaviorBreadcrumbs.length,\n        limit: this.BREADCRUMB_LIMITS.behavior,\n        latest: this.behaviorBreadcrumbs.slice(-3).map((b) => ({\n          category: b.category,\n          message: b.message,\n          timestamp: b.timestamp\n        }))\n      }\n    };\n  }\n  clearBreadcrumbs(type = \"all\") {\n    switch (type) {\n      case \"global\":\n        this.globalBreadcrumbs = [];\n        break;\n      case \"error\":\n        this.errorBreadcrumbs = [];\n        break;\n      case \"behavior\":\n        this.behaviorBreadcrumbs = [];\n        break;\n      case \"all\":\n        this.globalBreadcrumbs = [];\n        this.errorBreadcrumbs = [];\n        this.behaviorBreadcrumbs = [];\n        break;\n    }\n    if (this.config.debug) {\n      console.log(`[MiniSentry]  ${type} 面包屑已清空`);\n    }\n  }\n  getSendStatus() {\n    return {\n      failureCount: Object.fromEntries(this.failureCount),\n      disabledDataTypes: Array.from(this.disabledDataTypes),\n      lastSuccessTime: Object.fromEntries(this.lastSuccessTime),\n      maxFailures: this.MAX_FAILURES\n    };\n  }\n  getStatus() {\n    return {\n      initialized: this.initialized,\n      sessionId: this.sessionId,\n      currentRoute: this.currentRoute,\n      breadcrumbStatus: this.getBreadcrumbStatus(),\n      pageStayTime: {\n        total: Date.now() - this.pageStartTime,\n        visible: this.totalVisibleTime + (this.isPageVisible ? Date.now() - this.visibleStartTime : 0)\n      },\n      sendStatus: this.getSendStatus()\n    };\n  }\n  resetSendStatus() {\n    this.failureCount.clear();\n    this.disabledDataTypes.clear();\n    this.lastSuccessTime.clear();\n    this.failureCount.set(\"error\", 0);\n    this.failureCount.set(\"performance\", 0);\n    this.failureCount.set(\"behavior\", 0);\n    if (this.reportTimer) {\n      clearInterval(this.reportTimer);\n    }\n    this.startBatchReporting();\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] 发送状态已重置，定时器已重启\");\n    }\n  }\n  // 增强版调试方法\n  getVitalsStatus() {\n    return {\n      fcp: {\n        observed: this.latestFcpValue,\n        final: this.latestFcpValue,\n        // FCP通常不需要最终确定\n        available: this.latestFcpValue !== void 0,\n        source: this.latestFcpValue !== void 0 ? \"observer/api\" : \"none\"\n      },\n      lcp: {\n        observed: this.latestLcpValue,\n        final: this.lcpFinalValue,\n        available: this.latestLcpValue !== void 0 || this.lcpFinalValue !== void 0,\n        observerActive: this.lcpObserver !== void 0,\n        source: this.lcpFinalValue !== void 0 ? \"final\" : this.latestLcpValue !== void 0 ? \"observer\" : \"none\"\n      },\n      debug: {\n        // 验证是否存在错误赋值\n        possibleIncorrectAssignment: this.latestFcpValue !== void 0 && this.latestLcpValue !== void 0 && this.latestFcpValue === this.latestLcpValue,\n        // 检查Performance API原始数据\n        performanceAPI: {\n          paintEntries: typeof performance !== \"undefined\" ? performance.getEntriesByType(\"paint\").length : 0,\n          lcpEntries: typeof performance !== \"undefined\" ? performance.getEntriesByType(\"largest-contentful-paint\").length : 0\n        }\n      }\n    };\n  }\n  // 修复：销毁时清理观察器\n  destroy() {\n    this.initialized = false;\n    if (this.reportTimer) {\n      clearInterval(this.reportTimer);\n    }\n    if (this.lcpObserver) {\n      this.lcpObserver.disconnect();\n      this.lcpObserver = void 0;\n    }\n    if (this.latestLcpValue !== void 0 && this.lcpFinalValue === void 0) {\n      this.lcpFinalValue = this.latestLcpValue;\n    }\n    this.collectAndSendBehaviorData();\n    this.globalBreadcrumbs = [];\n    this.errorBreadcrumbs = [];\n    this.behaviorBreadcrumbs = [];\n    this.failureCount.clear();\n    this.disabledDataTypes.clear();\n    this.lastSuccessTime.clear();\n    if (this.config.debug) {\n      console.log(\"[MiniSentry] 🔚 Monitor已销毁，最终状态:\", {\n        fcp: this.latestFcpValue ? Math.round(this.latestFcpValue) : void 0,\n        lcp: this.lcpFinalValue ? Math.round(this.lcpFinalValue) : void 0\n      });\n    }\n  }\n}\nclass SourceMapUploader {\n  constructor(config) {\n    this.config = {\n      timeout: 3e4,\n      retries: 3,\n      debug: false,\n      ...config\n    };\n  }\n  /**\n   * 上传sourcemap文件到后端\n   */\n  async upload(request) {\n    const { retries = 3 } = this.config;\n    let lastError = null;\n    for (let attempt = 1; attempt <= retries; attempt++) {\n      try {\n        this.log(`开始上传sourcemap文件，尝试第 ${attempt} 次...`);\n        const response = await this.makeRequest(request);\n        this.log(`上传成功！上传了 ${request.files.length} 个文件`);\n        return response;\n      } catch (error) {\n        lastError = error;\n        this.log(`上传失败 (${attempt}/${retries}): ${lastError.message}`);\n        if (attempt < retries) {\n          const delay = Math.pow(2, attempt - 1) * 1e3;\n          this.log(`等待 ${delay}ms 后重试...`);\n          await this.sleep(delay);\n        }\n      }\n    }\n    throw new Error(`上传sourcemap失败，已重试 ${retries} 次。最后错误: ${lastError?.message}`);\n  }\n  /**\n   * 发送HTTP请求（浏览器环境实现）\n   */\n  async makeRequest(request) {\n    const { apiUrl, apiKey, timeout = 3e4 } = this.config;\n    const fileHashes = {};\n    for (const file of request.files) {\n      try {\n        const hash = await this.calculateFileHash(file.content);\n        fileHashes[file.jsFilename] = hash;\n      } catch (error) {\n        this.log(`计算文件哈希失败: ${file.jsFilename}, ${error}`);\n        fileHashes[file.jsFilename] = \"hash_failed\";\n      }\n    }\n    const formData = new FormData();\n    formData.append(\"projectId\", request.projectId);\n    formData.append(\"timestamp\", request.timestamp.toString());\n    if (request.version) {\n      formData.append(\"version\", request.version);\n    }\n    const buildVersion = this.generateBuildVersion();\n    formData.append(\"buildVersion\", buildVersion);\n    formData.append(\"fileHashes\", JSON.stringify(fileHashes));\n    request.files.forEach((file) => {\n      console.log(\"处理文件:\", file);\n      const blob = new Blob([file.content], { type: \"application/json\" });\n      formData.append(\"files\", blob, file.filename);\n      formData.append(\"jsFilenames\", file.jsFilename);\n    });\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n    try {\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${apiKey}`\n          // 不要设置Content-Type，让浏览器自动设置包含boundary的multipart/form-data\n        },\n        body: formData,\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const result = await response.json();\n      return result;\n    } catch (error) {\n      clearTimeout(timeoutId);\n      if (error instanceof Error) {\n        if (error.name === \"AbortError\") {\n          throw new Error(`请求超时 (${timeout}ms)`);\n        }\n        throw error;\n      }\n      throw new Error(\"未知错误\");\n    }\n  }\n  /**\n   * 验证sourcemap文件格式\n   */\n  validateSourceMap(content) {\n    try {\n      const parsed = JSON.parse(content);\n      return parsed.version === 3 && Array.isArray(parsed.sources) && typeof parsed.mappings === \"string\";\n    } catch {\n      return false;\n    }\n  }\n  /**\n   * 压缩sourcemap内容（移除不必要的字段）\n   */\n  compressSourceMap(content) {\n    try {\n      const parsed = JSON.parse(content);\n      const compressed = {\n        version: parsed.version,\n        sources: parsed.sources,\n        names: parsed.names,\n        mappings: parsed.mappings,\n        sourcesContent: parsed.sourcesContent\n      };\n      return JSON.stringify(compressed);\n    } catch {\n      return content;\n    }\n  }\n  /**\n   * 从文件名提取对应的JS文件名\n   */\n  getJsFilename(sourceMapFilename) {\n    return sourceMapFilename.replace(/\\.map$/, \"\");\n  }\n  /**\n   * 计算文件内容的SHA-256哈希\n   */\n  async calculateFileHash(content) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(content);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n  }\n  /**\n   * 生成构建版本号\n   */\n  generateBuildVersion() {\n    const now = /* @__PURE__ */ new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}${month}${day}${hours}${minutes}${seconds}`;\n  }\n  /**\n   * 睡眠指定毫秒数\n   */\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  /**\n   * 调试日志\n   */\n  log(message) {\n    if (this.config.debug) {\n      console.log(`[SourceMapUploader] ${message}`);\n    }\n  }\n}\nclass NodeSourceMapUploader extends SourceMapUploader {\n  /**\n   * Node.js环境下的HTTP请求实现\n   * 注意：此类仅在Node.js环境（webpack插件）中使用\n   * 浏览器环境的webpack打包会排除此类\n   */\n  async makeRequest(request) {\n    if (typeof window !== \"undefined\") {\n      throw new Error(\"NodeSourceMapUploader只能在Node.js环境中使用\");\n    }\n    return this.makeNodeRequest(request);\n  }\n  /**\n   * 私有方法：Node.js请求实现\n   * 这个方法只会在Node.js环境中被调用\n   */\n  async makeNodeRequest(request) {\n    const https = require(\"https\");\n    const http = require(\"http\");\n    const { URL } = require(\"url\");\n    const FormData2 = require(\"form-data\");\n    const { apiUrl, apiKey, timeout = 3e4 } = this.config;\n    const url = new URL(apiUrl);\n    const isHttps = url.protocol === \"https:\";\n    const fileHashes = {};\n    for (const file of request.files) {\n      const crypto2 = require(\"crypto\");\n      const hash = crypto2.createHash(\"sha256\").update(file.content).digest(\"hex\");\n      fileHashes[file.jsFilename] = hash;\n    }\n    return new Promise((resolve, reject) => {\n      const form = new FormData2();\n      form.append(\"projectId\", request.projectId);\n      form.append(\"timestamp\", request.timestamp.toString());\n      if (request.version) {\n        form.append(\"version\", request.version);\n      }\n      const buildVersion = this.generateBuildVersion();\n      form.append(\"buildVersion\", buildVersion);\n      form.append(\"fileHashes\", JSON.stringify(fileHashes));\n      request.files.forEach((file) => {\n        form.append(\"files\", Buffer.from(file.content), {\n          filename: file.filename,\n          contentType: \"application/json\"\n        });\n        form.append(\"jsFilenames\", file.jsFilename);\n      });\n      const options = {\n        hostname: url.hostname,\n        port: url.port || (isHttps ? 443 : 80),\n        path: url.pathname + url.search,\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${apiKey}`,\n          ...form.getHeaders()\n        },\n        timeout\n      };\n      const client = isHttps ? https : http;\n      const req = client.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode && res.statusCode >= 200 && res.statusCode < 300) {\n            try {\n              const result = JSON.parse(data);\n              resolve(result);\n            } catch (error) {\n              reject(new Error(\"响应解析失败\"));\n            }\n          } else {\n            reject(new Error(`HTTP ${res.statusCode}: ${data}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.on(\"timeout\", () => {\n        req.destroy();\n        reject(new Error(`请求超时 (${timeout}ms)`));\n      });\n      form.pipe(req);\n    });\n  }\n}\nvar jsxRuntime = { exports: {} };\nvar reactJsxRuntime_production = {};\nvar hasRequiredReactJsxRuntime_production;\nfunction requireReactJsxRuntime_production() {\n  if (hasRequiredReactJsxRuntime_production) return reactJsxRuntime_production;\n  hasRequiredReactJsxRuntime_production = 1;\n  var REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"), REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n  function jsxProd(type, config, maybeKey) {\n    var key = null;\n    void 0 !== maybeKey && (key = \"\" + maybeKey);\n    void 0 !== config.key && (key = \"\" + config.key);\n    if (\"key\" in config) {\n      maybeKey = {};\n      for (var propName in config)\n        \"key\" !== propName && (maybeKey[propName] = config[propName]);\n    } else maybeKey = config;\n    config = maybeKey.ref;\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type,\n      key,\n      ref: void 0 !== config ? config : null,\n      props: maybeKey\n    };\n  }\n  reactJsxRuntime_production.Fragment = REACT_FRAGMENT_TYPE;\n  reactJsxRuntime_production.jsx = jsxProd;\n  reactJsxRuntime_production.jsxs = jsxProd;\n  return reactJsxRuntime_production;\n}\nvar reactJsxRuntime_development = {};\nvar hasRequiredReactJsxRuntime_development;\nfunction requireReactJsxRuntime_development() {\n  if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;\n  hasRequiredReactJsxRuntime_development = 1;\n  \"production\" !== process.env.NODE_ENV && function() {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\"number\" === typeof type.tag && console.error(\n          \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n        ), type.$$typeof) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type || (type = innerType.displayName || innerType.name || \"\", type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\");\n            return type;\n          case REACT_MEMO_TYPE:\n            return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || \"Memo\";\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {\n            }\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = false;\n      } catch (e) {\n        JSCompiler_inline_result = true;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 = \"function\" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\"object\" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE)\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return false;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown || (specialPropKeyWarningShown = true, console.error(\n          \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n          displayName\n        ));\n      }\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = true, console.error(\n        \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n      ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(type, key, self, source, owner, props, debugStack, debugTask) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type,\n        key,\n        props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null) ? Object.defineProperty(type, \"ref\", {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning\n      }) : Object.defineProperty(type, \"ref\", { enumerable: false, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, source, self, debugStack, debugTask) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function(k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren = 0 < keys.length ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\", console.error(\n          'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n          isStaticChildren,\n          children,\n          keys,\n          children\n        ), didWarnAboutKeySpread[children + isStaticChildren] = true);\n      }\n      children = null;\n      void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = \"\" + maybeKey);\n      hasValidKey(config) && (checkKeyStringCoercion(config.key), children = \"\" + config.key);\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children && defineKeyPropWarningGetter(\n        maybeKey,\n        \"function\" === typeof type ? type.displayName || type.name || \"Unknown\" : type\n      );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);\n    }\n    var React = require$$0, REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"), REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"), REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"), REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"), REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"), REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"), REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"), REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"), REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"), REACT_MEMO_TYPE = Symbol.for(\"react.memo\"), REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"), REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"), REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {\n      return null;\n    };\n    React = {\n      react_stack_bottom_frame: function(callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;\n    reactJsxRuntime_development.jsx = function(type, config, maybeKey, source, self) {\n      var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        false,\n        source,\n        self,\n        trackActualOwner ? Error(\"react-stack-top-frame\") : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    reactJsxRuntime_development.jsxs = function(type, config, maybeKey, source, self) {\n      var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        true,\n        source,\n        self,\n        trackActualOwner ? Error(\"react-stack-top-frame\") : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  }();\n  return reactJsxRuntime_development;\n}\nvar hasRequiredJsxRuntime;\nfunction requireJsxRuntime() {\n  if (hasRequiredJsxRuntime) return jsxRuntime.exports;\n  hasRequiredJsxRuntime = 1;\n  if (process.env.NODE_ENV === \"production\") {\n    jsxRuntime.exports = requireReactJsxRuntime_production();\n  } else {\n    jsxRuntime.exports = requireReactJsxRuntime_development();\n  }\n  return jsxRuntime.exports;\n}\nvar jsxRuntimeExports = requireJsxRuntime();\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n  componentDidCatch(error, errorInfo) {\n    const { onError, projectId, tags } = this.props;\n    if (onError) {\n      const errorData = {\n        type: ErrorType.REACT_ERROR,\n        message: error.message,\n        stack: error.stack,\n        timestamp: Date.now(),\n        url: window.location.href,\n        projectId,\n        userAgent: navigator.userAgent,\n        breadcrumbs: [],\n        // React错误边界中没有面包屑上下文\n        captureType: \"auto\",\n        tags: this.cleanTags(tags),\n        //  React错误边界中通常无法获取精确的文件位置信息\n        // 这些字段保持undefined，让Monitor的parseErrorStack来处理\n        filename: void 0,\n        jsFilename: void 0,\n        lineno: void 0,\n        colno: void 0\n      };\n      onError(errorData);\n    }\n    console.error(\"ErrorBoundary caught an error:\", error, errorInfo);\n  }\n  // 简化的标签清理方法（与Monitor.ts保持一致）\n  cleanTags(tags) {\n    if (!tags) return void 0;\n    const cleaned = {};\n    let fieldCount = 0;\n    for (const [key, value] of Object.entries(tags)) {\n      if (fieldCount >= 20 || key.length > 50) continue;\n      if (value != null) {\n        const valueStr = typeof value === \"object\" ? JSON.stringify(value) : String(value);\n        cleaned[key] = valueStr.length > 500 ? valueStr.slice(0, 500) + \"...\" : value;\n        fieldCount++;\n      }\n    }\n    return fieldCount > 0 ? cleaned : void 0;\n  }\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || /* @__PURE__ */ jsxRuntimeExports.jsxs(\"div\", { style: {\n        padding: \"20px\",\n        textAlign: \"center\",\n        color: \"#666\"\n      }, children: [\n        /* @__PURE__ */ jsxRuntimeExports.jsx(\"h2\", { children: \"抱歉，页面出现了错误\" }),\n        /* @__PURE__ */ jsxRuntimeExports.jsx(\"p\", { children: \"我们已经记录了这个问题，请稍后重试。\" }),\n        /* @__PURE__ */ jsxRuntimeExports.jsx(\n          \"button\",\n          {\n            onClick: () => window.location.reload(),\n            style: {\n              padding: \"8px 16px\",\n              backgroundColor: \"#1890ff\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"刷新页面\"\n          }\n        )\n      ] });\n    }\n    return this.props.children;\n  }\n}\nconst MiniSentrySDK = {\n  Monitor,\n  ErrorBoundary,\n  SourceMapUploader,\n  NodeSourceMapUploader,\n  createMonitor: (config) => new Monitor(config),\n  createUploader: (config) => {\n    const UploaderClass = typeof window !== \"undefined\" ? SourceMapUploader : NodeSourceMapUploader;\n    return new UploaderClass(config);\n  },\n  VERSION: \"1.1.34\"\n};\nconst SDK = MiniSentrySDK;\nconst VERSION = \"1.1.34\";\nfunction createMonitor(config) {\n  return new Monitor(config);\n}\nfunction createUploader(config) {\n  const UploaderClass = typeof window !== \"undefined\" ? SourceMapUploader : NodeSourceMapUploader;\n  return new UploaderClass(config);\n}\nif (typeof window !== \"undefined\") {\n  window.MiniSentrySDK = MiniSentrySDK;\n}\nexport {\n  DataType,\n  ErrorBoundary,\n  ErrorType,\n  Monitor,\n  NodeSourceMapUploader,\n  SDK,\n  SourceMapUploader,\n  VERSION,\n  createMonitor,\n  createUploader,\n  Monitor as default\n};\n"]}